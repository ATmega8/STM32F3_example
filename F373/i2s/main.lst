
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000184 <__do_global_dtors_aux>:
 8000184:	b510      	push	{r4, lr}
 8000186:	4c05      	ldr	r4, [pc, #20]	; (800019c <__do_global_dtors_aux+0x18>)
 8000188:	7823      	ldrb	r3, [r4, #0]
 800018a:	b933      	cbnz	r3, 800019a <__do_global_dtors_aux+0x16>
 800018c:	4804      	ldr	r0, [pc, #16]	; (80001a0 <__do_global_dtors_aux+0x1c>)
 800018e:	b110      	cbz	r0, 8000196 <__do_global_dtors_aux+0x12>
 8000190:	4804      	ldr	r0, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x20>)
 8000192:	f3af 8000 	nop.w
 8000196:	2101      	movs	r1, #1
 8000198:	7021      	strb	r1, [r4, #0]
 800019a:	bd10      	pop	{r4, pc}
 800019c:	200000a8 	.word	0x200000a8
 80001a0:	00000000 	.word	0x00000000
 80001a4:	080019f4 	.word	0x080019f4

080001a8 <frame_dummy>:
 80001a8:	b508      	push	{r3, lr}
 80001aa:	4b06      	ldr	r3, [pc, #24]	; (80001c4 <frame_dummy+0x1c>)
 80001ac:	b11b      	cbz	r3, 80001b6 <frame_dummy+0xe>
 80001ae:	4806      	ldr	r0, [pc, #24]	; (80001c8 <frame_dummy+0x20>)
 80001b0:	4906      	ldr	r1, [pc, #24]	; (80001cc <frame_dummy+0x24>)
 80001b2:	f3af 8000 	nop.w
 80001b6:	4806      	ldr	r0, [pc, #24]	; (80001d0 <frame_dummy+0x28>)
 80001b8:	6801      	ldr	r1, [r0, #0]
 80001ba:	b111      	cbz	r1, 80001c2 <frame_dummy+0x1a>
 80001bc:	4a05      	ldr	r2, [pc, #20]	; (80001d4 <frame_dummy+0x2c>)
 80001be:	b102      	cbz	r2, 80001c2 <frame_dummy+0x1a>
 80001c0:	4790      	blx	r2
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	080019f4 	.word	0x080019f4
 80001cc:	200000ac 	.word	0x200000ac
 80001d0:	200000a4 	.word	0x200000a4
 80001d4:	00000000 	.word	0x00000000

080001d8 <_mainCRTStartup>:
 80001d8:	4b15      	ldr	r3, [pc, #84]	; (8000230 <_mainCRTStartup+0x58>)
 80001da:	2b00      	cmp	r3, #0
 80001dc:	bf08      	it	eq
 80001de:	4b13      	ldreq	r3, [pc, #76]	; (800022c <_mainCRTStartup+0x54>)
 80001e0:	469d      	mov	sp, r3
 80001e2:	f5a3 3a80 	sub.w	sl, r3, #65536	; 0x10000
 80001e6:	2100      	movs	r1, #0
 80001e8:	468b      	mov	fp, r1
 80001ea:	460f      	mov	r7, r1
 80001ec:	4813      	ldr	r0, [pc, #76]	; (800023c <_mainCRTStartup+0x64>)
 80001ee:	4a14      	ldr	r2, [pc, #80]	; (8000240 <_mainCRTStartup+0x68>)
 80001f0:	1a12      	subs	r2, r2, r0
 80001f2:	f001 fb97 	bl	8001924 <memset>
 80001f6:	4b0f      	ldr	r3, [pc, #60]	; (8000234 <_mainCRTStartup+0x5c>)
 80001f8:	2b00      	cmp	r3, #0
 80001fa:	d000      	beq.n	80001fe <_mainCRTStartup+0x26>
 80001fc:	4798      	blx	r3
 80001fe:	4b0e      	ldr	r3, [pc, #56]	; (8000238 <_mainCRTStartup+0x60>)
 8000200:	2b00      	cmp	r3, #0
 8000202:	d000      	beq.n	8000206 <_mainCRTStartup+0x2e>
 8000204:	4798      	blx	r3
 8000206:	2000      	movs	r0, #0
 8000208:	2100      	movs	r1, #0
 800020a:	4604      	mov	r4, r0
 800020c:	460d      	mov	r5, r1
 800020e:	2000      	movs	r0, #0
 8000210:	490c      	ldr	r1, [pc, #48]	; (8000244 <_mainCRTStartup+0x6c>)
 8000212:	2200      	movs	r2, #0
 8000214:	2300      	movs	r3, #0
 8000216:	f001 fb29 	bl	800186c <__register_exitproc>
 800021a:	f001 fb5d 	bl	80018d8 <__libc_init_array>
 800021e:	4620      	mov	r0, r4
 8000220:	4629      	mov	r1, r5
 8000222:	f001 fb89 	bl	8001938 <main>
 8000226:	f001 fb2b 	bl	8001880 <exit>
 800022a:	bf00      	nop
 800022c:	00080000 	.word	0x00080000
	...
 800023c:	200000a8 	.word	0x200000a8
 8000240:	200000c8 	.word	0x200000c8
 8000244:	080018ad 	.word	0x080018ad

08000248 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop

0800024c <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 800024c:	e7fe      	b.n	800024c <HardFault_Handler>
 800024e:	bf00      	nop

08000250 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8000250:	e7fe      	b.n	8000250 <MemManage_Handler>
 8000252:	bf00      	nop

08000254 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8000254:	e7fe      	b.n	8000254 <BusFault_Handler>
 8000256:	bf00      	nop

08000258 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8000258:	e7fe      	b.n	8000258 <UsageFault_Handler>
 800025a:	bf00      	nop

0800025c <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 800025c:	4770      	bx	lr
 800025e:	bf00      	nop

08000260 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop

08000264 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 8000264:	4770      	bx	lr
 8000266:	bf00      	nop

08000268 <SPI1_IRQHandler>:
  * @retval None
  */
static uint16_t rx_buf = 0;
void SPI1_IRQHandler(void)
{
	if(SPI_I2S_GetITStatus(SPI1, SPI_I2S_IT_RXNE) != RESET)
 8000268:	f44f 5040 	mov.w	r0, #12288	; 0x3000
  * @param  None
  * @retval None
  */
static uint16_t rx_buf = 0;
void SPI1_IRQHandler(void)
{
 800026c:	b510      	push	{r4, lr}
	if(SPI_I2S_GetITStatus(SPI1, SPI_I2S_IT_RXNE) != RESET)
 800026e:	f2c4 0001 	movt	r0, #16385	; 0x4001
 8000272:	2160      	movs	r1, #96	; 0x60
 8000274:	f000 fe9e 	bl	8000fb4 <SPI_I2S_GetITStatus>
 8000278:	b900      	cbnz	r0, 800027c <SPI1_IRQHandler+0x14>
 800027a:	bd10      	pop	{r4, pc}
	{
			rx_buf = SPI_I2S_ReceiveData16(SPI1);
 800027c:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 8000280:	f2c4 0001 	movt	r0, #16385	; 0x4001
 8000284:	f000 fe30 	bl	8000ee8 <SPI_I2S_ReceiveData16>
 8000288:	4c1b      	ldr	r4, [pc, #108]	; (80002f8 <SPI1_IRQHandler+0x90>)
 800028a:	8020      	strh	r0, [r4, #0]

			SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, DISABLE);
 800028c:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 8000290:	f2c4 0001 	movt	r0, #16385	; 0x4001
 8000294:	2160      	movs	r1, #96	; 0x60
 8000296:	2200      	movs	r2, #0
 8000298:	f000 fe6a 	bl	8000f70 <SPI_I2S_ITConfig>
			USART_SendData(USART2, ((rx_buf & 0xFF00 )>> 8));
 800029c:	8821      	ldrh	r1, [r4, #0]
 800029e:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 80002a2:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80002a6:	0a09      	lsrs	r1, r1, #8
 80002a8:	f000 ffd8 	bl	800125c <USART_SendData>
			while(USART_GetFlagStatus(USART2, USART_FLAG_TC) == RESET);
 80002ac:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 80002b0:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80002b4:	2140      	movs	r1, #64	; 0x40
 80002b6:	f001 f8c3 	bl	8001440 <USART_GetFlagStatus>
 80002ba:	2800      	cmp	r0, #0
 80002bc:	d0f6      	beq.n	80002ac <SPI1_IRQHandler+0x44>
			USART_SendData(USART2, ((rx_buf & 0x00FF) | 0x0100));
 80002be:	7822      	ldrb	r2, [r4, #0]
 80002c0:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 80002c4:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80002c8:	f442 7180 	orr.w	r1, r2, #256	; 0x100
 80002cc:	f000 ffc6 	bl	800125c <USART_SendData>
			while(USART_GetFlagStatus(USART2, USART_FLAG_TC) == RESET);
 80002d0:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 80002d4:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80002d8:	2140      	movs	r1, #64	; 0x40
 80002da:	f001 f8b1 	bl	8001440 <USART_GetFlagStatus>
 80002de:	2800      	cmp	r0, #0
 80002e0:	d0f6      	beq.n	80002d0 <SPI1_IRQHandler+0x68>
			SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, ENABLE);
 80002e2:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 80002e6:	f2c4 0001 	movt	r0, #16385	; 0x4001
 80002ea:	2160      	movs	r1, #96	; 0x60
 80002ec:	2201      	movs	r2, #1
	}
}
 80002ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, DISABLE);
			USART_SendData(USART2, ((rx_buf & 0xFF00 )>> 8));
			while(USART_GetFlagStatus(USART2, USART_FLAG_TC) == RESET);
			USART_SendData(USART2, ((rx_buf & 0x00FF) | 0x0100));
			while(USART_GetFlagStatus(USART2, USART_FLAG_TC) == RESET);
			SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, ENABLE);
 80002f2:	f000 be3d 	b.w	8000f70 <SPI_I2S_ITConfig>
 80002f6:	bf00      	nop
 80002f8:	200000c4 	.word	0x200000c4

080002fc <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80002fc:	f44f 426d 	mov.w	r2, #60672	; 0xed00
 8000300:	f2ce 0200 	movt	r2, #57344	; 0xe000
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000304:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000308:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800030c:	f2c4 0302 	movt	r3, #16386	; 0x4002
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000310:	f441 0070 	orr.w	r0, r1, #15728640	; 0xf00000
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000314:	b410      	push	{r4}
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000316:	f8c2 0088 	str.w	r0, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 800031a:	681c      	ldr	r4, [r3, #0]
 800031c:	f044 0201 	orr.w	r2, r4, #1
 8000320:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR &= 0xF87FC00C;
 8000322:	6859      	ldr	r1, [r3, #4]
 8000324:	f24c 000c 	movw	r0, #49164	; 0xc00c
 8000328:	f6cf 007f 	movt	r0, #63615	; 0xf87f
 800032c:	4008      	ands	r0, r1
 800032e:	6058      	str	r0, [r3, #4]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000330:	681c      	ldr	r4, [r3, #0]
 8000332:	f024 7284 	bic.w	r2, r4, #17301504	; 0x1080000
 8000336:	f422 3180 	bic.w	r1, r2, #65536	; 0x10000
 800033a:	6019      	str	r1, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 800033c:	6818      	ldr	r0, [r3, #0]
 800033e:	f420 2480 	bic.w	r4, r0, #262144	; 0x40000
 8000342:	601c      	str	r4, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8000344:	685a      	ldr	r2, [r3, #4]
 8000346:	f422 01fe 	bic.w	r1, r2, #8323072	; 0x7f0000
 800034a:	6059      	str	r1, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 800034c:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800034e:	f020 040f 	bic.w	r4, r0, #15
 8000352:	62dc      	str	r4, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 8000354:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8000356:	f64f 42cc 	movw	r2, #64716	; 0xfccc
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 800035a:	f44f 5000 	mov.w	r0, #8192	; 0x2000

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 800035e:	f6cf 7200 	movt	r2, #65280	; 0xff00
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000362:	b083      	sub	sp, #12
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 8000364:	f2c4 0002 	movt	r0, #16386	; 0x4002

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 8000368:	4022      	ands	r2, r4
 800036a:	631a      	str	r2, [r3, #48]	; 0x30
  
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800036c:	2100      	movs	r1, #0
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 800036e:	2212      	movs	r2, #18

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
  
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000370:	6099      	str	r1, [r3, #8]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000372:	9100      	str	r1, [sp, #0]
 8000374:	9101      	str	r1, [sp, #4]
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 8000376:	6002      	str	r2, [r0, #0]
 
  /* HCLK = SYSCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000378:	6858      	ldr	r0, [r3, #4]
 800037a:	6058      	str	r0, [r3, #4]
      
  /* PCLK = HCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2 | (uint32_t)RCC_CFGR_PPRE2_DIV1;
 800037c:	6859      	ldr	r1, [r3, #4]
 800037e:	f441 6280 	orr.w	r2, r1, #1024	; 0x400
 8000382:	605a      	str	r2, [r3, #4]

  /* PLL configuration */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 8000384:	6858      	ldr	r0, [r3, #4]
 8000386:	f420 117c 	bic.w	r1, r0, #4128768	; 0x3f0000
 800038a:	6059      	str	r1, [r3, #4]
  RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL16);
 800038c:	685a      	ldr	r2, [r3, #4]
 800038e:	f442 1060 	orr.w	r0, r2, #3670016	; 0x380000
 8000392:	6058      	str	r0, [r3, #4]
            
  /* Enable PLL */
  RCC->CR |= RCC_CR_PLLON;
 8000394:	6819      	ldr	r1, [r3, #0]
 8000396:	f041 7280 	orr.w	r2, r1, #16777216	; 0x1000000
 800039a:	601a      	str	r2, [r3, #0]

  /* Wait till PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 800039c:	6818      	ldr	r0, [r3, #0]
 800039e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80003a2:	0181      	lsls	r1, r0, #6
 80003a4:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80003a8:	d5f8      	bpl.n	800039c <SystemInit+0xa0>
  {
  }

  /* Select PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80003aa:	6853      	ldr	r3, [r2, #4]
 80003ac:	f023 0103 	bic.w	r1, r3, #3
 80003b0:	6051      	str	r1, [r2, #4]
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 80003b2:	6850      	ldr	r0, [r2, #4]
 80003b4:	f040 0302 	orr.w	r3, r0, #2
 80003b8:	6053      	str	r3, [r2, #4]

  /* Wait till PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 80003ba:	6851      	ldr	r1, [r2, #4]
 80003bc:	f001 000c 	and.w	r0, r1, #12
 80003c0:	2808      	cmp	r0, #8
 80003c2:	d1fa      	bne.n	80003ba <SystemInit+0xbe>
  SetSysClock();
  
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 80003c4:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 80003c8:	f2ce 0300 	movt	r3, #57344	; 0xe000
 80003cc:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80003d0:	609a      	str	r2, [r3, #8]
#endif  
}
 80003d2:	b003      	add	sp, #12
 80003d4:	bc10      	pop	{r4}
 80003d6:	4770      	bx	lr

080003d8 <SystemCoreClockUpdate>:
void SystemCoreClockUpdate (void)
{
  uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 80003d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80003dc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80003e0:	685a      	ldr	r2, [r3, #4]
 80003e2:	f002 000c 	and.w	r0, r2, #12
  
  switch (tmp)
 80003e6:	2808      	cmp	r0, #8
 80003e8:	d010      	beq.n	800040c <SystemCoreClockUpdate+0x34>
 80003ea:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 80003ee:	f2c0 017a 	movt	r1, #122	; 0x7a
      SystemCoreClock = HSI_VALUE;
      break;
  }
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80003f2:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80003f6:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80003fa:	4812      	ldr	r0, [pc, #72]	; (8000444 <SystemCoreClockUpdate+0x6c>)
 80003fc:	6853      	ldr	r3, [r2, #4]
 80003fe:	f3c3 1203 	ubfx	r2, r3, #4, #4
 8000402:	5c83      	ldrb	r3, [r0, r2]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
 8000404:	fa21 f103 	lsr.w	r1, r1, r3
 8000408:	6101      	str	r1, [r0, #16]
 800040a:	4770      	bx	lr
    case 0x04:  /* HSE used as system clock */
      SystemCoreClock = HSE_VALUE;
      break;
    case 0x08:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 800040c:	685a      	ldr	r2, [r3, #4]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 800040e:	6858      	ldr	r0, [r3, #4]
      pllmull = ( pllmull >> 18) + 2;
 8000410:	f3c2 4183 	ubfx	r1, r2, #18, #4
 8000414:	1c8a      	adds	r2, r1, #2
      
      if (pllsource == 0x00)
 8000416:	03c0      	lsls	r0, r0, #15
 8000418:	d406      	bmi.n	8000428 <SystemCoreClockUpdate+0x50>
      {
        /* HSI oscillator clock divided by 2 selected as PLL clock entry */
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 800041a:	f44f 6310 	mov.w	r3, #2304	; 0x900
 800041e:	f2c0 033d 	movt	r3, #61	; 0x3d
 8000422:	fb03 f102 	mul.w	r1, r3, r2
 8000426:	e7e4      	b.n	80003f2 <SystemCoreClockUpdate+0x1a>
      }
      else
      {
        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 8000428:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
        /* HSE oscillator clock selected as PREDIV1 clock entry */
        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 800042a:	f44f 5390 	mov.w	r3, #4608	; 0x1200
        /* HSI oscillator clock divided by 2 selected as PLL clock entry */
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
      }
      else
      {
        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 800042e:	f000 010f 	and.w	r1, r0, #15
 8000432:	1c48      	adds	r0, r1, #1
        /* HSE oscillator clock selected as PREDIV1 clock entry */
        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 8000434:	f2c0 037a 	movt	r3, #122	; 0x7a
 8000438:	fbb3 f1f0 	udiv	r1, r3, r0
 800043c:	fb02 f101 	mul.w	r1, r2, r1
 8000440:	e7d7      	b.n	80003f2 <SystemCoreClockUpdate+0x1a>
 8000442:	bf00      	nop
 8000444:	20000004 	.word	0x20000004

08000448 <i2s_config>:
#include "main.h"

void i2s_config(void)
{
 8000448:	b570      	push	{r4, r5, r6, lr}
	GPIO_InitTypeDef GPIO_InitStructure;
	I2S_InitTypeDef I2S_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 800044a:	2101      	movs	r1, #1
#include "main.h"

void i2s_config(void)
{
 800044c:	b088      	sub	sp, #32
	GPIO_InitTypeDef GPIO_InitStructure;
	I2S_InitTypeDef I2S_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;

	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 800044e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8000452:	f000 fb57 	bl	8000b04 <RCC_AHBPeriphClockCmd>
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SPI1, ENABLE);
 8000456:	2101      	movs	r1, #1
 8000458:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 800045c:	f000 fb60 	bl	8000b20 <RCC_APB2PeriphClockCmd>

     /*要检查引脚映射是否一致*/
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource4, GPIO_AF_5);
 8000460:	2104      	movs	r1, #4
 8000462:	2205      	movs	r2, #5
 8000464:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000468:	f001 f978 	bl	800175c <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_5);
 800046c:	2105      	movs	r1, #5
 800046e:	460a      	mov	r2, r1
 8000470:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000474:	f001 f972 	bl	800175c <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource6, GPIO_AF_5);
 8000478:	2106      	movs	r1, #6
 800047a:	2205      	movs	r2, #5
 800047c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000480:	f001 f96c 	bl	800175c <GPIO_PinAFConfig>
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource7, GPIO_AF_5);
 8000484:	2205      	movs	r2, #5
 8000486:	2107      	movs	r1, #7
 8000488:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800048c:	f001 f966 	bl	800175c <GPIO_PinAFConfig>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000490:	2400      	movs	r4, #0
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource4, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource6, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource7, GPIO_AF_5);

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
 8000492:	2340      	movs	r3, #64	; 0x40
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 8000494:	2502      	movs	r5, #2
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000496:	2603      	movs	r6, #3
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000498:	a902      	add	r1, sp, #8
 800049a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource4, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource5, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource6, GPIO_AF_5);
	GPIO_PinAFConfig(GPIOA, GPIO_PinSource7, GPIO_AF_5);

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_6;
 800049e:	9302      	str	r3, [sp, #8]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 80004a0:	f88d 500c 	strb.w	r5, [sp, #12]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80004a4:	f88d 400e 	strb.w	r4, [sp, #14]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80004a8:	f88d 600d 	strb.w	r6, [sp, #13]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80004ac:	f88d 400f 	strb.w	r4, [sp, #15]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80004b0:	f001 f860 	bl	8001574 <GPIO_Init>

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 80004b4:	2230      	movs	r2, #48	; 0x30
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80004b6:	a902      	add	r1, sp, #8
 80004b8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 80004bc:	9202      	str	r2, [sp, #8]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80004be:	f88d 400f 	strb.w	r4, [sp, #15]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80004c2:	f001 f857 	bl	8001574 <GPIO_Init>
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 ;
 80004c6:	2380      	movs	r3, #128	; 0x80
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80004c8:	a902      	add	r1, sp, #8
 80004ca:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000

	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 ;
 80004ce:	9302      	str	r3, [sp, #8]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 80004d0:	f88d 500f 	strb.w	r5, [sp, #15]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 80004d4:	f001 f84e 	bl	8001574 <GPIO_Init>

	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;
	I2S_InitStructure.I2S_DataFormat = I2S_DataFormat_24b;
	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
	I2S_InitStructure.I2S_AudioFreq = I2S_AudioFreq_32k;
 80004d8:	f44f 42fa 	mov.w	r2, #32000	; 0x7d00

	
	/* I2S Slave Receiver configuration */
	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;  
	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;
	I2S_Init(SPI1, &I2S_InitStructure);	
 80004dc:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 80004e0:	a904      	add	r1, sp, #16
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;
	I2S_InitStructure.I2S_DataFormat = I2S_DataFormat_24b;
	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
	I2S_InitStructure.I2S_AudioFreq = I2S_AudioFreq_32k;
 80004e2:	9206      	str	r2, [sp, #24]

	
	/* I2S Slave Receiver configuration */
	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;  
 80004e4:	f44f 7340 	mov.w	r3, #768	; 0x300
	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;
 80004e8:	f44f 7200 	mov.w	r2, #512	; 0x200
	I2S_Init(SPI1, &I2S_InitStructure);	
 80004ec:	f2c4 0001 	movt	r0, #16385	; 0x4001
	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
	I2S_InitStructure.I2S_AudioFreq = I2S_AudioFreq_32k;

	
	/* I2S Slave Receiver configuration */
	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;  
 80004f0:	f8ad 3010 	strh.w	r3, [sp, #16]
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 ;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;
 80004f4:	f8ad 4012 	strh.w	r4, [sp, #18]
	I2S_InitStructure.I2S_DataFormat = I2S_DataFormat_24b;
 80004f8:	f8ad 6014 	strh.w	r6, [sp, #20]
	I2S_InitStructure.I2S_CPOL = I2S_CPOL_Low;
 80004fc:	f8ad 401c 	strh.w	r4, [sp, #28]
	I2S_InitStructure.I2S_AudioFreq = I2S_AudioFreq_32k;

	
	/* I2S Slave Receiver configuration */
	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;  
	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;
 8000500:	f8ad 2016 	strh.w	r2, [sp, #22]
	I2S_Init(SPI1, &I2S_InitStructure);	
 8000504:	f000 fc16 	bl	8000d34 <I2S_Init>

	NVIC_InitStructure.NVIC_IRQChannel = SPI1_IRQn;
 8000508:	2123      	movs	r1, #35	; 0x23
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800050a:	2301      	movs	r3, #1
	NVIC_Init(&NVIC_InitStructure);
 800050c:	a801      	add	r0, sp, #4
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_7 ;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	I2S_InitStructure.I2S_Standard = I2S_Standard_Phillips;
 800050e:	4625      	mov	r5, r4
	/* I2S Slave Receiver configuration */
	I2S_InitStructure.I2S_Mode = I2S_Mode_MasterRx;  
	I2S_InitStructure.I2S_MCLKOutput = I2S_MCLKOutput_Enable;
	I2S_Init(SPI1, &I2S_InitStructure);	

	NVIC_InitStructure.NVIC_IRQChannel = SPI1_IRQn;
 8000510:	f88d 1004 	strb.w	r1, [sp, #4]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8000514:	f88d 4006 	strb.w	r4, [sp, #6]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8000518:	f88d 4005 	strb.w	r4, [sp, #5]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 800051c:	f88d 3007 	strb.w	r3, [sp, #7]
	NVIC_Init(&NVIC_InitStructure);
 8000520:	f001 f93e 	bl	80017a0 <NVIC_Init>
}
 8000524:	b008      	add	sp, #32
 8000526:	bd70      	pop	{r4, r5, r6, pc}

08000528 <Usart2_Config>:
#include "main.h"

Usart2_Config(void)
{
 8000528:	b570      	push	{r4, r5, r6, lr}
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;

	/*GPIOA时钟设置在spi.c中*/
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 
 800052a:	2101      	movs	r1, #1
#include "main.h"

Usart2_Config(void)
{
 800052c:	b088      	sub	sp, #32
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;

	/*GPIOA时钟设置在spi.c中*/
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 
 800052e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8000532:	f000 fb03 	bl	8000b3c <RCC_APB1PeriphClockCmd>

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
 8000536:	2102      	movs	r1, #2
 8000538:	2207      	movs	r2, #7
 800053a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800053e:	f001 f90d 	bl	800175c <GPIO_PinAFConfig>
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);
 8000542:	2207      	movs	r2, #7
 8000544:	2103      	movs	r1, #3
 8000546:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800054a:	f001 f907 	bl	800175c <GPIO_PinAFConfig>

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
 800054e:	2400      	movs	r4, #0

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
 8000550:	2302      	movs	r3, #2
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
 8000552:	2203      	movs	r2, #3
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
 8000554:	260c      	movs	r6, #12
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000556:	4669      	mov	r1, sp
 8000558:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

	USART_Init(USART2, &USART_InitStructure);
 800055c:	f44f 4588 	mov.w	r5, #17408	; 0x4400
 8000560:	f2c4 0500 	movt	r5, #16384	; 0x4000

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
 8000564:	f88d 3004 	strb.w	r3, [sp, #4]
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
 8000568:	f88d 2005 	strb.w	r2, [sp, #5]
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
 800056c:	9600      	str	r6, [sp, #0]
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
 800056e:	f88d 4006 	strb.w	r4, [sp, #6]
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
 8000572:	f88d 4007 	strb.w	r4, [sp, #7]
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000576:	f000 fffd 	bl	8001574 <GPIO_Init>

	USART_InitStructure.USART_BaudRate   = 960000;
 800057a:	f44f 4326 	mov.w	r3, #42496	; 0xa600
 800057e:	f2c0 030e 	movt	r3, #14
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

	USART_Init(USART2, &USART_InitStructure);
 8000582:	a902      	add	r1, sp, #8
 8000584:	4628      	mov	r0, r5
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	USART_InitStructure.USART_BaudRate   = 960000;
	USART_InitStructure.USART_WordLength = USART_WordLength_9b;
 8000586:	f44f 5280 	mov.w	r2, #4096	; 0x1000
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	USART_InitStructure.USART_BaudRate   = 960000;
 800058a:	9302      	str	r3, [sp, #8]
	USART_InitStructure.USART_WordLength = USART_WordLength_9b;
 800058c:	9203      	str	r2, [sp, #12]
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
 800058e:	9404      	str	r4, [sp, #16]
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
 8000590:	9405      	str	r4, [sp, #20]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000592:	9407      	str	r4, [sp, #28]
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;
 8000594:	9606      	str	r6, [sp, #24]

	USART_Init(USART2, &USART_InitStructure);
 8000596:	f000 fd5b 	bl	8001050 <USART_Init>
	USART_Cmd(USART2, ENABLE);
 800059a:	4628      	mov	r0, r5
 800059c:	2101      	movs	r1, #1
 800059e:	f000 fdcd 	bl	800113c <USART_Cmd>
}
 80005a2:	b008      	add	sp, #32
 80005a4:	bd70      	pop	{r4, r5, r6, pc}
 80005a6:	bf00      	nop

080005a8 <USART_printf>:

	return string;
}

USART_printf(USART_TypeDef* USARTx, uint8_t *Data, ...)
{
 80005a8:	b40e      	push	{r1, r2, r3}
 80005aa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80005ac:	b086      	sub	sp, #24
 80005ae:	ab0b      	add	r3, sp, #44	; 0x2c
 80005b0:	4604      	mov	r4, r0
 80005b2:	f853 5b04 	ldr.w	r5, [r3], #4
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80005b6:	7829      	ldrb	r1, [r5, #0]
{
	const char *s;
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);
 80005b8:	9301      	str	r3, [sp, #4]
	int 	flag = 0;
	char	*ptr = string;  

	if(radix != 0)
	{
		*ptr = 0;
 80005ba:	2700      	movs	r7, #0
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80005bc:	b191      	cbz	r1, 80005e4 <USART_printf+0x3c>
	{
		if( *Data == 0x5c)
 80005be:	295c      	cmp	r1, #92	; 0x5c
 80005c0:	d02f      	beq.n	8000622 <USART_printf+0x7a>
				default:
					Data++;
					break;
			}
		}
		else if( *Data == '%')
 80005c2:	2925      	cmp	r1, #37	; 0x25
 80005c4:	d128      	bne.n	8000618 <USART_printf+0x70>
		{
			switch( *++Data)
 80005c6:	7868      	ldrb	r0, [r5, #1]
 80005c8:	2864      	cmp	r0, #100	; 0x64
 80005ca:	d035      	beq.n	8000638 <USART_printf+0x90>
 80005cc:	2873      	cmp	r0, #115	; 0x73
 80005ce:	d00e      	beq.n	80005ee <USART_printf+0x46>
					for(s = buf; *s; s++)
					{
						USART_SendData(USARTx, *s);
						while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
					}
					Data++;
 80005d0:	3502      	adds	r5, #2
					break;
			}
		}

		else USART_SendData(USARTx, *Data++);
		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
 80005d2:	4620      	mov	r0, r4
 80005d4:	2140      	movs	r1, #64	; 0x40
 80005d6:	f000 ff33 	bl	8001440 <USART_GetFlagStatus>
 80005da:	2800      	cmp	r0, #0
 80005dc:	d0f9      	beq.n	80005d2 <USART_printf+0x2a>
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80005de:	7829      	ldrb	r1, [r5, #0]
 80005e0:	2900      	cmp	r1, #0
 80005e2:	d1ec      	bne.n	80005be <USART_printf+0x16>
		}

		else USART_SendData(USARTx, *Data++);
		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
	}
}
 80005e4:	b006      	add	sp, #24
 80005e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80005ea:	b003      	add	sp, #12
 80005ec:	4770      	bx	lr
		else if( *Data == '%')
		{
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
 80005ee:	9a01      	ldr	r2, [sp, #4]
 80005f0:	6816      	ldr	r6, [r2, #0]
				
					for(; *s; s++)
 80005f2:	7831      	ldrb	r1, [r6, #0]
		else if( *Data == '%')
		{
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
 80005f4:	1d13      	adds	r3, r2, #4
 80005f6:	9301      	str	r3, [sp, #4]
				
					for(; *s; s++)
 80005f8:	2900      	cmp	r1, #0
 80005fa:	d0e9      	beq.n	80005d0 <USART_printf+0x28>
					{
						USART_SendData(USARTx, *s);
 80005fc:	4620      	mov	r0, r4
 80005fe:	f000 fe2d 	bl	800125c <USART_SendData>
						while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
 8000602:	4620      	mov	r0, r4
 8000604:	2140      	movs	r1, #64	; 0x40
 8000606:	f000 ff1b 	bl	8001440 <USART_GetFlagStatus>
 800060a:	2800      	cmp	r0, #0
 800060c:	d0f9      	beq.n	8000602 <USART_printf+0x5a>
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
				
					for(; *s; s++)
 800060e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000612:	2900      	cmp	r1, #0
 8000614:	d1f2      	bne.n	80005fc <USART_printf+0x54>
 8000616:	e7db      	b.n	80005d0 <USART_printf+0x28>
					Data++;
					break;
			}
		}

		else USART_SendData(USARTx, *Data++);
 8000618:	4620      	mov	r0, r4
 800061a:	3501      	adds	r5, #1
 800061c:	f000 fe1e 	bl	800125c <USART_SendData>
 8000620:	e7d7      	b.n	80005d2 <USART_printf+0x2a>

	while(*Data != 0)
	{
		if( *Data == 0x5c)
		{
			switch( *++Data)
 8000622:	786a      	ldrb	r2, [r5, #1]
 8000624:	2a6e      	cmp	r2, #110	; 0x6e
 8000626:	d00d      	beq.n	8000644 <USART_printf+0x9c>
 8000628:	2a72      	cmp	r2, #114	; 0x72
 800062a:	d1d1      	bne.n	80005d0 <USART_printf+0x28>
			{
				case 'r':
					USART_SendData(USARTx, 0x0d);
 800062c:	4620      	mov	r0, r4
 800062e:	210d      	movs	r1, #13
 8000630:	f000 fe14 	bl	800125c <USART_SendData>
					Data++;
 8000634:	3502      	adds	r5, #2
					break;
 8000636:	e7cc      	b.n	80005d2 <USART_printf+0x2a>
					}
					Data++;
					break;

				case 'd':
					d = va_arg(ap, int);
 8000638:	9901      	ldr	r1, [sp, #4]
	int 	flag = 0;
	char	*ptr = string;  

	if(radix != 0)
	{
		*ptr = 0;
 800063a:	f88d 7008 	strb.w	r7, [sp, #8]
					}
					Data++;
					break;

				case 'd':
					d = va_arg(ap, int);
 800063e:	1d08      	adds	r0, r1, #4
 8000640:	9001      	str	r0, [sp, #4]
 8000642:	e7c5      	b.n	80005d0 <USART_printf+0x28>
					USART_SendData(USARTx, 0x0d);
					Data++;
					break;

				case 'n':
					USART_SendData(USARTx, 0x0a);
 8000644:	4620      	mov	r0, r4
 8000646:	210a      	movs	r1, #10
 8000648:	f000 fe08 	bl	800125c <USART_SendData>
					Data++;
 800064c:	3502      	adds	r5, #2
					break;
 800064e:	e7c0      	b.n	80005d2 <USART_printf+0x2a>
 8000650:	08001a08 	.word	0x08001a08
 8000654:	20000000 	.word	0x20000000
 8000658:	200000a4 	.word	0x200000a4
 800065c:	200000a8 	.word	0x200000a8
 8000660:	200000c8 	.word	0x200000c8

08000664 <RCC_DeInit>:
 8000664:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000668:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800066c:	681a      	ldr	r2, [r3, #0]
 800066e:	f042 0001 	orr.w	r0, r2, #1
 8000672:	6018      	str	r0, [r3, #0]
 8000674:	6859      	ldr	r1, [r3, #4]
 8000676:	f401 027f 	and.w	r2, r1, #16711680	; 0xff0000
 800067a:	605a      	str	r2, [r3, #4]
 800067c:	6818      	ldr	r0, [r3, #0]
 800067e:	f020 7184 	bic.w	r1, r0, #17301504	; 0x1080000
 8000682:	f421 3280 	bic.w	r2, r1, #65536	; 0x10000
 8000686:	601a      	str	r2, [r3, #0]
 8000688:	6818      	ldr	r0, [r3, #0]
 800068a:	f420 2180 	bic.w	r1, r0, #262144	; 0x40000
 800068e:	6019      	str	r1, [r3, #0]
 8000690:	685a      	ldr	r2, [r3, #4]
 8000692:	f422 00fe 	bic.w	r0, r2, #8323072	; 0x7f0000
 8000696:	6058      	str	r0, [r3, #4]
 8000698:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800069a:	f021 020f 	bic.w	r2, r1, #15
 800069e:	62da      	str	r2, [r3, #44]	; 0x2c
 80006a0:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80006a2:	f020 21f0 	bic.w	r1, r0, #4026593280	; 0xf000f000
 80006a6:	f021 0273 	bic.w	r2, r1, #115	; 0x73
 80006aa:	2000      	movs	r0, #0
 80006ac:	631a      	str	r2, [r3, #48]	; 0x30
 80006ae:	6098      	str	r0, [r3, #8]
 80006b0:	4770      	bx	lr
 80006b2:	bf00      	nop

080006b4 <RCC_HSEConfig>:
 80006b4:	f241 0302 	movw	r3, #4098	; 0x1002
 80006b8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80006bc:	2200      	movs	r2, #0
 80006be:	701a      	strb	r2, [r3, #0]
 80006c0:	7018      	strb	r0, [r3, #0]
 80006c2:	4770      	bx	lr

080006c4 <RCC_WaitForHSEStartUp>:
 80006c4:	b082      	sub	sp, #8
 80006c6:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80006ca:	2300      	movs	r3, #0
 80006cc:	9301      	str	r3, [sp, #4]
 80006ce:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80006d2:	6810      	ldr	r0, [r2, #0]
 80006d4:	0383      	lsls	r3, r0, #14
 80006d6:	d50c      	bpl.n	80006f2 <RCC_WaitForHSEStartUp+0x2e>
 80006d8:	9a01      	ldr	r2, [sp, #4]
 80006da:	1c51      	adds	r1, r2, #1
 80006dc:	9101      	str	r1, [sp, #4]
 80006de:	9b01      	ldr	r3, [sp, #4]
 80006e0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80006e4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80006e8:	6818      	ldr	r0, [r3, #0]
 80006ea:	f3c0 4040 	ubfx	r0, r0, #17, #1
 80006ee:	b002      	add	sp, #8
 80006f0:	4770      	bx	lr
 80006f2:	9901      	ldr	r1, [sp, #4]
 80006f4:	1c4b      	adds	r3, r1, #1
 80006f6:	9301      	str	r3, [sp, #4]
 80006f8:	9801      	ldr	r0, [sp, #4]
 80006fa:	f5b0 6fa0 	cmp.w	r0, #1280	; 0x500
 80006fe:	d1e8      	bne.n	80006d2 <RCC_WaitForHSEStartUp+0xe>
 8000700:	e7ee      	b.n	80006e0 <RCC_WaitForHSEStartUp+0x1c>
 8000702:	bf00      	nop

08000704 <RCC_AdjustHSICalibrationValue>:
 8000704:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000708:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800070c:	681a      	ldr	r2, [r3, #0]
 800070e:	f022 01f8 	bic.w	r1, r2, #248	; 0xf8
 8000712:	ea41 00c0 	orr.w	r0, r1, r0, lsl #3
 8000716:	6018      	str	r0, [r3, #0]
 8000718:	4770      	bx	lr
 800071a:	bf00      	nop

0800071c <RCC_HSICmd>:
 800071c:	2300      	movs	r3, #0
 800071e:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8000722:	6018      	str	r0, [r3, #0]
 8000724:	4770      	bx	lr
 8000726:	bf00      	nop

08000728 <RCC_LSEConfig>:
 8000728:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800072c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000730:	6a1a      	ldr	r2, [r3, #32]
 8000732:	f022 0101 	bic.w	r1, r2, #1
 8000736:	6219      	str	r1, [r3, #32]
 8000738:	6a1a      	ldr	r2, [r3, #32]
 800073a:	f022 0104 	bic.w	r1, r2, #4
 800073e:	6219      	str	r1, [r3, #32]
 8000740:	6a1a      	ldr	r2, [r3, #32]
 8000742:	4310      	orrs	r0, r2
 8000744:	6218      	str	r0, [r3, #32]
 8000746:	4770      	bx	lr

08000748 <RCC_LSEDriveConfig>:
 8000748:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800074c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000750:	6a1a      	ldr	r2, [r3, #32]
 8000752:	f022 0118 	bic.w	r1, r2, #24
 8000756:	6219      	str	r1, [r3, #32]
 8000758:	6a1a      	ldr	r2, [r3, #32]
 800075a:	4310      	orrs	r0, r2
 800075c:	6218      	str	r0, [r3, #32]
 800075e:	4770      	bx	lr

08000760 <RCC_LSICmd>:
 8000760:	f44f 6390 	mov.w	r3, #1152	; 0x480
 8000764:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8000768:	6018      	str	r0, [r3, #0]
 800076a:	4770      	bx	lr

0800076c <RCC_PLLConfig>:
 800076c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000770:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000774:	685a      	ldr	r2, [r3, #4]
 8000776:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 800077a:	605a      	str	r2, [r3, #4]
 800077c:	685a      	ldr	r2, [r3, #4]
 800077e:	4310      	orrs	r0, r2
 8000780:	4301      	orrs	r1, r0
 8000782:	6059      	str	r1, [r3, #4]
 8000784:	4770      	bx	lr
 8000786:	bf00      	nop

08000788 <RCC_PLLCmd>:
 8000788:	2360      	movs	r3, #96	; 0x60
 800078a:	f2c4 2342 	movt	r3, #16962	; 0x4242
 800078e:	6018      	str	r0, [r3, #0]
 8000790:	4770      	bx	lr
 8000792:	bf00      	nop

08000794 <RCC_PREDIV1Config>:
 8000794:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000798:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800079c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800079e:	f022 010f 	bic.w	r1, r2, #15
 80007a2:	4308      	orrs	r0, r1
 80007a4:	62d8      	str	r0, [r3, #44]	; 0x2c
 80007a6:	4770      	bx	lr

080007a8 <RCC_ClockSecuritySystemCmd>:
 80007a8:	234c      	movs	r3, #76	; 0x4c
 80007aa:	f2c4 2342 	movt	r3, #16962	; 0x4242
 80007ae:	6018      	str	r0, [r3, #0]
 80007b0:	4770      	bx	lr
 80007b2:	bf00      	nop

080007b4 <RCC_MCOConfig>:
 80007b4:	f241 0307 	movw	r3, #4103	; 0x1007
 80007b8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80007bc:	7018      	strb	r0, [r3, #0]
 80007be:	4770      	bx	lr

080007c0 <RCC_SYSCLKConfig>:
 80007c0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007c4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80007c8:	685a      	ldr	r2, [r3, #4]
 80007ca:	f022 0103 	bic.w	r1, r2, #3
 80007ce:	4308      	orrs	r0, r1
 80007d0:	6058      	str	r0, [r3, #4]
 80007d2:	4770      	bx	lr

080007d4 <RCC_GetSYSCLKSource>:
 80007d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007d8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80007dc:	6858      	ldr	r0, [r3, #4]
 80007de:	f000 000c 	and.w	r0, r0, #12
 80007e2:	4770      	bx	lr

080007e4 <RCC_HCLKConfig>:
 80007e4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007e8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80007ec:	685a      	ldr	r2, [r3, #4]
 80007ee:	f022 01f0 	bic.w	r1, r2, #240	; 0xf0
 80007f2:	4308      	orrs	r0, r1
 80007f4:	6058      	str	r0, [r3, #4]
 80007f6:	4770      	bx	lr

080007f8 <RCC_PCLK1Config>:
 80007f8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80007fc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000800:	685a      	ldr	r2, [r3, #4]
 8000802:	f422 61e0 	bic.w	r1, r2, #1792	; 0x700
 8000806:	4308      	orrs	r0, r1
 8000808:	6058      	str	r0, [r3, #4]
 800080a:	4770      	bx	lr

0800080c <RCC_PCLK2Config>:
 800080c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000810:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000814:	685a      	ldr	r2, [r3, #4]
 8000816:	f422 5160 	bic.w	r1, r2, #14336	; 0x3800
 800081a:	ea41 00c0 	orr.w	r0, r1, r0, lsl #3
 800081e:	6058      	str	r0, [r3, #4]
 8000820:	4770      	bx	lr
 8000822:	bf00      	nop

08000824 <RCC_ADCCLKConfig>:
 8000824:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000828:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800082c:	685a      	ldr	r2, [r3, #4]
 800082e:	f422 4140 	bic.w	r1, r2, #49152	; 0xc000
 8000832:	6059      	str	r1, [r3, #4]
 8000834:	685a      	ldr	r2, [r3, #4]
 8000836:	4310      	orrs	r0, r2
 8000838:	6058      	str	r0, [r3, #4]
 800083a:	4770      	bx	lr

0800083c <RCC_SDADCCLKConfig>:
 800083c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000840:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000844:	685a      	ldr	r2, [r3, #4]
 8000846:	f022 4178 	bic.w	r1, r2, #4160749568	; 0xf8000000
 800084a:	6059      	str	r1, [r3, #4]
 800084c:	685a      	ldr	r2, [r3, #4]
 800084e:	4310      	orrs	r0, r2
 8000850:	6058      	str	r0, [r3, #4]
 8000852:	4770      	bx	lr

08000854 <RCC_CECCLKConfig>:
 8000854:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000858:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800085c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800085e:	f022 0140 	bic.w	r1, r2, #64	; 0x40
 8000862:	6319      	str	r1, [r3, #48]	; 0x30
 8000864:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000866:	4310      	orrs	r0, r2
 8000868:	6318      	str	r0, [r3, #48]	; 0x30
 800086a:	4770      	bx	lr

0800086c <RCC_I2CCLKConfig>:
 800086c:	0f03      	lsrs	r3, r0, #28
 800086e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000872:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000876:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800087a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800087c:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8000880:	bf0c      	ite	eq
 8000882:	f022 0210 	biceq.w	r2, r2, #16
 8000886:	f022 0220 	bicne.w	r2, r2, #32
 800088a:	631a      	str	r2, [r3, #48]	; 0x30
 800088c:	6b0b      	ldr	r3, [r1, #48]	; 0x30
 800088e:	4318      	orrs	r0, r3
 8000890:	6308      	str	r0, [r1, #48]	; 0x30
 8000892:	4770      	bx	lr

08000894 <RCC_USARTCLKConfig>:
 8000894:	0f03      	lsrs	r3, r0, #28
 8000896:	2b02      	cmp	r3, #2
 8000898:	d01d      	beq.n	80008d6 <RCC_USARTCLKConfig+0x42>
 800089a:	2b03      	cmp	r3, #3
 800089c:	d012      	beq.n	80008c4 <RCC_USARTCLKConfig+0x30>
 800089e:	2b01      	cmp	r3, #1
 80008a0:	d007      	beq.n	80008b2 <RCC_USARTCLKConfig+0x1e>
 80008a2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80008a6:	f2c4 0102 	movt	r1, #16386	; 0x4002
 80008aa:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 80008ac:	4310      	orrs	r0, r2
 80008ae:	6308      	str	r0, [r1, #48]	; 0x30
 80008b0:	4770      	bx	lr
 80008b2:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80008b6:	f2c4 0102 	movt	r1, #16386	; 0x4002
 80008ba:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 80008bc:	f022 0303 	bic.w	r3, r2, #3
 80008c0:	630b      	str	r3, [r1, #48]	; 0x30
 80008c2:	e7ee      	b.n	80008a2 <RCC_USARTCLKConfig+0xe>
 80008c4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80008c8:	f2c4 0102 	movt	r1, #16386	; 0x4002
 80008cc:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 80008ce:	f422 2340 	bic.w	r3, r2, #786432	; 0xc0000
 80008d2:	630b      	str	r3, [r1, #48]	; 0x30
 80008d4:	e7e5      	b.n	80008a2 <RCC_USARTCLKConfig+0xe>
 80008d6:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80008da:	f2c4 0102 	movt	r1, #16386	; 0x4002
 80008de:	6b0a      	ldr	r2, [r1, #48]	; 0x30
 80008e0:	f422 3340 	bic.w	r3, r2, #196608	; 0x30000
 80008e4:	630b      	str	r3, [r1, #48]	; 0x30
 80008e6:	e7dc      	b.n	80008a2 <RCC_USARTCLKConfig+0xe>

080008e8 <RCC_USBCLKConfig>:
 80008e8:	23d8      	movs	r3, #216	; 0xd8
 80008ea:	f2c4 2342 	movt	r3, #16962	; 0x4242
 80008ee:	6018      	str	r0, [r3, #0]
 80008f0:	4770      	bx	lr
 80008f2:	bf00      	nop

080008f4 <RCC_GetClocksFreq>:
 80008f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80008f8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80008fc:	b470      	push	{r4, r5, r6}
 80008fe:	685a      	ldr	r2, [r3, #4]
 8000900:	f002 010c 	and.w	r1, r2, #12
 8000904:	2904      	cmp	r1, #4
 8000906:	d002      	beq.n	800090e <RCC_GetClocksFreq+0x1a>
 8000908:	2908      	cmp	r1, #8
 800090a:	f000 80b5 	beq.w	8000a78 <RCC_GetClocksFreq+0x184>
 800090e:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 8000912:	f2c0 017a 	movt	r1, #122	; 0x7a
 8000916:	6001      	str	r1, [r0, #0]
 8000918:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800091c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000920:	4a6d      	ldr	r2, [pc, #436]	; (8000ad8 <RCC_GetClocksFreq+0x1e4>)
 8000922:	685d      	ldr	r5, [r3, #4]
 8000924:	f3c5 1403 	ubfx	r4, r5, #4, #4
 8000928:	5d16      	ldrb	r6, [r2, r4]
 800092a:	fa21 f406 	lsr.w	r4, r1, r6
 800092e:	6044      	str	r4, [r0, #4]
 8000930:	685d      	ldr	r5, [r3, #4]
 8000932:	f3c5 2602 	ubfx	r6, r5, #8, #3
 8000936:	5d95      	ldrb	r5, [r2, r6]
 8000938:	fa24 f505 	lsr.w	r5, r4, r5
 800093c:	6085      	str	r5, [r0, #8]
 800093e:	685e      	ldr	r6, [r3, #4]
 8000940:	f3c6 26c2 	ubfx	r6, r6, #11, #3
 8000944:	5d96      	ldrb	r6, [r2, r6]
 8000946:	fa24 f406 	lsr.w	r4, r4, r6
 800094a:	60c4      	str	r4, [r0, #12]
 800094c:	685e      	ldr	r6, [r3, #4]
 800094e:	f3c6 3681 	ubfx	r6, r6, #14, #2
 8000952:	1996      	adds	r6, r2, r6
 8000954:	7c36      	ldrb	r6, [r6, #16]
 8000956:	fbb4 f6f6 	udiv	r6, r4, r6
 800095a:	6106      	str	r6, [r0, #16]
 800095c:	685e      	ldr	r6, [r3, #4]
 800095e:	f3c6 66c3 	ubfx	r6, r6, #27, #4
 8000962:	1992      	adds	r2, r2, r6
 8000964:	7d12      	ldrb	r2, [r2, #20]
 8000966:	fbb1 f2f2 	udiv	r2, r1, r2
 800096a:	6142      	str	r2, [r0, #20]
 800096c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800096e:	065a      	lsls	r2, r3, #25
 8000970:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000974:	bf54      	ite	pl
 8000976:	f248 0212 	movwpl	r2, #32786	; 0x8012
 800097a:	f44f 4200 	movmi.w	r2, #32768	; 0x8000
 800097e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000982:	6182      	str	r2, [r0, #24]
 8000984:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000986:	06da      	lsls	r2, r3, #27
 8000988:	bf58      	it	pl
 800098a:	f44f 5390 	movpl.w	r3, #4608	; 0x1200
 800098e:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000992:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8000996:	bf5a      	itte	pl
 8000998:	f2c0 037a 	movtpl	r3, #122	; 0x7a
 800099c:	61c3      	strpl	r3, [r0, #28]
 800099e:	61c1      	strmi	r1, [r0, #28]
 80009a0:	6b13      	ldr	r3, [r2, #48]	; 0x30
 80009a2:	069a      	lsls	r2, r3, #26
 80009a4:	bf58      	it	pl
 80009a6:	f44f 5290 	movpl.w	r2, #4608	; 0x1200
 80009aa:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80009ae:	bf58      	it	pl
 80009b0:	f2c0 027a 	movtpl	r2, #122	; 0x7a
 80009b4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80009b8:	bf54      	ite	pl
 80009ba:	6202      	strpl	r2, [r0, #32]
 80009bc:	6201      	strmi	r1, [r0, #32]
 80009be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c0:	0792      	lsls	r2, r2, #30
 80009c2:	d12a      	bne.n	8000a1a <RCC_GetClocksFreq+0x126>
 80009c4:	6244      	str	r4, [r0, #36]	; 0x24
 80009c6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80009ca:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80009ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009d0:	f412 3f40 	tst.w	r2, #196608	; 0x30000
 80009d4:	d136      	bne.n	8000a44 <RCC_GetClocksFreq+0x150>
 80009d6:	6285      	str	r5, [r0, #40]	; 0x28
 80009d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80009dc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80009e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009e2:	f412 2f40 	tst.w	r2, #786432	; 0xc0000
 80009e6:	d045      	beq.n	8000a74 <RCC_GetClocksFreq+0x180>
 80009e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ea:	f402 2240 	and.w	r2, r2, #786432	; 0xc0000
 80009ee:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 80009f2:	d062      	beq.n	8000aba <RCC_GetClocksFreq+0x1c6>
 80009f4:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80009f6:	f401 2240 	and.w	r2, r1, #786432	; 0xc0000
 80009fa:	f5b2 2f00 	cmp.w	r2, #524288	; 0x80000
 80009fe:	d066      	beq.n	8000ace <RCC_GetClocksFreq+0x1da>
 8000a00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a02:	f403 2140 	and.w	r1, r3, #786432	; 0xc0000
 8000a06:	f5b1 2f40 	cmp.w	r1, #786432	; 0xc0000
 8000a0a:	d104      	bne.n	8000a16 <RCC_GetClocksFreq+0x122>
 8000a0c:	f44f 5290 	mov.w	r2, #4608	; 0x1200
 8000a10:	f2c0 027a 	movt	r2, #122	; 0x7a
 8000a14:	62c2      	str	r2, [r0, #44]	; 0x2c
 8000a16:	bc70      	pop	{r4, r5, r6}
 8000a18:	4770      	bx	lr
 8000a1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a1c:	f002 0203 	and.w	r2, r2, #3
 8000a20:	2a01      	cmp	r2, #1
 8000a22:	d03a      	beq.n	8000a9a <RCC_GetClocksFreq+0x1a6>
 8000a24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a26:	f002 0203 	and.w	r2, r2, #3
 8000a2a:	2a02      	cmp	r2, #2
 8000a2c:	d047      	beq.n	8000abe <RCC_GetClocksFreq+0x1ca>
 8000a2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a30:	f003 0203 	and.w	r2, r3, #3
 8000a34:	2a03      	cmp	r2, #3
 8000a36:	d1c6      	bne.n	80009c6 <RCC_GetClocksFreq+0xd2>
 8000a38:	f44f 5390 	mov.w	r3, #4608	; 0x1200
 8000a3c:	f2c0 037a 	movt	r3, #122	; 0x7a
 8000a40:	6243      	str	r3, [r0, #36]	; 0x24
 8000a42:	e7c0      	b.n	80009c6 <RCC_GetClocksFreq+0xd2>
 8000a44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a46:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8000a4a:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8000a4e:	d022      	beq.n	8000a96 <RCC_GetClocksFreq+0x1a2>
 8000a50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000a52:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8000a56:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 8000a5a:	d034      	beq.n	8000ac6 <RCC_GetClocksFreq+0x1d2>
 8000a5c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000a5e:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8000a62:	f5b2 3f40 	cmp.w	r2, #196608	; 0x30000
 8000a66:	d1b7      	bne.n	80009d8 <RCC_GetClocksFreq+0xe4>
 8000a68:	f44f 5390 	mov.w	r3, #4608	; 0x1200
 8000a6c:	f2c0 037a 	movt	r3, #122	; 0x7a
 8000a70:	6283      	str	r3, [r0, #40]	; 0x28
 8000a72:	e7b1      	b.n	80009d8 <RCC_GetClocksFreq+0xe4>
 8000a74:	62c5      	str	r5, [r0, #44]	; 0x2c
 8000a76:	e7ce      	b.n	8000a16 <RCC_GetClocksFreq+0x122>
 8000a78:	685d      	ldr	r5, [r3, #4]
 8000a7a:	685c      	ldr	r4, [r3, #4]
 8000a7c:	f3c5 4683 	ubfx	r6, r5, #18, #4
 8000a80:	1cb2      	adds	r2, r6, #2
 8000a82:	03e1      	lsls	r1, r4, #15
 8000a84:	d40b      	bmi.n	8000a9e <RCC_GetClocksFreq+0x1aa>
 8000a86:	f44f 6610 	mov.w	r6, #2304	; 0x900
 8000a8a:	f2c0 063d 	movt	r6, #61	; 0x3d
 8000a8e:	fb06 f102 	mul.w	r1, r6, r2
 8000a92:	6001      	str	r1, [r0, #0]
 8000a94:	e740      	b.n	8000918 <RCC_GetClocksFreq+0x24>
 8000a96:	6281      	str	r1, [r0, #40]	; 0x28
 8000a98:	e79e      	b.n	80009d8 <RCC_GetClocksFreq+0xe4>
 8000a9a:	6241      	str	r1, [r0, #36]	; 0x24
 8000a9c:	e793      	b.n	80009c6 <RCC_GetClocksFreq+0xd2>
 8000a9e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000aa0:	f44f 5390 	mov.w	r3, #4608	; 0x1200
 8000aa4:	f001 050f 	and.w	r5, r1, #15
 8000aa8:	1c6c      	adds	r4, r5, #1
 8000aaa:	f2c0 037a 	movt	r3, #122	; 0x7a
 8000aae:	fbb3 f1f4 	udiv	r1, r3, r4
 8000ab2:	fb02 f101 	mul.w	r1, r2, r1
 8000ab6:	6001      	str	r1, [r0, #0]
 8000ab8:	e72e      	b.n	8000918 <RCC_GetClocksFreq+0x24>
 8000aba:	62c1      	str	r1, [r0, #44]	; 0x2c
 8000abc:	e7ab      	b.n	8000a16 <RCC_GetClocksFreq+0x122>
 8000abe:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000ac2:	6242      	str	r2, [r0, #36]	; 0x24
 8000ac4:	e77f      	b.n	80009c6 <RCC_GetClocksFreq+0xd2>
 8000ac6:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 8000aca:	6282      	str	r2, [r0, #40]	; 0x28
 8000acc:	e784      	b.n	80009d8 <RCC_GetClocksFreq+0xe4>
 8000ace:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8000ad2:	62c3      	str	r3, [r0, #44]	; 0x2c
 8000ad4:	e79f      	b.n	8000a16 <RCC_GetClocksFreq+0x122>
 8000ad6:	bf00      	nop
 8000ad8:	20000018 	.word	0x20000018

08000adc <RCC_RTCCLKConfig>:
 8000adc:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000ae0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000ae4:	6a1a      	ldr	r2, [r3, #32]
 8000ae6:	4310      	orrs	r0, r2
 8000ae8:	6218      	str	r0, [r3, #32]
 8000aea:	4770      	bx	lr

08000aec <RCC_RTCCLKCmd>:
 8000aec:	f240 433c 	movw	r3, #1084	; 0x43c
 8000af0:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8000af4:	6018      	str	r0, [r3, #0]
 8000af6:	4770      	bx	lr

08000af8 <RCC_BackupResetCmd>:
 8000af8:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8000afc:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8000b00:	6018      	str	r0, [r3, #0]
 8000b02:	4770      	bx	lr

08000b04 <RCC_AHBPeriphClockCmd>:
 8000b04:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b08:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b0c:	695a      	ldr	r2, [r3, #20]
 8000b0e:	b919      	cbnz	r1, 8000b18 <RCC_AHBPeriphClockCmd+0x14>
 8000b10:	ea22 0000 	bic.w	r0, r2, r0
 8000b14:	6158      	str	r0, [r3, #20]
 8000b16:	4770      	bx	lr
 8000b18:	4310      	orrs	r0, r2
 8000b1a:	6158      	str	r0, [r3, #20]
 8000b1c:	4770      	bx	lr
 8000b1e:	bf00      	nop

08000b20 <RCC_APB2PeriphClockCmd>:
 8000b20:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b24:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b28:	699a      	ldr	r2, [r3, #24]
 8000b2a:	b919      	cbnz	r1, 8000b34 <RCC_APB2PeriphClockCmd+0x14>
 8000b2c:	ea22 0000 	bic.w	r0, r2, r0
 8000b30:	6198      	str	r0, [r3, #24]
 8000b32:	4770      	bx	lr
 8000b34:	4310      	orrs	r0, r2
 8000b36:	6198      	str	r0, [r3, #24]
 8000b38:	4770      	bx	lr
 8000b3a:	bf00      	nop

08000b3c <RCC_APB1PeriphClockCmd>:
 8000b3c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b40:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b44:	69da      	ldr	r2, [r3, #28]
 8000b46:	b919      	cbnz	r1, 8000b50 <RCC_APB1PeriphClockCmd+0x14>
 8000b48:	ea22 0000 	bic.w	r0, r2, r0
 8000b4c:	61d8      	str	r0, [r3, #28]
 8000b4e:	4770      	bx	lr
 8000b50:	4310      	orrs	r0, r2
 8000b52:	61d8      	str	r0, [r3, #28]
 8000b54:	4770      	bx	lr
 8000b56:	bf00      	nop

08000b58 <RCC_AHBPeriphResetCmd>:
 8000b58:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b5c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b60:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8000b62:	b919      	cbnz	r1, 8000b6c <RCC_AHBPeriphResetCmd+0x14>
 8000b64:	ea22 0000 	bic.w	r0, r2, r0
 8000b68:	6298      	str	r0, [r3, #40]	; 0x28
 8000b6a:	4770      	bx	lr
 8000b6c:	4310      	orrs	r0, r2
 8000b6e:	6298      	str	r0, [r3, #40]	; 0x28
 8000b70:	4770      	bx	lr
 8000b72:	bf00      	nop

08000b74 <RCC_APB2PeriphResetCmd>:
 8000b74:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b78:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b7c:	68da      	ldr	r2, [r3, #12]
 8000b7e:	b919      	cbnz	r1, 8000b88 <RCC_APB2PeriphResetCmd+0x14>
 8000b80:	ea22 0000 	bic.w	r0, r2, r0
 8000b84:	60d8      	str	r0, [r3, #12]
 8000b86:	4770      	bx	lr
 8000b88:	4310      	orrs	r0, r2
 8000b8a:	60d8      	str	r0, [r3, #12]
 8000b8c:	4770      	bx	lr
 8000b8e:	bf00      	nop

08000b90 <RCC_APB1PeriphResetCmd>:
 8000b90:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000b94:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000b98:	691a      	ldr	r2, [r3, #16]
 8000b9a:	b919      	cbnz	r1, 8000ba4 <RCC_APB1PeriphResetCmd+0x14>
 8000b9c:	ea22 0000 	bic.w	r0, r2, r0
 8000ba0:	6118      	str	r0, [r3, #16]
 8000ba2:	4770      	bx	lr
 8000ba4:	4310      	orrs	r0, r2
 8000ba6:	6118      	str	r0, [r3, #16]
 8000ba8:	4770      	bx	lr
 8000baa:	bf00      	nop

08000bac <RCC_ITConfig>:
 8000bac:	f241 0309 	movw	r3, #4105	; 0x1009
 8000bb0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000bb4:	781a      	ldrb	r2, [r3, #0]
 8000bb6:	b919      	cbnz	r1, 8000bc0 <RCC_ITConfig+0x14>
 8000bb8:	ea22 0000 	bic.w	r0, r2, r0
 8000bbc:	7018      	strb	r0, [r3, #0]
 8000bbe:	4770      	bx	lr
 8000bc0:	4310      	orrs	r0, r2
 8000bc2:	7018      	strb	r0, [r3, #0]
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <RCC_GetFlagStatus>:
 8000bc8:	0943      	lsrs	r3, r0, #5
 8000bca:	d10b      	bne.n	8000be4 <RCC_GetFlagStatus+0x1c>
 8000bcc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8000bd0:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8000bd4:	6811      	ldr	r1, [r2, #0]
 8000bd6:	f000 001f 	and.w	r0, r0, #31
 8000bda:	fa21 f300 	lsr.w	r3, r1, r0
 8000bde:	f003 0001 	and.w	r0, r3, #1
 8000be2:	4770      	bx	lr
 8000be4:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000be8:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8000bec:	2b01      	cmp	r3, #1
 8000bee:	bf0c      	ite	eq
 8000bf0:	6a09      	ldreq	r1, [r1, #32]
 8000bf2:	6a49      	ldrne	r1, [r1, #36]	; 0x24
 8000bf4:	e7ef      	b.n	8000bd6 <RCC_GetFlagStatus+0xe>
 8000bf6:	bf00      	nop

08000bf8 <RCC_ClearFlag>:
 8000bf8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000bfc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000c00:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000c02:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
 8000c06:	6258      	str	r0, [r3, #36]	; 0x24
 8000c08:	4770      	bx	lr
 8000c0a:	bf00      	nop

08000c0c <RCC_GetITStatus>:
 8000c0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000c10:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000c14:	6899      	ldr	r1, [r3, #8]
 8000c16:	4208      	tst	r0, r1
 8000c18:	bf0c      	ite	eq
 8000c1a:	2000      	moveq	r0, #0
 8000c1c:	2001      	movne	r0, #1
 8000c1e:	4770      	bx	lr

08000c20 <RCC_ClearITPendingBit>:
 8000c20:	f241 030a 	movw	r3, #4106	; 0x100a
 8000c24:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8000c28:	7018      	strb	r0, [r3, #0]
 8000c2a:	4770      	bx	lr

08000c2c <SPI_I2S_DeInit>:
 8000c2c:	b508      	push	{r3, lr}
 8000c2e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8000c32:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000c36:	4298      	cmp	r0, r3
 8000c38:	d018      	beq.n	8000c6c <SPI_I2S_DeInit+0x40>
 8000c3a:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8000c3e:	f2c4 0100 	movt	r1, #16384	; 0x4000
 8000c42:	4288      	cmp	r0, r1
 8000c44:	d01e      	beq.n	8000c84 <SPI_I2S_DeInit+0x58>
 8000c46:	f44f 5270 	mov.w	r2, #15360	; 0x3c00
 8000c4a:	f2c4 0200 	movt	r2, #16384	; 0x4000
 8000c4e:	4290      	cmp	r0, r2
 8000c50:	d000      	beq.n	8000c54 <SPI_I2S_DeInit+0x28>
 8000c52:	bd08      	pop	{r3, pc}
 8000c54:	2101      	movs	r1, #1
 8000c56:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8000c5a:	f7ff ff99 	bl	8000b90 <RCC_APB1PeriphResetCmd>
 8000c5e:	f44f 4000 	mov.w	r0, #32768	; 0x8000
 8000c62:	2100      	movs	r1, #0
 8000c64:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000c68:	f7ff bf92 	b.w	8000b90 <RCC_APB1PeriphResetCmd>
 8000c6c:	2101      	movs	r1, #1
 8000c6e:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8000c72:	f7ff ff7f 	bl	8000b74 <RCC_APB2PeriphResetCmd>
 8000c76:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8000c7a:	2100      	movs	r1, #0
 8000c7c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000c80:	f7ff bf78 	b.w	8000b74 <RCC_APB2PeriphResetCmd>
 8000c84:	2101      	movs	r1, #1
 8000c86:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000c8a:	f7ff ff81 	bl	8000b90 <RCC_APB1PeriphResetCmd>
 8000c8e:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8000c92:	2100      	movs	r1, #0
 8000c94:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8000c98:	f7ff bf7a 	b.w	8000b90 <RCC_APB1PeriphResetCmd>

08000c9c <SPI_StructInit>:
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	f44f 62e0 	mov.w	r2, #1792	; 0x700
 8000ca2:	2107      	movs	r1, #7
 8000ca4:	8003      	strh	r3, [r0, #0]
 8000ca6:	8043      	strh	r3, [r0, #2]
 8000ca8:	8082      	strh	r2, [r0, #4]
 8000caa:	80c3      	strh	r3, [r0, #6]
 8000cac:	8103      	strh	r3, [r0, #8]
 8000cae:	8143      	strh	r3, [r0, #10]
 8000cb0:	8183      	strh	r3, [r0, #12]
 8000cb2:	81c3      	strh	r3, [r0, #14]
 8000cb4:	8201      	strh	r1, [r0, #16]
 8000cb6:	4770      	bx	lr

08000cb8 <SPI_Init>:
 8000cb8:	880a      	ldrh	r2, [r1, #0]
 8000cba:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 8000cbe:	8a0b      	ldrh	r3, [r1, #16]
 8000cc0:	e92d 03f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9}
 8000cc4:	f8b1 900e 	ldrh.w	r9, [r1, #14]
 8000cc8:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 8000ccc:	894f      	ldrh	r7, [r1, #10]
 8000cce:	8805      	ldrh	r5, [r0, #0]
 8000cd0:	898e      	ldrh	r6, [r1, #12]
 8000cd2:	888c      	ldrh	r4, [r1, #4]
 8000cd4:	8849      	ldrh	r1, [r1, #2]
 8000cd6:	ea49 0202 	orr.w	r2, r9, r2
 8000cda:	ea42 0208 	orr.w	r2, r2, r8
 8000cde:	ea42 020c 	orr.w	r2, r2, ip
 8000ce2:	433a      	orrs	r2, r7
 8000ce4:	f405 5541 	and.w	r5, r5, #12352	; 0x3040
 8000ce8:	4332      	orrs	r2, r6
 8000cea:	432a      	orrs	r2, r5
 8000cec:	b292      	uxth	r2, r2
 8000cee:	8002      	strh	r2, [r0, #0]
 8000cf0:	8882      	ldrh	r2, [r0, #4]
 8000cf2:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8000cf6:	0412      	lsls	r2, r2, #16
 8000cf8:	0c12      	lsrs	r2, r2, #16
 8000cfa:	4322      	orrs	r2, r4
 8000cfc:	8082      	strh	r2, [r0, #4]
 8000cfe:	8203      	strh	r3, [r0, #16]
 8000d00:	8803      	ldrh	r3, [r0, #0]
 8000d02:	f023 0204 	bic.w	r2, r3, #4
 8000d06:	0413      	lsls	r3, r2, #16
 8000d08:	0c1a      	lsrs	r2, r3, #16
 8000d0a:	430a      	orrs	r2, r1
 8000d0c:	8002      	strh	r2, [r0, #0]
 8000d0e:	8b81      	ldrh	r1, [r0, #28]
 8000d10:	f421 6300 	bic.w	r3, r1, #2048	; 0x800
 8000d14:	041a      	lsls	r2, r3, #16
 8000d16:	0c11      	lsrs	r1, r2, #16
 8000d18:	8381      	strh	r1, [r0, #28]
 8000d1a:	e8bd 03f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9}
 8000d1e:	4770      	bx	lr

08000d20 <I2S_StructInit>:
 8000d20:	2300      	movs	r3, #0
 8000d22:	2202      	movs	r2, #2
 8000d24:	8003      	strh	r3, [r0, #0]
 8000d26:	8043      	strh	r3, [r0, #2]
 8000d28:	8083      	strh	r3, [r0, #4]
 8000d2a:	80c3      	strh	r3, [r0, #6]
 8000d2c:	6082      	str	r2, [r0, #8]
 8000d2e:	8183      	strh	r3, [r0, #12]
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop

08000d34 <I2S_Init>:
 8000d34:	8b83      	ldrh	r3, [r0, #28]
 8000d36:	688a      	ldr	r2, [r1, #8]
 8000d38:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d3a:	4605      	mov	r5, r0
 8000d3c:	f423 607b 	bic.w	r0, r3, #4016	; 0xfb0
 8000d40:	460c      	mov	r4, r1
 8000d42:	f020 010f 	bic.w	r1, r0, #15
 8000d46:	040e      	lsls	r6, r1, #16
 8000d48:	0c37      	lsrs	r7, r6, #16
 8000d4a:	2302      	movs	r3, #2
 8000d4c:	83af      	strh	r7, [r5, #28]
 8000d4e:	842b      	strh	r3, [r5, #32]
 8000d50:	8ba8      	ldrh	r0, [r5, #28]
 8000d52:	429a      	cmp	r2, r3
 8000d54:	b08d      	sub	sp, #52	; 0x34
 8000d56:	b286      	uxth	r6, r0
 8000d58:	d03a      	beq.n	8000dd0 <I2S_Init+0x9c>
 8000d5a:	88a2      	ldrh	r2, [r4, #4]
 8000d5c:	4668      	mov	r0, sp
 8000d5e:	2a00      	cmp	r2, #0
 8000d60:	bf14      	ite	ne
 8000d62:	2702      	movne	r7, #2
 8000d64:	2701      	moveq	r7, #1
 8000d66:	f7ff fdc5 	bl	80008f4 <RCC_GetClocksFreq>
 8000d6a:	88e3      	ldrh	r3, [r4, #6]
 8000d6c:	9900      	ldr	r1, [sp, #0]
 8000d6e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000d72:	d02f      	beq.n	8000dd4 <I2S_Init+0xa0>
 8000d74:	0178      	lsls	r0, r7, #5
 8000d76:	fbb1 f2f0 	udiv	r2, r1, r0
 8000d7a:	eb02 0782 	add.w	r7, r2, r2, lsl #2
 8000d7e:	68a1      	ldr	r1, [r4, #8]
 8000d80:	0078      	lsls	r0, r7, #1
 8000d82:	fbb0 f2f1 	udiv	r2, r0, r1
 8000d86:	1d57      	adds	r7, r2, #5
 8000d88:	b2b8      	uxth	r0, r7
 8000d8a:	f64c 47cd 	movw	r7, #52429	; 0xcccd
 8000d8e:	f6cc 47cc 	movt	r7, #52428	; 0xcccc
 8000d92:	fba7 0100 	umull	r0, r1, r7, r0
 8000d96:	08ca      	lsrs	r2, r1, #3
 8000d98:	0857      	lsrs	r7, r2, #1
 8000d9a:	1eb8      	subs	r0, r7, #2
 8000d9c:	f002 0201 	and.w	r2, r2, #1
 8000da0:	28fd      	cmp	r0, #253	; 0xfd
 8000da2:	bf94      	ite	ls
 8000da4:	ea47 2202 	orrls.w	r2, r7, r2, lsl #8
 8000da8:	2202      	movhi	r2, #2
 8000daa:	8821      	ldrh	r1, [r4, #0]
 8000dac:	f8b4 c002 	ldrh.w	ip, [r4, #2]
 8000db0:	88a7      	ldrh	r7, [r4, #4]
 8000db2:	89a0      	ldrh	r0, [r4, #12]
 8000db4:	4331      	orrs	r1, r6
 8000db6:	f441 6100 	orr.w	r1, r1, #2048	; 0x800
 8000dba:	ea41 010c 	orr.w	r1, r1, ip
 8000dbe:	4339      	orrs	r1, r7
 8000dc0:	4313      	orrs	r3, r2
 8000dc2:	4301      	orrs	r1, r0
 8000dc4:	b29a      	uxth	r2, r3
 8000dc6:	b288      	uxth	r0, r1
 8000dc8:	842a      	strh	r2, [r5, #32]
 8000dca:	83a8      	strh	r0, [r5, #28]
 8000dcc:	b00d      	add	sp, #52	; 0x34
 8000dce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000dd0:	88e3      	ldrh	r3, [r4, #6]
 8000dd2:	e7ea      	b.n	8000daa <I2S_Init+0x76>
 8000dd4:	0a09      	lsrs	r1, r1, #8
 8000dd6:	eb01 0281 	add.w	r2, r1, r1, lsl #2
 8000dda:	68a7      	ldr	r7, [r4, #8]
 8000ddc:	0050      	lsls	r0, r2, #1
 8000dde:	fbb0 f1f7 	udiv	r1, r0, r7
 8000de2:	1d4a      	adds	r2, r1, #5
 8000de4:	b290      	uxth	r0, r2
 8000de6:	e7d0      	b.n	8000d8a <I2S_Init+0x56>

08000de8 <SPI_Cmd>:
 8000de8:	8803      	ldrh	r3, [r0, #0]
 8000dea:	b929      	cbnz	r1, 8000df8 <SPI_Cmd+0x10>
 8000dec:	f023 0140 	bic.w	r1, r3, #64	; 0x40
 8000df0:	040a      	lsls	r2, r1, #16
 8000df2:	0c13      	lsrs	r3, r2, #16
 8000df4:	8003      	strh	r3, [r0, #0]
 8000df6:	4770      	bx	lr
 8000df8:	b299      	uxth	r1, r3
 8000dfa:	f041 0240 	orr.w	r2, r1, #64	; 0x40
 8000dfe:	8002      	strh	r2, [r0, #0]
 8000e00:	4770      	bx	lr
 8000e02:	bf00      	nop

08000e04 <SPI_TIModeCmd>:
 8000e04:	8883      	ldrh	r3, [r0, #4]
 8000e06:	b929      	cbnz	r1, 8000e14 <SPI_TIModeCmd+0x10>
 8000e08:	f023 0110 	bic.w	r1, r3, #16
 8000e0c:	040a      	lsls	r2, r1, #16
 8000e0e:	0c13      	lsrs	r3, r2, #16
 8000e10:	8083      	strh	r3, [r0, #4]
 8000e12:	4770      	bx	lr
 8000e14:	b299      	uxth	r1, r3
 8000e16:	f041 0210 	orr.w	r2, r1, #16
 8000e1a:	8082      	strh	r2, [r0, #4]
 8000e1c:	4770      	bx	lr
 8000e1e:	bf00      	nop

08000e20 <I2S_Cmd>:
 8000e20:	8b83      	ldrh	r3, [r0, #28]
 8000e22:	b929      	cbnz	r1, 8000e30 <I2S_Cmd+0x10>
 8000e24:	f423 6180 	bic.w	r1, r3, #1024	; 0x400
 8000e28:	040a      	lsls	r2, r1, #16
 8000e2a:	0c13      	lsrs	r3, r2, #16
 8000e2c:	8383      	strh	r3, [r0, #28]
 8000e2e:	4770      	bx	lr
 8000e30:	b299      	uxth	r1, r3
 8000e32:	f441 6280 	orr.w	r2, r1, #1024	; 0x400
 8000e36:	8382      	strh	r2, [r0, #28]
 8000e38:	4770      	bx	lr
 8000e3a:	bf00      	nop

08000e3c <SPI_DataSizeConfig>:
 8000e3c:	8883      	ldrh	r3, [r0, #4]
 8000e3e:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8000e42:	0413      	lsls	r3, r2, #16
 8000e44:	0c1a      	lsrs	r2, r3, #16
 8000e46:	4311      	orrs	r1, r2
 8000e48:	8081      	strh	r1, [r0, #4]
 8000e4a:	4770      	bx	lr

08000e4c <SPI_RxFIFOThresholdConfig>:
 8000e4c:	8883      	ldrh	r3, [r0, #4]
 8000e4e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8000e52:	0413      	lsls	r3, r2, #16
 8000e54:	0c1a      	lsrs	r2, r3, #16
 8000e56:	8082      	strh	r2, [r0, #4]
 8000e58:	8883      	ldrh	r3, [r0, #4]
 8000e5a:	b29a      	uxth	r2, r3
 8000e5c:	4311      	orrs	r1, r2
 8000e5e:	8081      	strh	r1, [r0, #4]
 8000e60:	4770      	bx	lr
 8000e62:	bf00      	nop

08000e64 <SPI_BiDirectionalLineConfig>:
 8000e64:	f5b1 4f80 	cmp.w	r1, #16384	; 0x4000
 8000e68:	8803      	ldrh	r3, [r0, #0]
 8000e6a:	d005      	beq.n	8000e78 <SPI_BiDirectionalLineConfig+0x14>
 8000e6c:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 8000e70:	040a      	lsls	r2, r1, #16
 8000e72:	0c13      	lsrs	r3, r2, #16
 8000e74:	8003      	strh	r3, [r0, #0]
 8000e76:	4770      	bx	lr
 8000e78:	b299      	uxth	r1, r3
 8000e7a:	f441 4280 	orr.w	r2, r1, #16384	; 0x4000
 8000e7e:	8002      	strh	r2, [r0, #0]
 8000e80:	4770      	bx	lr
 8000e82:	bf00      	nop

08000e84 <SPI_NSSInternalSoftwareConfig>:
 8000e84:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8000e88:	4299      	cmp	r1, r3
 8000e8a:	8801      	ldrh	r1, [r0, #0]
 8000e8c:	d004      	beq.n	8000e98 <SPI_NSSInternalSoftwareConfig+0x14>
 8000e8e:	b28a      	uxth	r2, r1
 8000e90:	f442 7380 	orr.w	r3, r2, #256	; 0x100
 8000e94:	8003      	strh	r3, [r0, #0]
 8000e96:	4770      	bx	lr
 8000e98:	f421 7280 	bic.w	r2, r1, #256	; 0x100
 8000e9c:	0413      	lsls	r3, r2, #16
 8000e9e:	0c19      	lsrs	r1, r3, #16
 8000ea0:	8001      	strh	r1, [r0, #0]
 8000ea2:	4770      	bx	lr

08000ea4 <SPI_SSOutputCmd>:
 8000ea4:	8883      	ldrh	r3, [r0, #4]
 8000ea6:	b929      	cbnz	r1, 8000eb4 <SPI_SSOutputCmd+0x10>
 8000ea8:	f023 0104 	bic.w	r1, r3, #4
 8000eac:	040a      	lsls	r2, r1, #16
 8000eae:	0c13      	lsrs	r3, r2, #16
 8000eb0:	8083      	strh	r3, [r0, #4]
 8000eb2:	4770      	bx	lr
 8000eb4:	b299      	uxth	r1, r3
 8000eb6:	f041 0204 	orr.w	r2, r1, #4
 8000eba:	8082      	strh	r2, [r0, #4]
 8000ebc:	4770      	bx	lr
 8000ebe:	bf00      	nop

08000ec0 <SPI_NSSPulseModeCmd>:
 8000ec0:	8883      	ldrh	r3, [r0, #4]
 8000ec2:	b929      	cbnz	r1, 8000ed0 <SPI_NSSPulseModeCmd+0x10>
 8000ec4:	f023 0108 	bic.w	r1, r3, #8
 8000ec8:	040a      	lsls	r2, r1, #16
 8000eca:	0c13      	lsrs	r3, r2, #16
 8000ecc:	8083      	strh	r3, [r0, #4]
 8000ece:	4770      	bx	lr
 8000ed0:	b299      	uxth	r1, r3
 8000ed2:	f041 0208 	orr.w	r2, r1, #8
 8000ed6:	8082      	strh	r2, [r0, #4]
 8000ed8:	4770      	bx	lr
 8000eda:	bf00      	nop

08000edc <SPI_SendData8>:
 8000edc:	7301      	strb	r1, [r0, #12]
 8000ede:	4770      	bx	lr

08000ee0 <SPI_I2S_SendData16>:
 8000ee0:	8181      	strh	r1, [r0, #12]
 8000ee2:	4770      	bx	lr

08000ee4 <SPI_ReceiveData8>:
 8000ee4:	7b00      	ldrb	r0, [r0, #12]
 8000ee6:	4770      	bx	lr

08000ee8 <SPI_I2S_ReceiveData16>:
 8000ee8:	8980      	ldrh	r0, [r0, #12]
 8000eea:	b280      	uxth	r0, r0
 8000eec:	4770      	bx	lr
 8000eee:	bf00      	nop

08000ef0 <SPI_CRCLengthConfig>:
 8000ef0:	8803      	ldrh	r3, [r0, #0]
 8000ef2:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8000ef6:	0413      	lsls	r3, r2, #16
 8000ef8:	0c1a      	lsrs	r2, r3, #16
 8000efa:	8002      	strh	r2, [r0, #0]
 8000efc:	8803      	ldrh	r3, [r0, #0]
 8000efe:	b29a      	uxth	r2, r3
 8000f00:	4311      	orrs	r1, r2
 8000f02:	8001      	strh	r1, [r0, #0]
 8000f04:	4770      	bx	lr
 8000f06:	bf00      	nop

08000f08 <SPI_CalculateCRC>:
 8000f08:	8803      	ldrh	r3, [r0, #0]
 8000f0a:	b929      	cbnz	r1, 8000f18 <SPI_CalculateCRC+0x10>
 8000f0c:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8000f10:	040a      	lsls	r2, r1, #16
 8000f12:	0c13      	lsrs	r3, r2, #16
 8000f14:	8003      	strh	r3, [r0, #0]
 8000f16:	4770      	bx	lr
 8000f18:	b299      	uxth	r1, r3
 8000f1a:	f441 5200 	orr.w	r2, r1, #8192	; 0x2000
 8000f1e:	8002      	strh	r2, [r0, #0]
 8000f20:	4770      	bx	lr
 8000f22:	bf00      	nop

08000f24 <SPI_TransmitCRC>:
 8000f24:	8803      	ldrh	r3, [r0, #0]
 8000f26:	b299      	uxth	r1, r3
 8000f28:	f441 5280 	orr.w	r2, r1, #4096	; 0x1000
 8000f2c:	8002      	strh	r2, [r0, #0]
 8000f2e:	4770      	bx	lr

08000f30 <SPI_GetCRC>:
 8000f30:	2901      	cmp	r1, #1
 8000f32:	bf14      	ite	ne
 8000f34:	8b00      	ldrhne	r0, [r0, #24]
 8000f36:	8a80      	ldrheq	r0, [r0, #20]
 8000f38:	b280      	uxth	r0, r0
 8000f3a:	4770      	bx	lr

08000f3c <SPI_GetCRCPolynomial>:
 8000f3c:	8a00      	ldrh	r0, [r0, #16]
 8000f3e:	b280      	uxth	r0, r0
 8000f40:	4770      	bx	lr
 8000f42:	bf00      	nop

08000f44 <SPI_I2S_DMACmd>:
 8000f44:	8883      	ldrh	r3, [r0, #4]
 8000f46:	b29b      	uxth	r3, r3
 8000f48:	b91a      	cbnz	r2, 8000f52 <SPI_I2S_DMACmd+0xe>
 8000f4a:	ea23 0101 	bic.w	r1, r3, r1
 8000f4e:	8081      	strh	r1, [r0, #4]
 8000f50:	4770      	bx	lr
 8000f52:	4319      	orrs	r1, r3
 8000f54:	8081      	strh	r1, [r0, #4]
 8000f56:	4770      	bx	lr

08000f58 <SPI_LastDMATransferCmd>:
 8000f58:	8883      	ldrh	r3, [r0, #4]
 8000f5a:	f423 42c0 	bic.w	r2, r3, #24576	; 0x6000
 8000f5e:	0413      	lsls	r3, r2, #16
 8000f60:	0c1a      	lsrs	r2, r3, #16
 8000f62:	8082      	strh	r2, [r0, #4]
 8000f64:	8883      	ldrh	r3, [r0, #4]
 8000f66:	b29a      	uxth	r2, r3
 8000f68:	4311      	orrs	r1, r2
 8000f6a:	8081      	strh	r1, [r0, #4]
 8000f6c:	4770      	bx	lr
 8000f6e:	bf00      	nop

08000f70 <SPI_I2S_ITConfig>:
 8000f70:	2301      	movs	r3, #1
 8000f72:	0909      	lsrs	r1, r1, #4
 8000f74:	fa03 f101 	lsl.w	r1, r3, r1
 8000f78:	8883      	ldrh	r3, [r0, #4]
 8000f7a:	b289      	uxth	r1, r1
 8000f7c:	b29b      	uxth	r3, r3
 8000f7e:	b91a      	cbnz	r2, 8000f88 <SPI_I2S_ITConfig+0x18>
 8000f80:	ea23 0201 	bic.w	r2, r3, r1
 8000f84:	8082      	strh	r2, [r0, #4]
 8000f86:	4770      	bx	lr
 8000f88:	4319      	orrs	r1, r3
 8000f8a:	8081      	strh	r1, [r0, #4]
 8000f8c:	4770      	bx	lr
 8000f8e:	bf00      	nop

08000f90 <SPI_GetTransmissionFIFOStatus>:
 8000f90:	8900      	ldrh	r0, [r0, #8]
 8000f92:	f400 50c0 	and.w	r0, r0, #6144	; 0x1800
 8000f96:	4770      	bx	lr

08000f98 <SPI_GetReceptionFIFOStatus>:
 8000f98:	8900      	ldrh	r0, [r0, #8]
 8000f9a:	f400 60c0 	and.w	r0, r0, #1536	; 0x600
 8000f9e:	4770      	bx	lr

08000fa0 <SPI_I2S_GetFlagStatus>:
 8000fa0:	8903      	ldrh	r3, [r0, #8]
 8000fa2:	4219      	tst	r1, r3
 8000fa4:	bf0c      	ite	eq
 8000fa6:	2000      	moveq	r0, #0
 8000fa8:	2001      	movne	r0, #1
 8000faa:	4770      	bx	lr

08000fac <SPI_I2S_ClearFlag>:
 8000fac:	43c9      	mvns	r1, r1
 8000fae:	b28a      	uxth	r2, r1
 8000fb0:	8102      	strh	r2, [r0, #8]
 8000fb2:	4770      	bx	lr

08000fb4 <SPI_I2S_GetITStatus>:
 8000fb4:	b410      	push	{r4}
 8000fb6:	8884      	ldrh	r4, [r0, #4]
 8000fb8:	8900      	ldrh	r0, [r0, #8]
 8000fba:	2201      	movs	r2, #1
 8000fbc:	f001 030f 	and.w	r3, r1, #15
 8000fc0:	b280      	uxth	r0, r0
 8000fc2:	fa02 f303 	lsl.w	r3, r2, r3
 8000fc6:	4018      	ands	r0, r3
 8000fc8:	b2a4      	uxth	r4, r4
 8000fca:	d006      	beq.n	8000fda <SPI_I2S_GetITStatus+0x26>
 8000fcc:	0909      	lsrs	r1, r1, #4
 8000fce:	fa02 f201 	lsl.w	r2, r2, r1
 8000fd2:	4214      	tst	r4, r2
 8000fd4:	bf0c      	ite	eq
 8000fd6:	2000      	moveq	r0, #0
 8000fd8:	2001      	movne	r0, #1
 8000fda:	bc10      	pop	{r4}
 8000fdc:	4770      	bx	lr
 8000fde:	bf00      	nop

08000fe0 <USART_DeInit>:
 8000fe0:	b508      	push	{r3, lr}
 8000fe2:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8000fe6:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000fea:	4298      	cmp	r0, r3
 8000fec:	d018      	beq.n	8001020 <USART_DeInit+0x40>
 8000fee:	f44f 4188 	mov.w	r1, #17408	; 0x4400
 8000ff2:	f2c4 0100 	movt	r1, #16384	; 0x4000
 8000ff6:	4288      	cmp	r0, r1
 8000ff8:	d01e      	beq.n	8001038 <USART_DeInit+0x58>
 8000ffa:	f44f 4290 	mov.w	r2, #18432	; 0x4800
 8000ffe:	f2c4 0200 	movt	r2, #16384	; 0x4000
 8001002:	4290      	cmp	r0, r2
 8001004:	d000      	beq.n	8001008 <USART_DeInit+0x28>
 8001006:	bd08      	pop	{r3, pc}
 8001008:	2101      	movs	r1, #1
 800100a:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 800100e:	f7ff fdbf 	bl	8000b90 <RCC_APB1PeriphResetCmd>
 8001012:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001016:	2100      	movs	r1, #0
 8001018:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800101c:	f7ff bdb8 	b.w	8000b90 <RCC_APB1PeriphResetCmd>
 8001020:	2101      	movs	r1, #1
 8001022:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8001026:	f7ff fda5 	bl	8000b74 <RCC_APB2PeriphResetCmd>
 800102a:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800102e:	2100      	movs	r1, #0
 8001030:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001034:	f7ff bd9e 	b.w	8000b74 <RCC_APB2PeriphResetCmd>
 8001038:	2101      	movs	r1, #1
 800103a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800103e:	f7ff fda7 	bl	8000b90 <RCC_APB1PeriphResetCmd>
 8001042:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001046:	2100      	movs	r1, #0
 8001048:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800104c:	f7ff bda0 	b.w	8000b90 <RCC_APB1PeriphResetCmd>

08001050 <USART_Init>:
 8001050:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001052:	6807      	ldr	r7, [r0, #0]
 8001054:	688e      	ldr	r6, [r1, #8]
 8001056:	4604      	mov	r4, r0
 8001058:	460d      	mov	r5, r1
 800105a:	f027 0701 	bic.w	r7, r7, #1
 800105e:	68c8      	ldr	r0, [r1, #12]
 8001060:	692a      	ldr	r2, [r5, #16]
 8001062:	6849      	ldr	r1, [r1, #4]
 8001064:	696b      	ldr	r3, [r5, #20]
 8001066:	6027      	str	r7, [r4, #0]
 8001068:	6867      	ldr	r7, [r4, #4]
 800106a:	f427 5740 	bic.w	r7, r7, #12288	; 0x3000
 800106e:	433e      	orrs	r6, r7
 8001070:	6066      	str	r6, [r4, #4]
 8001072:	6826      	ldr	r6, [r4, #0]
 8001074:	4308      	orrs	r0, r1
 8001076:	f426 51b0 	bic.w	r1, r6, #5632	; 0x1600
 800107a:	f021 060c 	bic.w	r6, r1, #12
 800107e:	4302      	orrs	r2, r0
 8001080:	4332      	orrs	r2, r6
 8001082:	6022      	str	r2, [r4, #0]
 8001084:	68a0      	ldr	r0, [r4, #8]
 8001086:	f420 7140 	bic.w	r1, r0, #768	; 0x300
 800108a:	b08d      	sub	sp, #52	; 0x34
 800108c:	430b      	orrs	r3, r1
 800108e:	60a3      	str	r3, [r4, #8]
 8001090:	4668      	mov	r0, sp
 8001092:	f7ff fc2f 	bl	80008f4 <RCC_GetClocksFreq>
 8001096:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 800109a:	f2c4 0201 	movt	r2, #16385	; 0x4001
 800109e:	4294      	cmp	r4, r2
 80010a0:	d027      	beq.n	80010f2 <USART_Init+0xa2>
 80010a2:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 80010a6:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80010aa:	4284      	cmp	r4, r0
 80010ac:	bf0c      	ite	eq
 80010ae:	990a      	ldreq	r1, [sp, #40]	; 0x28
 80010b0:	990b      	ldrne	r1, [sp, #44]	; 0x2c
 80010b2:	6823      	ldr	r3, [r4, #0]
 80010b4:	682a      	ldr	r2, [r5, #0]
 80010b6:	0418      	lsls	r0, r3, #16
 80010b8:	d516      	bpl.n	80010e8 <USART_Init+0x98>
 80010ba:	0048      	lsls	r0, r1, #1
 80010bc:	fbb0 f3f2 	udiv	r3, r0, r2
 80010c0:	fb02 0113 	mls	r1, r2, r3, r0
 80010c4:	ebb1 0f52 	cmp.w	r1, r2, lsr #1
 80010c8:	6822      	ldr	r2, [r4, #0]
 80010ca:	bf28      	it	cs
 80010cc:	3301      	addcs	r3, #1
 80010ce:	0412      	lsls	r2, r2, #16
 80010d0:	d506      	bpl.n	80010e0 <USART_Init+0x90>
 80010d2:	f64f 70f0 	movw	r0, #65520	; 0xfff0
 80010d6:	f3c3 0142 	ubfx	r1, r3, #1, #3
 80010da:	4018      	ands	r0, r3
 80010dc:	ea41 0300 	orr.w	r3, r1, r0
 80010e0:	b29a      	uxth	r2, r3
 80010e2:	81a2      	strh	r2, [r4, #12]
 80010e4:	b00d      	add	sp, #52	; 0x34
 80010e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80010e8:	fbb1 f3f2 	udiv	r3, r1, r2
 80010ec:	fb02 1113 	mls	r1, r2, r3, r1
 80010f0:	e7e8      	b.n	80010c4 <USART_Init+0x74>
 80010f2:	9909      	ldr	r1, [sp, #36]	; 0x24
 80010f4:	e7dd      	b.n	80010b2 <USART_Init+0x62>
 80010f6:	bf00      	nop

080010f8 <USART_StructInit>:
 80010f8:	2300      	movs	r3, #0
 80010fa:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80010fe:	e880 000c 	stmia.w	r0, {r2, r3}
 8001102:	220c      	movs	r2, #12
 8001104:	6083      	str	r3, [r0, #8]
 8001106:	60c3      	str	r3, [r0, #12]
 8001108:	6102      	str	r2, [r0, #16]
 800110a:	6143      	str	r3, [r0, #20]
 800110c:	4770      	bx	lr
 800110e:	bf00      	nop

08001110 <USART_ClockInit>:
 8001110:	b430      	push	{r4, r5}
 8001112:	e891 0028 	ldmia.w	r1, {r3, r5}
 8001116:	688c      	ldr	r4, [r1, #8]
 8001118:	6842      	ldr	r2, [r0, #4]
 800111a:	68c9      	ldr	r1, [r1, #12]
 800111c:	432b      	orrs	r3, r5
 800111e:	4323      	orrs	r3, r4
 8001120:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8001124:	430b      	orrs	r3, r1
 8001126:	4313      	orrs	r3, r2
 8001128:	6043      	str	r3, [r0, #4]
 800112a:	bc30      	pop	{r4, r5}
 800112c:	4770      	bx	lr
 800112e:	bf00      	nop

08001130 <USART_ClockStructInit>:
 8001130:	2300      	movs	r3, #0
 8001132:	6003      	str	r3, [r0, #0]
 8001134:	6043      	str	r3, [r0, #4]
 8001136:	6083      	str	r3, [r0, #8]
 8001138:	60c3      	str	r3, [r0, #12]
 800113a:	4770      	bx	lr

0800113c <USART_Cmd>:
 800113c:	6803      	ldr	r3, [r0, #0]
 800113e:	b919      	cbnz	r1, 8001148 <USART_Cmd+0xc>
 8001140:	f023 0101 	bic.w	r1, r3, #1
 8001144:	6001      	str	r1, [r0, #0]
 8001146:	4770      	bx	lr
 8001148:	f043 0201 	orr.w	r2, r3, #1
 800114c:	6002      	str	r2, [r0, #0]
 800114e:	4770      	bx	lr

08001150 <USART_DirectionModeCmd>:
 8001150:	6803      	ldr	r3, [r0, #0]
 8001152:	b91a      	cbnz	r2, 800115c <USART_DirectionModeCmd+0xc>
 8001154:	ea23 0101 	bic.w	r1, r3, r1
 8001158:	6001      	str	r1, [r0, #0]
 800115a:	4770      	bx	lr
 800115c:	4319      	orrs	r1, r3
 800115e:	6001      	str	r1, [r0, #0]
 8001160:	4770      	bx	lr
 8001162:	bf00      	nop

08001164 <USART_OverSampling8Cmd>:
 8001164:	6803      	ldr	r3, [r0, #0]
 8001166:	b919      	cbnz	r1, 8001170 <USART_OverSampling8Cmd+0xc>
 8001168:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800116c:	6001      	str	r1, [r0, #0]
 800116e:	4770      	bx	lr
 8001170:	f443 4200 	orr.w	r2, r3, #32768	; 0x8000
 8001174:	6002      	str	r2, [r0, #0]
 8001176:	4770      	bx	lr

08001178 <USART_OneBitMethodCmd>:
 8001178:	6883      	ldr	r3, [r0, #8]
 800117a:	b919      	cbnz	r1, 8001184 <USART_OneBitMethodCmd+0xc>
 800117c:	f423 6100 	bic.w	r1, r3, #2048	; 0x800
 8001180:	6081      	str	r1, [r0, #8]
 8001182:	4770      	bx	lr
 8001184:	f443 6200 	orr.w	r2, r3, #2048	; 0x800
 8001188:	6082      	str	r2, [r0, #8]
 800118a:	4770      	bx	lr

0800118c <USART_MSBFirstCmd>:
 800118c:	6843      	ldr	r3, [r0, #4]
 800118e:	b919      	cbnz	r1, 8001198 <USART_MSBFirstCmd+0xc>
 8001190:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 8001194:	6041      	str	r1, [r0, #4]
 8001196:	4770      	bx	lr
 8001198:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 800119c:	6042      	str	r2, [r0, #4]
 800119e:	4770      	bx	lr

080011a0 <USART_DataInvCmd>:
 80011a0:	6843      	ldr	r3, [r0, #4]
 80011a2:	b919      	cbnz	r1, 80011ac <USART_DataInvCmd+0xc>
 80011a4:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 80011a8:	6041      	str	r1, [r0, #4]
 80011aa:	4770      	bx	lr
 80011ac:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
 80011b0:	6042      	str	r2, [r0, #4]
 80011b2:	4770      	bx	lr

080011b4 <USART_InvPinCmd>:
 80011b4:	6843      	ldr	r3, [r0, #4]
 80011b6:	b91a      	cbnz	r2, 80011c0 <USART_InvPinCmd+0xc>
 80011b8:	ea23 0101 	bic.w	r1, r3, r1
 80011bc:	6041      	str	r1, [r0, #4]
 80011be:	4770      	bx	lr
 80011c0:	4319      	orrs	r1, r3
 80011c2:	6041      	str	r1, [r0, #4]
 80011c4:	4770      	bx	lr
 80011c6:	bf00      	nop

080011c8 <USART_SWAPPinCmd>:
 80011c8:	6843      	ldr	r3, [r0, #4]
 80011ca:	b919      	cbnz	r1, 80011d4 <USART_SWAPPinCmd+0xc>
 80011cc:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 80011d0:	6041      	str	r1, [r0, #4]
 80011d2:	4770      	bx	lr
 80011d4:	f443 4200 	orr.w	r2, r3, #32768	; 0x8000
 80011d8:	6042      	str	r2, [r0, #4]
 80011da:	4770      	bx	lr

080011dc <USART_ReceiverTimeOutCmd>:
 80011dc:	6843      	ldr	r3, [r0, #4]
 80011de:	b919      	cbnz	r1, 80011e8 <USART_ReceiverTimeOutCmd+0xc>
 80011e0:	f423 0100 	bic.w	r1, r3, #8388608	; 0x800000
 80011e4:	6041      	str	r1, [r0, #4]
 80011e6:	4770      	bx	lr
 80011e8:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80011ec:	6042      	str	r2, [r0, #4]
 80011ee:	4770      	bx	lr

080011f0 <USART_SetReceiverTimeOut>:
 80011f0:	6943      	ldr	r3, [r0, #20]
 80011f2:	f003 427f 	and.w	r2, r3, #4278190080	; 0xff000000
 80011f6:	6142      	str	r2, [r0, #20]
 80011f8:	6943      	ldr	r3, [r0, #20]
 80011fa:	4319      	orrs	r1, r3
 80011fc:	6141      	str	r1, [r0, #20]
 80011fe:	4770      	bx	lr

08001200 <USART_SetPrescaler>:
 8001200:	8a03      	ldrh	r3, [r0, #16]
 8001202:	f403 427f 	and.w	r2, r3, #65280	; 0xff00
 8001206:	8202      	strh	r2, [r0, #16]
 8001208:	8a03      	ldrh	r3, [r0, #16]
 800120a:	b29a      	uxth	r2, r3
 800120c:	4311      	orrs	r1, r2
 800120e:	8201      	strh	r1, [r0, #16]
 8001210:	4770      	bx	lr
 8001212:	bf00      	nop

08001214 <USART_STOPModeCmd>:
 8001214:	6803      	ldr	r3, [r0, #0]
 8001216:	b919      	cbnz	r1, 8001220 <USART_STOPModeCmd+0xc>
 8001218:	f023 0102 	bic.w	r1, r3, #2
 800121c:	6001      	str	r1, [r0, #0]
 800121e:	4770      	bx	lr
 8001220:	f043 0202 	orr.w	r2, r3, #2
 8001224:	6002      	str	r2, [r0, #0]
 8001226:	4770      	bx	lr

08001228 <USART_StopModeWakeUpSourceConfig>:
 8001228:	6883      	ldr	r3, [r0, #8]
 800122a:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800122e:	6082      	str	r2, [r0, #8]
 8001230:	6883      	ldr	r3, [r0, #8]
 8001232:	4319      	orrs	r1, r3
 8001234:	6081      	str	r1, [r0, #8]
 8001236:	4770      	bx	lr

08001238 <USART_AutoBaudRateCmd>:
 8001238:	6843      	ldr	r3, [r0, #4]
 800123a:	b919      	cbnz	r1, 8001244 <USART_AutoBaudRateCmd+0xc>
 800123c:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 8001240:	6041      	str	r1, [r0, #4]
 8001242:	4770      	bx	lr
 8001244:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8001248:	6042      	str	r2, [r0, #4]
 800124a:	4770      	bx	lr

0800124c <USART_AutoBaudRateConfig>:
 800124c:	6843      	ldr	r3, [r0, #4]
 800124e:	f423 02c0 	bic.w	r2, r3, #6291456	; 0x600000
 8001252:	6042      	str	r2, [r0, #4]
 8001254:	6843      	ldr	r3, [r0, #4]
 8001256:	4319      	orrs	r1, r3
 8001258:	6041      	str	r1, [r0, #4]
 800125a:	4770      	bx	lr

0800125c <USART_SendData>:
 800125c:	05c9      	lsls	r1, r1, #23
 800125e:	0dca      	lsrs	r2, r1, #23
 8001260:	8502      	strh	r2, [r0, #40]	; 0x28
 8001262:	4770      	bx	lr

08001264 <USART_ReceiveData>:
 8001264:	8c80      	ldrh	r0, [r0, #36]	; 0x24
 8001266:	05c1      	lsls	r1, r0, #23
 8001268:	0dc8      	lsrs	r0, r1, #23
 800126a:	4770      	bx	lr

0800126c <USART_SetAddress>:
 800126c:	6843      	ldr	r3, [r0, #4]
 800126e:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8001272:	6042      	str	r2, [r0, #4]
 8001274:	6843      	ldr	r3, [r0, #4]
 8001276:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
 800127a:	6041      	str	r1, [r0, #4]
 800127c:	4770      	bx	lr
 800127e:	bf00      	nop

08001280 <USART_MuteModeCmd>:
 8001280:	6803      	ldr	r3, [r0, #0]
 8001282:	b919      	cbnz	r1, 800128c <USART_MuteModeCmd+0xc>
 8001284:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 8001288:	6001      	str	r1, [r0, #0]
 800128a:	4770      	bx	lr
 800128c:	f443 5200 	orr.w	r2, r3, #8192	; 0x2000
 8001290:	6002      	str	r2, [r0, #0]
 8001292:	4770      	bx	lr

08001294 <USART_MuteModeWakeUpConfig>:
 8001294:	6803      	ldr	r3, [r0, #0]
 8001296:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800129a:	6002      	str	r2, [r0, #0]
 800129c:	6803      	ldr	r3, [r0, #0]
 800129e:	4319      	orrs	r1, r3
 80012a0:	6001      	str	r1, [r0, #0]
 80012a2:	4770      	bx	lr

080012a4 <USART_AddressDetectionConfig>:
 80012a4:	6843      	ldr	r3, [r0, #4]
 80012a6:	f023 0210 	bic.w	r2, r3, #16
 80012aa:	6042      	str	r2, [r0, #4]
 80012ac:	6843      	ldr	r3, [r0, #4]
 80012ae:	4319      	orrs	r1, r3
 80012b0:	6041      	str	r1, [r0, #4]
 80012b2:	4770      	bx	lr

080012b4 <USART_LINBreakDetectLengthConfig>:
 80012b4:	6843      	ldr	r3, [r0, #4]
 80012b6:	f023 0220 	bic.w	r2, r3, #32
 80012ba:	6042      	str	r2, [r0, #4]
 80012bc:	6843      	ldr	r3, [r0, #4]
 80012be:	4319      	orrs	r1, r3
 80012c0:	6041      	str	r1, [r0, #4]
 80012c2:	4770      	bx	lr

080012c4 <USART_LINCmd>:
 80012c4:	6843      	ldr	r3, [r0, #4]
 80012c6:	b919      	cbnz	r1, 80012d0 <USART_LINCmd+0xc>
 80012c8:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 80012cc:	6041      	str	r1, [r0, #4]
 80012ce:	4770      	bx	lr
 80012d0:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
 80012d4:	6042      	str	r2, [r0, #4]
 80012d6:	4770      	bx	lr

080012d8 <USART_HalfDuplexCmd>:
 80012d8:	6883      	ldr	r3, [r0, #8]
 80012da:	b919      	cbnz	r1, 80012e4 <USART_HalfDuplexCmd+0xc>
 80012dc:	f023 0108 	bic.w	r1, r3, #8
 80012e0:	6081      	str	r1, [r0, #8]
 80012e2:	4770      	bx	lr
 80012e4:	f043 0208 	orr.w	r2, r3, #8
 80012e8:	6082      	str	r2, [r0, #8]
 80012ea:	4770      	bx	lr

080012ec <USART_SetGuardTime>:
 80012ec:	8a03      	ldrh	r3, [r0, #16]
 80012ee:	b2da      	uxtb	r2, r3
 80012f0:	8202      	strh	r2, [r0, #16]
 80012f2:	8a03      	ldrh	r3, [r0, #16]
 80012f4:	b29a      	uxth	r2, r3
 80012f6:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
 80012fa:	8201      	strh	r1, [r0, #16]
 80012fc:	4770      	bx	lr
 80012fe:	bf00      	nop

08001300 <USART_SmartCardCmd>:
 8001300:	6883      	ldr	r3, [r0, #8]
 8001302:	b919      	cbnz	r1, 800130c <USART_SmartCardCmd+0xc>
 8001304:	f023 0120 	bic.w	r1, r3, #32
 8001308:	6081      	str	r1, [r0, #8]
 800130a:	4770      	bx	lr
 800130c:	f043 0220 	orr.w	r2, r3, #32
 8001310:	6082      	str	r2, [r0, #8]
 8001312:	4770      	bx	lr

08001314 <USART_SmartCardNACKCmd>:
 8001314:	6883      	ldr	r3, [r0, #8]
 8001316:	b919      	cbnz	r1, 8001320 <USART_SmartCardNACKCmd+0xc>
 8001318:	f023 0110 	bic.w	r1, r3, #16
 800131c:	6081      	str	r1, [r0, #8]
 800131e:	4770      	bx	lr
 8001320:	f043 0210 	orr.w	r2, r3, #16
 8001324:	6082      	str	r2, [r0, #8]
 8001326:	4770      	bx	lr

08001328 <USART_SetAutoRetryCount>:
 8001328:	6883      	ldr	r3, [r0, #8]
 800132a:	f423 2260 	bic.w	r2, r3, #917504	; 0xe0000
 800132e:	6082      	str	r2, [r0, #8]
 8001330:	6883      	ldr	r3, [r0, #8]
 8001332:	ea43 4141 	orr.w	r1, r3, r1, lsl #17
 8001336:	6081      	str	r1, [r0, #8]
 8001338:	4770      	bx	lr
 800133a:	bf00      	nop

0800133c <USART_SetBlockLength>:
 800133c:	6943      	ldr	r3, [r0, #20]
 800133e:	f023 427f 	bic.w	r2, r3, #4278190080	; 0xff000000
 8001342:	6142      	str	r2, [r0, #20]
 8001344:	6943      	ldr	r3, [r0, #20]
 8001346:	ea43 6101 	orr.w	r1, r3, r1, lsl #24
 800134a:	6141      	str	r1, [r0, #20]
 800134c:	4770      	bx	lr
 800134e:	bf00      	nop

08001350 <USART_IrDAConfig>:
 8001350:	6883      	ldr	r3, [r0, #8]
 8001352:	f023 0204 	bic.w	r2, r3, #4
 8001356:	6082      	str	r2, [r0, #8]
 8001358:	6883      	ldr	r3, [r0, #8]
 800135a:	4319      	orrs	r1, r3
 800135c:	6081      	str	r1, [r0, #8]
 800135e:	4770      	bx	lr

08001360 <USART_IrDACmd>:
 8001360:	6883      	ldr	r3, [r0, #8]
 8001362:	b919      	cbnz	r1, 800136c <USART_IrDACmd+0xc>
 8001364:	f023 0102 	bic.w	r1, r3, #2
 8001368:	6081      	str	r1, [r0, #8]
 800136a:	4770      	bx	lr
 800136c:	f043 0202 	orr.w	r2, r3, #2
 8001370:	6082      	str	r2, [r0, #8]
 8001372:	4770      	bx	lr

08001374 <USART_DECmd>:
 8001374:	6883      	ldr	r3, [r0, #8]
 8001376:	b919      	cbnz	r1, 8001380 <USART_DECmd+0xc>
 8001378:	f423 4180 	bic.w	r1, r3, #16384	; 0x4000
 800137c:	6081      	str	r1, [r0, #8]
 800137e:	4770      	bx	lr
 8001380:	f443 4280 	orr.w	r2, r3, #16384	; 0x4000
 8001384:	6082      	str	r2, [r0, #8]
 8001386:	4770      	bx	lr

08001388 <USART_DEPolarityConfig>:
 8001388:	6883      	ldr	r3, [r0, #8]
 800138a:	f423 4200 	bic.w	r2, r3, #32768	; 0x8000
 800138e:	6082      	str	r2, [r0, #8]
 8001390:	6883      	ldr	r3, [r0, #8]
 8001392:	4319      	orrs	r1, r3
 8001394:	6081      	str	r1, [r0, #8]
 8001396:	4770      	bx	lr

08001398 <USART_SetDEAssertionTime>:
 8001398:	6803      	ldr	r3, [r0, #0]
 800139a:	f023 7278 	bic.w	r2, r3, #65011712	; 0x3e00000
 800139e:	6002      	str	r2, [r0, #0]
 80013a0:	6803      	ldr	r3, [r0, #0]
 80013a2:	ea43 5141 	orr.w	r1, r3, r1, lsl #21
 80013a6:	6001      	str	r1, [r0, #0]
 80013a8:	4770      	bx	lr
 80013aa:	bf00      	nop

080013ac <USART_SetDEDeassertionTime>:
 80013ac:	6803      	ldr	r3, [r0, #0]
 80013ae:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80013b2:	6002      	str	r2, [r0, #0]
 80013b4:	6803      	ldr	r3, [r0, #0]
 80013b6:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80013ba:	6001      	str	r1, [r0, #0]
 80013bc:	4770      	bx	lr
 80013be:	bf00      	nop

080013c0 <USART_DMACmd>:
 80013c0:	6883      	ldr	r3, [r0, #8]
 80013c2:	b91a      	cbnz	r2, 80013cc <USART_DMACmd+0xc>
 80013c4:	ea23 0101 	bic.w	r1, r3, r1
 80013c8:	6081      	str	r1, [r0, #8]
 80013ca:	4770      	bx	lr
 80013cc:	4319      	orrs	r1, r3
 80013ce:	6081      	str	r1, [r0, #8]
 80013d0:	4770      	bx	lr
 80013d2:	bf00      	nop

080013d4 <USART_DMAReceptionErrorConfig>:
 80013d4:	6883      	ldr	r3, [r0, #8]
 80013d6:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80013da:	6082      	str	r2, [r0, #8]
 80013dc:	6883      	ldr	r3, [r0, #8]
 80013de:	4319      	orrs	r1, r3
 80013e0:	6081      	str	r1, [r0, #8]
 80013e2:	4770      	bx	lr

080013e4 <USART_ITConfig>:
 80013e4:	b2cb      	uxtb	r3, r1
 80013e6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80013ea:	b410      	push	{r4}
 80013ec:	2401      	movs	r4, #1
 80013ee:	2902      	cmp	r1, #2
 80013f0:	fa04 f303 	lsl.w	r3, r4, r3
 80013f4:	d00d      	beq.n	8001412 <USART_ITConfig+0x2e>
 80013f6:	2903      	cmp	r1, #3
 80013f8:	bf08      	it	eq
 80013fa:	3008      	addeq	r0, #8
 80013fc:	b92a      	cbnz	r2, 800140a <USART_ITConfig+0x26>
 80013fe:	6802      	ldr	r2, [r0, #0]
 8001400:	ea22 0103 	bic.w	r1, r2, r3
 8001404:	6001      	str	r1, [r0, #0]
 8001406:	bc10      	pop	{r4}
 8001408:	4770      	bx	lr
 800140a:	6802      	ldr	r2, [r0, #0]
 800140c:	4313      	orrs	r3, r2
 800140e:	6003      	str	r3, [r0, #0]
 8001410:	e7f9      	b.n	8001406 <USART_ITConfig+0x22>
 8001412:	3004      	adds	r0, #4
 8001414:	e7f2      	b.n	80013fc <USART_ITConfig+0x18>
 8001416:	bf00      	nop

08001418 <USART_RequestCmd>:
 8001418:	8b03      	ldrh	r3, [r0, #24]
 800141a:	b922      	cbnz	r2, 8001426 <USART_RequestCmd+0xe>
 800141c:	b29a      	uxth	r2, r3
 800141e:	ea22 0101 	bic.w	r1, r2, r1
 8001422:	8301      	strh	r1, [r0, #24]
 8001424:	4770      	bx	lr
 8001426:	4319      	orrs	r1, r3
 8001428:	b28b      	uxth	r3, r1
 800142a:	8303      	strh	r3, [r0, #24]
 800142c:	4770      	bx	lr
 800142e:	bf00      	nop

08001430 <USART_OverrunDetectionConfig>:
 8001430:	6883      	ldr	r3, [r0, #8]
 8001432:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8001436:	6082      	str	r2, [r0, #8]
 8001438:	6883      	ldr	r3, [r0, #8]
 800143a:	4319      	orrs	r1, r3
 800143c:	6081      	str	r1, [r0, #8]
 800143e:	4770      	bx	lr

08001440 <USART_GetFlagStatus>:
 8001440:	69c3      	ldr	r3, [r0, #28]
 8001442:	4219      	tst	r1, r3
 8001444:	bf0c      	ite	eq
 8001446:	2000      	moveq	r0, #0
 8001448:	2001      	movne	r0, #1
 800144a:	4770      	bx	lr

0800144c <USART_ClearFlag>:
 800144c:	6201      	str	r1, [r0, #32]
 800144e:	4770      	bx	lr

08001450 <USART_GetITStatus>:
 8001450:	b410      	push	{r4}
 8001452:	f3c1 2307 	ubfx	r3, r1, #8, #8
 8001456:	2401      	movs	r4, #1
 8001458:	b2ca      	uxtb	r2, r1
 800145a:	42a3      	cmp	r3, r4
 800145c:	fa04 f202 	lsl.w	r2, r4, r2
 8001460:	d012      	beq.n	8001488 <USART_GetITStatus+0x38>
 8001462:	2b02      	cmp	r3, #2
 8001464:	bf0c      	ite	eq
 8001466:	6843      	ldreq	r3, [r0, #4]
 8001468:	6883      	ldrne	r3, [r0, #8]
 800146a:	4013      	ands	r3, r2
 800146c:	69c0      	ldr	r0, [r0, #28]
 800146e:	b14b      	cbz	r3, 8001484 <USART_GetITStatus+0x34>
 8001470:	0c09      	lsrs	r1, r1, #16
 8001472:	2301      	movs	r3, #1
 8001474:	fa03 f201 	lsl.w	r2, r3, r1
 8001478:	4202      	tst	r2, r0
 800147a:	bf0c      	ite	eq
 800147c:	2000      	moveq	r0, #0
 800147e:	2001      	movne	r0, #1
 8001480:	bc10      	pop	{r4}
 8001482:	4770      	bx	lr
 8001484:	4618      	mov	r0, r3
 8001486:	e7fb      	b.n	8001480 <USART_GetITStatus+0x30>
 8001488:	6803      	ldr	r3, [r0, #0]
 800148a:	4013      	ands	r3, r2
 800148c:	e7ee      	b.n	800146c <USART_GetITStatus+0x1c>
 800148e:	bf00      	nop

08001490 <USART_ClearITPendingBit>:
 8001490:	0c09      	lsrs	r1, r1, #16
 8001492:	2301      	movs	r3, #1
 8001494:	fa03 f201 	lsl.w	r2, r3, r1
 8001498:	6202      	str	r2, [r0, #32]
 800149a:	4770      	bx	lr

0800149c <GPIO_DeInit>:
 800149c:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80014a0:	b508      	push	{r3, lr}
 80014a2:	d02a      	beq.n	80014fa <GPIO_DeInit+0x5e>
 80014a4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80014a8:	f6c4 0300 	movt	r3, #18432	; 0x4800
 80014ac:	4298      	cmp	r0, r3
 80014ae:	d030      	beq.n	8001512 <GPIO_DeInit+0x76>
 80014b0:	f44f 6100 	mov.w	r1, #2048	; 0x800
 80014b4:	f6c4 0100 	movt	r1, #18432	; 0x4800
 80014b8:	4288      	cmp	r0, r1
 80014ba:	d036      	beq.n	800152a <GPIO_DeInit+0x8e>
 80014bc:	f44f 6240 	mov.w	r2, #3072	; 0xc00
 80014c0:	f6c4 0200 	movt	r2, #18432	; 0x4800
 80014c4:	4290      	cmp	r0, r2
 80014c6:	d03c      	beq.n	8001542 <GPIO_DeInit+0xa6>
 80014c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014cc:	f6c4 0300 	movt	r3, #18432	; 0x4800
 80014d0:	4298      	cmp	r0, r3
 80014d2:	d042      	beq.n	800155a <GPIO_DeInit+0xbe>
 80014d4:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014d8:	f6c4 0100 	movt	r1, #18432	; 0x4800
 80014dc:	4288      	cmp	r0, r1
 80014de:	d000      	beq.n	80014e2 <GPIO_DeInit+0x46>
 80014e0:	bd08      	pop	{r3, pc}
 80014e2:	2101      	movs	r1, #1
 80014e4:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80014e8:	f7ff fb36 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 80014ec:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 80014f0:	2100      	movs	r1, #0
 80014f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80014f6:	f7ff bb2f 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 80014fa:	2101      	movs	r1, #1
 80014fc:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001500:	f7ff fb2a 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 8001504:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001508:	2100      	movs	r1, #0
 800150a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800150e:	f7ff bb23 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 8001512:	2101      	movs	r1, #1
 8001514:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001518:	f7ff fb1e 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 800151c:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001520:	2100      	movs	r1, #0
 8001522:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001526:	f7ff bb17 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 800152a:	2101      	movs	r1, #1
 800152c:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8001530:	f7ff fb12 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 8001534:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8001538:	2100      	movs	r1, #0
 800153a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800153e:	f7ff bb0b 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 8001542:	2101      	movs	r1, #1
 8001544:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8001548:	f7ff fb06 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 800154c:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8001550:	2100      	movs	r1, #0
 8001552:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001556:	f7ff baff 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 800155a:	2101      	movs	r1, #1
 800155c:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001560:	f7ff fafa 	bl	8000b58 <RCC_AHBPeriphResetCmd>
 8001564:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 8001568:	2100      	movs	r1, #0
 800156a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800156e:	f7ff baf3 	b.w	8000b58 <RCC_AHBPeriphResetCmd>
 8001572:	bf00      	nop

08001574 <GPIO_Init>:
 8001574:	2200      	movs	r2, #0
 8001576:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 800157a:	4613      	mov	r3, r2
 800157c:	680d      	ldr	r5, [r1, #0]
 800157e:	2601      	movs	r6, #1
 8001580:	f04f 0c03 	mov.w	ip, #3
 8001584:	e00b      	b.n	800159e <GPIO_Init+0x2a>
 8001586:	3301      	adds	r3, #1
 8001588:	fa06 f403 	lsl.w	r4, r6, r3
 800158c:	ea04 0705 	and.w	r7, r4, r5
 8001590:	3202      	adds	r2, #2
 8001592:	42a7      	cmp	r7, r4
 8001594:	d031      	beq.n	80015fa <GPIO_Init+0x86>
 8001596:	3301      	adds	r3, #1
 8001598:	3202      	adds	r2, #2
 800159a:	2b10      	cmp	r3, #16
 800159c:	d051      	beq.n	8001642 <GPIO_Init+0xce>
 800159e:	fa06 f403 	lsl.w	r4, r6, r3
 80015a2:	ea04 0705 	and.w	r7, r4, r5
 80015a6:	42a7      	cmp	r7, r4
 80015a8:	d1ed      	bne.n	8001586 <GPIO_Init+0x12>
 80015aa:	790c      	ldrb	r4, [r1, #4]
 80015ac:	f104 38ff 	add.w	r8, r4, #4294967295
 80015b0:	f1b8 0f01 	cmp.w	r8, #1
 80015b4:	d948      	bls.n	8001648 <GPIO_Init+0xd4>
 80015b6:	fa0c f702 	lsl.w	r7, ip, r2
 80015ba:	ea6f 0807 	mvn.w	r8, r7
 80015be:	6807      	ldr	r7, [r0, #0]
 80015c0:	f891 9007 	ldrb.w	r9, [r1, #7]
 80015c4:	ea08 0707 	and.w	r7, r8, r7
 80015c8:	6007      	str	r7, [r0, #0]
 80015ca:	6807      	ldr	r7, [r0, #0]
 80015cc:	fa04 f402 	lsl.w	r4, r4, r2
 80015d0:	433c      	orrs	r4, r7
 80015d2:	6004      	str	r4, [r0, #0]
 80015d4:	68c4      	ldr	r4, [r0, #12]
 80015d6:	fa0c f702 	lsl.w	r7, ip, r2
 80015da:	ea24 0407 	bic.w	r4, r4, r7
 80015de:	60c4      	str	r4, [r0, #12]
 80015e0:	68c7      	ldr	r7, [r0, #12]
 80015e2:	fa09 f402 	lsl.w	r4, r9, r2
 80015e6:	433c      	orrs	r4, r7
 80015e8:	3301      	adds	r3, #1
 80015ea:	60c4      	str	r4, [r0, #12]
 80015ec:	fa06 f403 	lsl.w	r4, r6, r3
 80015f0:	ea04 0705 	and.w	r7, r4, r5
 80015f4:	3202      	adds	r2, #2
 80015f6:	42a7      	cmp	r7, r4
 80015f8:	d1cd      	bne.n	8001596 <GPIO_Init+0x22>
 80015fa:	790c      	ldrb	r4, [r1, #4]
 80015fc:	f104 38ff 	add.w	r8, r4, #4294967295
 8001600:	f1b8 0f01 	cmp.w	r8, #1
 8001604:	d946      	bls.n	8001694 <GPIO_Init+0x120>
 8001606:	fa0c f702 	lsl.w	r7, ip, r2
 800160a:	ea6f 0807 	mvn.w	r8, r7
 800160e:	6807      	ldr	r7, [r0, #0]
 8001610:	f891 9007 	ldrb.w	r9, [r1, #7]
 8001614:	ea08 0707 	and.w	r7, r8, r7
 8001618:	6007      	str	r7, [r0, #0]
 800161a:	6807      	ldr	r7, [r0, #0]
 800161c:	fa04 f402 	lsl.w	r4, r4, r2
 8001620:	433c      	orrs	r4, r7
 8001622:	6004      	str	r4, [r0, #0]
 8001624:	68c4      	ldr	r4, [r0, #12]
 8001626:	fa0c f702 	lsl.w	r7, ip, r2
 800162a:	ea24 0407 	bic.w	r4, r4, r7
 800162e:	60c4      	str	r4, [r0, #12]
 8001630:	68c7      	ldr	r7, [r0, #12]
 8001632:	fa09 f402 	lsl.w	r4, r9, r2
 8001636:	3301      	adds	r3, #1
 8001638:	433c      	orrs	r4, r7
 800163a:	3202      	adds	r2, #2
 800163c:	2b10      	cmp	r3, #16
 800163e:	60c4      	str	r4, [r0, #12]
 8001640:	d1ad      	bne.n	800159e <GPIO_Init+0x2a>
 8001642:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8001646:	4770      	bx	lr
 8001648:	f8d0 b008 	ldr.w	fp, [r0, #8]
 800164c:	f891 9005 	ldrb.w	r9, [r1, #5]
 8001650:	f891 a006 	ldrb.w	sl, [r1, #6]
 8001654:	fa0c f802 	lsl.w	r8, ip, r2
 8001658:	ea6f 0808 	mvn.w	r8, r8
 800165c:	ea08 0b0b 	and.w	fp, r8, fp
 8001660:	f8c0 b008 	str.w	fp, [r0, #8]
 8001664:	f8d0 b008 	ldr.w	fp, [r0, #8]
 8001668:	fa09 f902 	lsl.w	r9, r9, r2
 800166c:	ea49 090b 	orr.w	r9, r9, fp
 8001670:	f8c0 9008 	str.w	r9, [r0, #8]
 8001674:	f8b0 9004 	ldrh.w	r9, [r0, #4]
 8001678:	fa1f f989 	uxth.w	r9, r9
 800167c:	ea29 0707 	bic.w	r7, r9, r7
 8001680:	8087      	strh	r7, [r0, #4]
 8001682:	f8b0 9004 	ldrh.w	r9, [r0, #4]
 8001686:	fa0a f703 	lsl.w	r7, sl, r3
 800168a:	ea47 0709 	orr.w	r7, r7, r9
 800168e:	b2bf      	uxth	r7, r7
 8001690:	8087      	strh	r7, [r0, #4]
 8001692:	e794      	b.n	80015be <GPIO_Init+0x4a>
 8001694:	f8d0 b008 	ldr.w	fp, [r0, #8]
 8001698:	f891 9005 	ldrb.w	r9, [r1, #5]
 800169c:	f891 a006 	ldrb.w	sl, [r1, #6]
 80016a0:	fa0c f802 	lsl.w	r8, ip, r2
 80016a4:	ea6f 0808 	mvn.w	r8, r8
 80016a8:	ea08 0b0b 	and.w	fp, r8, fp
 80016ac:	f8c0 b008 	str.w	fp, [r0, #8]
 80016b0:	f8d0 b008 	ldr.w	fp, [r0, #8]
 80016b4:	fa09 f902 	lsl.w	r9, r9, r2
 80016b8:	ea49 090b 	orr.w	r9, r9, fp
 80016bc:	f8c0 9008 	str.w	r9, [r0, #8]
 80016c0:	f8b0 9004 	ldrh.w	r9, [r0, #4]
 80016c4:	fa1f f989 	uxth.w	r9, r9
 80016c8:	ea29 0707 	bic.w	r7, r9, r7
 80016cc:	8087      	strh	r7, [r0, #4]
 80016ce:	f8b0 9004 	ldrh.w	r9, [r0, #4]
 80016d2:	fa0a f703 	lsl.w	r7, sl, r3
 80016d6:	ea47 0709 	orr.w	r7, r7, r9
 80016da:	b2bf      	uxth	r7, r7
 80016dc:	8087      	strh	r7, [r0, #4]
 80016de:	e796      	b.n	800160e <GPIO_Init+0x9a>

080016e0 <GPIO_StructInit>:
 80016e0:	2300      	movs	r3, #0
 80016e2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016e6:	2102      	movs	r1, #2
 80016e8:	6002      	str	r2, [r0, #0]
 80016ea:	7103      	strb	r3, [r0, #4]
 80016ec:	7141      	strb	r1, [r0, #5]
 80016ee:	7183      	strb	r3, [r0, #6]
 80016f0:	71c3      	strb	r3, [r0, #7]
 80016f2:	4770      	bx	lr

080016f4 <GPIO_PinLockConfig>:
 80016f4:	b082      	sub	sp, #8
 80016f6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016fa:	9301      	str	r3, [sp, #4]
 80016fc:	9a01      	ldr	r2, [sp, #4]
 80016fe:	ea41 0302 	orr.w	r3, r1, r2
 8001702:	9301      	str	r3, [sp, #4]
 8001704:	9a01      	ldr	r2, [sp, #4]
 8001706:	61c2      	str	r2, [r0, #28]
 8001708:	61c1      	str	r1, [r0, #28]
 800170a:	9901      	ldr	r1, [sp, #4]
 800170c:	61c1      	str	r1, [r0, #28]
 800170e:	69c3      	ldr	r3, [r0, #28]
 8001710:	9301      	str	r3, [sp, #4]
 8001712:	69c0      	ldr	r0, [r0, #28]
 8001714:	9001      	str	r0, [sp, #4]
 8001716:	b002      	add	sp, #8
 8001718:	4770      	bx	lr
 800171a:	bf00      	nop

0800171c <GPIO_ReadInputDataBit>:
 800171c:	8a03      	ldrh	r3, [r0, #16]
 800171e:	4219      	tst	r1, r3
 8001720:	bf0c      	ite	eq
 8001722:	2000      	moveq	r0, #0
 8001724:	2001      	movne	r0, #1
 8001726:	4770      	bx	lr

08001728 <GPIO_ReadInputData>:
 8001728:	8a00      	ldrh	r0, [r0, #16]
 800172a:	b280      	uxth	r0, r0
 800172c:	4770      	bx	lr
 800172e:	bf00      	nop

08001730 <GPIO_ReadOutputDataBit>:
 8001730:	8a83      	ldrh	r3, [r0, #20]
 8001732:	4219      	tst	r1, r3
 8001734:	bf0c      	ite	eq
 8001736:	2000      	moveq	r0, #0
 8001738:	2001      	movne	r0, #1
 800173a:	4770      	bx	lr

0800173c <GPIO_ReadOutputData>:
 800173c:	8a80      	ldrh	r0, [r0, #20]
 800173e:	b280      	uxth	r0, r0
 8001740:	4770      	bx	lr
 8001742:	bf00      	nop

08001744 <GPIO_SetBits>:
 8001744:	6181      	str	r1, [r0, #24]
 8001746:	4770      	bx	lr

08001748 <GPIO_ResetBits>:
 8001748:	8501      	strh	r1, [r0, #40]	; 0x28
 800174a:	4770      	bx	lr

0800174c <GPIO_WriteBit>:
 800174c:	b90a      	cbnz	r2, 8001752 <GPIO_WriteBit+0x6>
 800174e:	8501      	strh	r1, [r0, #40]	; 0x28
 8001750:	4770      	bx	lr
 8001752:	6181      	str	r1, [r0, #24]
 8001754:	4770      	bx	lr
 8001756:	bf00      	nop

08001758 <GPIO_Write>:
 8001758:	8281      	strh	r1, [r0, #20]
 800175a:	4770      	bx	lr

0800175c <GPIO_PinAFConfig>:
 800175c:	08cb      	lsrs	r3, r1, #3
 800175e:	3308      	adds	r3, #8
 8001760:	f001 0107 	and.w	r1, r1, #7
 8001764:	b430      	push	{r4, r5}
 8001766:	0089      	lsls	r1, r1, #2
 8001768:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
 800176c:	240f      	movs	r4, #15
 800176e:	fa04 f401 	lsl.w	r4, r4, r1
 8001772:	ea25 0404 	bic.w	r4, r5, r4
 8001776:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
 800177a:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 800177e:	fa02 f201 	lsl.w	r2, r2, r1
 8001782:	4314      	orrs	r4, r2
 8001784:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
 8001788:	bc30      	pop	{r4, r5}
 800178a:	4770      	bx	lr

0800178c <NVIC_PriorityGroupConfig>:
 800178c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8001790:	f040 60bf 	orr.w	r0, r0, #100139008	; 0x5f80000
 8001794:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8001798:	f440 3100 	orr.w	r1, r0, #131072	; 0x20000
 800179c:	60d9      	str	r1, [r3, #12]
 800179e:	4770      	bx	lr

080017a0 <NVIC_Init>:
 80017a0:	78c3      	ldrb	r3, [r0, #3]
 80017a2:	b470      	push	{r4, r5, r6}
 80017a4:	b97b      	cbnz	r3, 80017c6 <NVIC_Init+0x26>
 80017a6:	7802      	ldrb	r2, [r0, #0]
 80017a8:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 80017ac:	0951      	lsrs	r1, r2, #5
 80017ae:	f2ce 0300 	movt	r3, #57344	; 0xe000
 80017b2:	f002 021f 	and.w	r2, r2, #31
 80017b6:	3120      	adds	r1, #32
 80017b8:	2001      	movs	r0, #1
 80017ba:	fa00 f202 	lsl.w	r2, r0, r2
 80017be:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 80017c2:	bc70      	pop	{r4, r5, r6}
 80017c4:	4770      	bx	lr
 80017c6:	f44f 446d 	mov.w	r4, #60672	; 0xed00
 80017ca:	f2ce 0400 	movt	r4, #57344	; 0xe000
 80017ce:	7845      	ldrb	r5, [r0, #1]
 80017d0:	68e6      	ldr	r6, [r4, #12]
 80017d2:	7884      	ldrb	r4, [r0, #2]
 80017d4:	7803      	ldrb	r3, [r0, #0]
 80017d6:	43f1      	mvns	r1, r6
 80017d8:	f3c1 2202 	ubfx	r2, r1, #8, #3
 80017dc:	260f      	movs	r6, #15
 80017de:	f1c2 0104 	rsb	r1, r2, #4
 80017e2:	fa26 f202 	lsr.w	r2, r6, r2
 80017e6:	fa05 f101 	lsl.w	r1, r5, r1
 80017ea:	4022      	ands	r2, r4
 80017ec:	430a      	orrs	r2, r1
 80017ee:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80017f2:	f503 4161 	add.w	r1, r3, #57600	; 0xe100
 80017f6:	0112      	lsls	r2, r2, #4
 80017f8:	b2d3      	uxtb	r3, r2
 80017fa:	f881 3300 	strb.w	r3, [r1, #768]	; 0x300
 80017fe:	7800      	ldrb	r0, [r0, #0]
 8001800:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8001804:	0941      	lsrs	r1, r0, #5
 8001806:	f000 021f 	and.w	r2, r0, #31
 800180a:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800180e:	2001      	movs	r0, #1
 8001810:	fa00 f202 	lsl.w	r2, r0, r2
 8001814:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8001818:	e7d3      	b.n	80017c2 <NVIC_Init+0x22>
 800181a:	bf00      	nop

0800181c <NVIC_SetVectorTable>:
 800181c:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
 8001820:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8001824:	f021 027f 	bic.w	r2, r1, #127	; 0x7f
 8001828:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800182c:	4310      	orrs	r0, r2
 800182e:	6098      	str	r0, [r3, #8]
 8001830:	4770      	bx	lr
 8001832:	bf00      	nop

08001834 <NVIC_SystemLPConfig>:
 8001834:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8001838:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800183c:	691a      	ldr	r2, [r3, #16]
 800183e:	b919      	cbnz	r1, 8001848 <NVIC_SystemLPConfig+0x14>
 8001840:	ea22 0000 	bic.w	r0, r2, r0
 8001844:	6118      	str	r0, [r3, #16]
 8001846:	4770      	bx	lr
 8001848:	4310      	orrs	r0, r2
 800184a:	6118      	str	r0, [r3, #16]
 800184c:	4770      	bx	lr
 800184e:	bf00      	nop

08001850 <SysTick_CLKSourceConfig>:
 8001850:	f24e 0310 	movw	r3, #57360	; 0xe010
 8001854:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8001858:	2804      	cmp	r0, #4
 800185a:	681a      	ldr	r2, [r3, #0]
 800185c:	bf0c      	ite	eq
 800185e:	f042 0204 	orreq.w	r2, r2, #4
 8001862:	f022 0204 	bicne.w	r2, r2, #4
 8001866:	601a      	str	r2, [r3, #0]
 8001868:	4770      	bx	lr
 800186a:	bf00      	nop

0800186c <__register_exitproc>:
 800186c:	b510      	push	{r4, lr}
 800186e:	4c03      	ldr	r4, [pc, #12]	; (800187c <__register_exitproc+0x10>)
 8001870:	b114      	cbz	r4, 8001878 <__register_exitproc+0xc>
 8001872:	f3af 8000 	nop.w
 8001876:	bd10      	pop	{r4, pc}
 8001878:	4620      	mov	r0, r4
 800187a:	bd10      	pop	{r4, pc}
 800187c:	00000000 	.word	0x00000000

08001880 <exit>:
 8001880:	b508      	push	{r3, lr}
 8001882:	4b08      	ldr	r3, [pc, #32]	; (80018a4 <exit+0x24>)
 8001884:	4604      	mov	r4, r0
 8001886:	b11b      	cbz	r3, 8001890 <exit+0x10>
 8001888:	2100      	movs	r1, #0
 800188a:	f3af 8000 	nop.w
 800188e:	e001      	b.n	8001894 <exit+0x14>
 8001890:	f000 f80c 	bl	80018ac <__libc_fini_array>
 8001894:	4804      	ldr	r0, [pc, #16]	; (80018a8 <exit+0x28>)
 8001896:	6800      	ldr	r0, [r0, #0]
 8001898:	6a81      	ldr	r1, [r0, #40]	; 0x28
 800189a:	b101      	cbz	r1, 800189e <exit+0x1e>
 800189c:	4788      	blx	r1
 800189e:	4620      	mov	r0, r4
 80018a0:	f000 f848 	bl	8001934 <_exit>
 80018a4:	00000000 	.word	0x00000000
 80018a8:	080019c8 	.word	0x080019c8

080018ac <__libc_fini_array>:
 80018ac:	b570      	push	{r4, r5, r6, lr}
 80018ae:	4b08      	ldr	r3, [pc, #32]	; (80018d0 <__libc_fini_array+0x24>)
 80018b0:	4c08      	ldr	r4, [pc, #32]	; (80018d4 <__libc_fini_array+0x28>)
 80018b2:	1ae0      	subs	r0, r4, r3
 80018b4:	1084      	asrs	r4, r0, #2
 80018b6:	eb03 0684 	add.w	r6, r3, r4, lsl #2
 80018ba:	2500      	movs	r5, #0
 80018bc:	3d04      	subs	r5, #4
 80018be:	b11c      	cbz	r4, 80018c8 <__libc_fini_array+0x1c>
 80018c0:	5972      	ldr	r2, [r6, r5]
 80018c2:	4790      	blx	r2
 80018c4:	3c01      	subs	r4, #1
 80018c6:	e7f9      	b.n	80018bc <__libc_fini_array+0x10>
 80018c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80018cc:	f000 b88c 	b.w	80019e8 <_fini>
 80018d0:	08001a04 	.word	0x08001a04
 80018d4:	08001a08 	.word	0x08001a08

080018d8 <__libc_init_array>:
 80018d8:	b538      	push	{r3, r4, r5, lr}
 80018da:	4d0e      	ldr	r5, [pc, #56]	; (8001914 <__libc_init_array+0x3c>)
 80018dc:	4b0e      	ldr	r3, [pc, #56]	; (8001918 <__libc_init_array+0x40>)
 80018de:	1ae8      	subs	r0, r5, r3
 80018e0:	1085      	asrs	r5, r0, #2
 80018e2:	2400      	movs	r4, #0
 80018e4:	42ac      	cmp	r4, r5
 80018e6:	d005      	beq.n	80018f4 <__libc_init_array+0x1c>
 80018e8:	490b      	ldr	r1, [pc, #44]	; (8001918 <__libc_init_array+0x40>)
 80018ea:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
 80018ee:	4790      	blx	r2
 80018f0:	3401      	adds	r4, #1
 80018f2:	e7f7      	b.n	80018e4 <__libc_init_array+0xc>
 80018f4:	f000 f872 	bl	80019dc <_init>
 80018f8:	4908      	ldr	r1, [pc, #32]	; (800191c <__libc_init_array+0x44>)
 80018fa:	4a09      	ldr	r2, [pc, #36]	; (8001920 <__libc_init_array+0x48>)
 80018fc:	1a54      	subs	r4, r2, r1
 80018fe:	10a5      	asrs	r5, r4, #2
 8001900:	2400      	movs	r4, #0
 8001902:	42ac      	cmp	r4, r5
 8001904:	d005      	beq.n	8001912 <__libc_init_array+0x3a>
 8001906:	4b05      	ldr	r3, [pc, #20]	; (800191c <__libc_init_array+0x44>)
 8001908:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800190c:	4780      	blx	r0
 800190e:	3401      	adds	r4, #1
 8001910:	e7f7      	b.n	8001902 <__libc_init_array+0x2a>
 8001912:	bd38      	pop	{r3, r4, r5, pc}
 8001914:	08001a00 	.word	0x08001a00
 8001918:	08001a00 	.word	0x08001a00
 800191c:	08001a00 	.word	0x08001a00
 8001920:	08001a04 	.word	0x08001a04

08001924 <memset>:
 8001924:	1882      	adds	r2, r0, r2
 8001926:	4603      	mov	r3, r0
 8001928:	4293      	cmp	r3, r2
 800192a:	d002      	beq.n	8001932 <memset+0xe>
 800192c:	f803 1b01 	strb.w	r1, [r3], #1
 8001930:	e7fa      	b.n	8001928 <memset+0x4>
 8001932:	4770      	bx	lr

08001934 <_exit>:
 8001934:	e7fe      	b.n	8001934 <_exit>
 8001936:	bf00      	nop

08001938 <main>:
#include "main.h"
#define I2S_SLAVE_RECEIVER

int main(void)
{
 8001938:	b508      	push	{r3, lr}
	uint32_t t_data = 0x123456;
	uint32_t r_data = 0;

	i2s_config();	
 800193a:	f7fe fd85 	bl	8000448 <i2s_config>
	Usart2_Config();
 800193e:	f7fe fdf3 	bl	8000528 <Usart2_Config>
	I2S_Cmd(SPI1, ENABLE);
 8001942:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 8001946:	f2c4 0001 	movt	r0, #16385	; 0x4001
 800194a:	2101      	movs	r1, #1
 800194c:	f7ff fa68 	bl	8000e20 <I2S_Cmd>
	SPI_I2S_ITConfig(SPI1, SPI_I2S_IT_RXNE, ENABLE);
 8001950:	f44f 5040 	mov.w	r0, #12288	; 0x3000
 8001954:	f2c4 0001 	movt	r0, #16385	; 0x4001
 8001958:	2160      	movs	r1, #96	; 0x60
 800195a:	2201      	movs	r2, #1
 800195c:	f7ff fb08 	bl	8000f70 <SPI_I2S_ITConfig>
	USART_printf(USART2, "Sys Init Ok!");	
 8001960:	f44f 4088 	mov.w	r0, #17408	; 0x4400
 8001964:	f2c4 0000 	movt	r0, #16384	; 0x4000
 8001968:	4901      	ldr	r1, [pc, #4]	; (8001970 <main+0x38>)
 800196a:	f7fe fe1d 	bl	80005a8 <USART_printf>
 800196e:	e7fe      	b.n	800196e <main+0x36>
 8001970:	080019cc 	.word	0x080019cc

08001974 <Reset_Handler>:
 8001974:	2100      	movs	r1, #0
 8001976:	f000 b804 	b.w	8001982 <LoopCopyDataInit>

0800197a <CopyDataInit>:
 800197a:	4b0c      	ldr	r3, [pc, #48]	; (80019ac <LoopFillZerobss+0x12>)
 800197c:	585b      	ldr	r3, [r3, r1]
 800197e:	5043      	str	r3, [r0, r1]
 8001980:	3104      	adds	r1, #4

08001982 <LoopCopyDataInit>:
 8001982:	480b      	ldr	r0, [pc, #44]	; (80019b0 <LoopFillZerobss+0x16>)
 8001984:	4b0b      	ldr	r3, [pc, #44]	; (80019b4 <LoopFillZerobss+0x1a>)
 8001986:	1842      	adds	r2, r0, r1
 8001988:	429a      	cmp	r2, r3
 800198a:	f4ff aff6 	bcc.w	800197a <CopyDataInit>
 800198e:	4a0a      	ldr	r2, [pc, #40]	; (80019b8 <LoopFillZerobss+0x1e>)
 8001990:	f000 b803 	b.w	800199a <LoopFillZerobss>

08001994 <FillZerobss>:
 8001994:	2300      	movs	r3, #0
 8001996:	f842 3b04 	str.w	r3, [r2], #4

0800199a <LoopFillZerobss>:
 800199a:	4b08      	ldr	r3, [pc, #32]	; (80019bc <LoopFillZerobss+0x22>)
 800199c:	429a      	cmp	r2, r3
 800199e:	f4ff aff9 	bcc.w	8001994 <FillZerobss>
 80019a2:	f7fe fcab 	bl	80002fc <SystemInit>
 80019a6:	f7ff ffc7 	bl	8001938 <main>
 80019aa:	4770      	bx	lr
 80019ac:	08001a08 	.word	0x08001a08
 80019b0:	20000000 	.word	0x20000000
 80019b4:	200000a4 	.word	0x200000a4
 80019b8:	200000a8 	.word	0x200000a8
 80019bc:	200000c8 	.word	0x200000c8

080019c0 <ADC1_IRQHandler>:
 80019c0:	f7ff bffe 	b.w	80019c0 <ADC1_IRQHandler>
 80019c4:	00000043 	.word	0x00000043

080019c8 <_global_impure_ptr>:
 80019c8:	2000003c 20737953 74696e49 216b4f20     <.. Sys Init Ok!
 80019d8:	00000000                                ....

080019dc <_init>:
 80019dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019de:	bf00      	nop
 80019e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019e2:	bc08      	pop	{r3}
 80019e4:	469e      	mov	lr, r3
 80019e6:	4770      	bx	lr

080019e8 <_fini>:
 80019e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ea:	bf00      	nop
 80019ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019ee:	bc08      	pop	{r3}
 80019f0:	469e      	mov	lr, r3
 80019f2:	4770      	bx	lr

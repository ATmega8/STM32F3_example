
main.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <NMI_Handler>:
  * @brief  This function handles NMI exception.
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
 8000188:	4770      	bx	lr
 800018a:	bf00      	nop

0800018c <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 800018c:	e7fe      	b.n	800018c <HardFault_Handler>
 800018e:	bf00      	nop

08000190 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8000190:	e7fe      	b.n	8000190 <MemManage_Handler>
 8000192:	bf00      	nop

08000194 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8000194:	e7fe      	b.n	8000194 <BusFault_Handler>
 8000196:	bf00      	nop

08000198 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8000198:	e7fe      	b.n	8000198 <UsageFault_Handler>
 800019a:	bf00      	nop

0800019c <SVC_Handler>:
  * @brief  This function handles SVCall exception.
  * @param  None
  * @retval None
  */
void SVC_Handler(void)
{
 800019c:	4770      	bx	lr
 800019e:	bf00      	nop

080001a0 <DebugMon_Handler>:
  * @brief  This function handles Debug Monitor exception.
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
 80001a0:	4770      	bx	lr
 80001a2:	bf00      	nop

080001a4 <PendSV_Handler>:
  * @brief  This function handles PendSVC exception.
  * @param  None
  * @retval None
  */
void PendSV_Handler(void)
{
 80001a4:	4770      	bx	lr
 80001a6:	bf00      	nop

080001a8 <SysTick_Handler>:
  * @brief  This function handles SysTick Handler.
  * @param  None
  * @retval None
  */
void SysTick_Handler(void)
{
 80001a8:	4770      	bx	lr
 80001aa:	bf00      	nop

080001ac <TIM3_IRQHandler>:
/*void PPP_IRQHandler(void)
{
}*/
void TIM3_IRQHandler(void)
{
	if(TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
 80001ac:	f44f 6080 	mov.w	r0, #1024	; 0x400
  */
/*void PPP_IRQHandler(void)
{
}*/
void TIM3_IRQHandler(void)
{
 80001b0:	b508      	push	{r3, lr}
	if(TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
 80001b2:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80001b6:	2101      	movs	r1, #1
 80001b8:	f001 fd80 	bl	8001cbc <TIM_GetITStatus>
 80001bc:	b900      	cbnz	r0, 80001c0 <TIM3_IRQHandler+0x14>
 80001be:	bd08      	pop	{r3, pc}
		{

			ADC_StartConversion(ADC1);
 80001c0:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 80001c4:	f000 fcb2 	bl	8000b2c <ADC_StartConversion>
			while(ADC_GetFlagStatus(ADC1, ADC_FLAG_EOC) == RESET);
 80001c8:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 80001cc:	2104      	movs	r1, #4
 80001ce:	f000 fde7 	bl	8000da0 <ADC_GetFlagStatus>
 80001d2:	2800      	cmp	r0, #0
 80001d4:	d0f8      	beq.n	80001c8 <TIM3_IRQHandler+0x1c>

			/*USART_SendData(USART2, ADC_GetConversionValue(ADC1));
			while(USART_GetFlagStatus(USART2, 
			      USART_FLAG_TC) == RESET);*/

			DAC_SetChannel1Data(DAC_Align_12b_R, ADC_GetConversionValue(ADC1));
 80001d6:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 80001da:	f000 fcc9 	bl	8000b70 <ADC_GetConversionValue>
 80001de:	4601      	mov	r1, r0
 80001e0:	2000      	movs	r0, #0
 80001e2:	f002 fe1f 	bl	8002e24 <DAC_SetChannel1Data>

			TIM_ClearITPendingBit(TIM3, TIM_IT_Update);
 80001e6:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80001ea:	f2c4 0000 	movt	r0, #16384	; 0x4000
 80001ee:	2101      	movs	r1, #1
		}
}
 80001f0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
			while(USART_GetFlagStatus(USART2, 
			      USART_FLAG_TC) == RESET);*/

			DAC_SetChannel1Data(DAC_Align_12b_R, ADC_GetConversionValue(ADC1));

			TIM_ClearITPendingBit(TIM3, TIM_IT_Update);
 80001f4:	f001 bd6e 	b.w	8001cd4 <TIM_ClearITPendingBit>

080001f8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001f8:	f44f 426d 	mov.w	r2, #60672	; 0xed00
 80001fc:	f2ce 0200 	movt	r2, #57344	; 0xe000
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000200:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000204:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000208:	f2c4 0302 	movt	r3, #16386	; 0x4002
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800020c:	f441 0070 	orr.w	r0, r1, #15728640	; 0xf00000
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000210:	b410      	push	{r4}
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000212:	f8c2 0088 	str.w	r0, [r2, #136]	; 0x88
  #endif

  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= (uint32_t)0x00000001;
 8000216:	681c      	ldr	r4, [r3, #0]
 8000218:	f044 0201 	orr.w	r2, r4, #1
 800021c:	601a      	str	r2, [r3, #0]

  /* Reset CFGR register */
  RCC->CFGR &= 0xF87FC00C;
 800021e:	6859      	ldr	r1, [r3, #4]
 8000220:	f24c 000c 	movw	r0, #49164	; 0xc00c
 8000224:	f6cf 007f 	movt	r0, #63615	; 0xf87f
 8000228:	4008      	ands	r0, r1
 800022a:	6058      	str	r0, [r3, #4]

  /* Reset HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 800022c:	681c      	ldr	r4, [r3, #0]
 800022e:	f024 7284 	bic.w	r2, r4, #17301504	; 0x1080000
 8000232:	f422 3180 	bic.w	r1, r2, #65536	; 0x10000
 8000236:	6019      	str	r1, [r3, #0]

  /* Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000238:	6818      	ldr	r0, [r3, #0]
 800023a:	f420 2480 	bic.w	r4, r0, #262144	; 0x40000
 800023e:	601c      	str	r4, [r3, #0]

  /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8000240:	685a      	ldr	r2, [r3, #4]
 8000242:	f422 01fe 	bic.w	r1, r2, #8323072	; 0x7f0000
 8000246:	6059      	str	r1, [r3, #4]

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;
 8000248:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
 800024a:	f020 040f 	bic.w	r4, r0, #15
 800024e:	62dc      	str	r4, [r3, #44]	; 0x2c

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 8000250:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8000252:	f64f 42cc 	movw	r2, #64716	; 0xfccc
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 8000256:	f44f 5000 	mov.w	r0, #8192	; 0x2000

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 800025a:	f6cf 7200 	movt	r2, #65280	; 0xff00
  *         SystemFrequency variable.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800025e:	b083      	sub	sp, #12
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 8000260:	f2c4 0002 	movt	r0, #16386	; 0x4002

  /* Reset PREDIV1[3:0] bits */
  RCC->CFGR2 &= (uint32_t)0xFFFFFFF0;

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
 8000264:	4022      	ands	r2, r4
 8000266:	631a      	str	r2, [r3, #48]	; 0x30
  
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 8000268:	2100      	movs	r1, #0
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 800026a:	2212      	movs	r2, #18

  /* Reset USARTSW[1:0], I2CSW and TIMs bits */
  RCC->CFGR3 &= (uint32_t)0xFF00FCCC;
  
  /* Disable all interrupts */
  RCC->CIR = 0x00000000;
 800026c:	6099      	str	r1, [r3, #8]
  * @param  None
  * @retval None
  */
static void SetSysClock(void)
{
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 800026e:	9100      	str	r1, [sp, #0]
 8000270:	9101      	str	r1, [sp, #4]
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
#if defined (PLL_SOURCE_HSI)
  /* At this stage the HSI is already enabled */

  /* Enable Prefetch Buffer and set Flash Latency */
  FLASH->ACR = FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY_1;
 8000272:	6002      	str	r2, [r0, #0]
 
  /* HCLK = SYSCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000274:	6858      	ldr	r0, [r3, #4]
 8000276:	6058      	str	r0, [r3, #4]
      
  /* PCLK = HCLK */
  RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2 | (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8000278:	6859      	ldr	r1, [r3, #4]
 800027a:	f441 6280 	orr.w	r2, r1, #1024	; 0x400
 800027e:	605a      	str	r2, [r3, #4]

  /* PLL configuration */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLMULL));
 8000280:	6858      	ldr	r0, [r3, #4]
 8000282:	f420 117c 	bic.w	r1, r0, #4128768	; 0x3f0000
 8000286:	6059      	str	r1, [r3, #4]
  RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSI_Div2 | RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLMULL16);
 8000288:	685a      	ldr	r2, [r3, #4]
 800028a:	f442 1060 	orr.w	r0, r2, #3670016	; 0x380000
 800028e:	6058      	str	r0, [r3, #4]
            
  /* Enable PLL */
  RCC->CR |= RCC_CR_PLLON;
 8000290:	6819      	ldr	r1, [r3, #0]
 8000292:	f041 7280 	orr.w	r2, r1, #16777216	; 0x1000000
 8000296:	601a      	str	r2, [r3, #0]

  /* Wait till PLL is ready */
  while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000298:	6818      	ldr	r0, [r3, #0]
 800029a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800029e:	0181      	lsls	r1, r0, #6
 80002a0:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80002a4:	d5f8      	bpl.n	8000298 <SystemInit+0xa0>
  {
  }

  /* Select PLL as system clock source */
  RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 80002a6:	6853      	ldr	r3, [r2, #4]
 80002a8:	f023 0103 	bic.w	r1, r3, #3
 80002ac:	6051      	str	r1, [r2, #4]
  RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 80002ae:	6850      	ldr	r0, [r2, #4]
 80002b0:	f040 0302 	orr.w	r3, r0, #2
 80002b4:	6053      	str	r3, [r2, #4]

  /* Wait till PLL is used as system clock source */
  while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)RCC_CFGR_SWS_PLL)
 80002b6:	6851      	ldr	r1, [r2, #4]
 80002b8:	f001 000c 	and.w	r0, r1, #12
 80002bc:	2808      	cmp	r0, #8
 80002be:	d1fa      	bne.n	80002b6 <SystemInit+0xbe>
  SetSysClock();
  
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH. */
 80002c0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 80002c4:	f2ce 0300 	movt	r3, #57344	; 0xe000
 80002c8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80002cc:	609a      	str	r2, [r3, #8]
#endif  
}
 80002ce:	b003      	add	sp, #12
 80002d0:	bc10      	pop	{r4}
 80002d2:	4770      	bx	lr

080002d4 <SystemCoreClockUpdate>:
void SystemCoreClockUpdate (void)
{
  uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0;

  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 80002d4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80002d8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80002dc:	685a      	ldr	r2, [r3, #4]
 80002de:	f002 000c 	and.w	r0, r2, #12
  
  switch (tmp)
 80002e2:	2808      	cmp	r0, #8
 80002e4:	d010      	beq.n	8000308 <SystemCoreClockUpdate+0x34>
 80002e6:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 80002ea:	f2c0 017a 	movt	r1, #122	; 0x7a
      SystemCoreClock = HSI_VALUE;
      break;
  }
  /* Compute HCLK clock frequency ----------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 80002ee:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80002f2:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80002f6:	4812      	ldr	r0, [pc, #72]	; (8000340 <SystemCoreClockUpdate+0x6c>)
 80002f8:	6853      	ldr	r3, [r2, #4]
 80002fa:	f3c3 1203 	ubfx	r2, r3, #4, #4
 80002fe:	5c83      	ldrb	r3, [r0, r2]
  /* HCLK clock frequency */
  SystemCoreClock >>= tmp;  
 8000300:	fa21 f103 	lsr.w	r1, r1, r3
 8000304:	6101      	str	r1, [r0, #16]
 8000306:	4770      	bx	lr
    case 0x04:  /* HSE used as system clock */
      SystemCoreClock = HSE_VALUE;
      break;
    case 0x08:  /* PLL used as system clock */
      /* Get PLL clock source and multiplication factor ----------------------*/
      pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 8000308:	685a      	ldr	r2, [r3, #4]
      pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 800030a:	6858      	ldr	r0, [r3, #4]
      pllmull = ( pllmull >> 18) + 2;
 800030c:	f3c2 4183 	ubfx	r1, r2, #18, #4
 8000310:	1c8a      	adds	r2, r1, #2
      
      if (pllsource == 0x00)
 8000312:	03c0      	lsls	r0, r0, #15
 8000314:	d406      	bmi.n	8000324 <SystemCoreClockUpdate+0x50>
      {
        /* HSI oscillator clock divided by 2 selected as PLL clock entry */
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
 8000316:	f44f 6310 	mov.w	r3, #2304	; 0x900
 800031a:	f2c0 033d 	movt	r3, #61	; 0x3d
 800031e:	fb03 f102 	mul.w	r1, r3, r2
 8000322:	e7e4      	b.n	80002ee <SystemCoreClockUpdate+0x1a>
      }
      else
      {
        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 8000324:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
        /* HSE oscillator clock selected as PREDIV1 clock entry */
        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 8000326:	f44f 5390 	mov.w	r3, #4608	; 0x1200
        /* HSI oscillator clock divided by 2 selected as PLL clock entry */
        SystemCoreClock = (HSI_VALUE >> 1) * pllmull;
      }
      else
      {
        prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 800032a:	f000 010f 	and.w	r1, r0, #15
 800032e:	1c48      	adds	r0, r1, #1
        /* HSE oscillator clock selected as PREDIV1 clock entry */
        SystemCoreClock = (HSE_VALUE / prediv1factor) * pllmull; 
 8000330:	f2c0 037a 	movt	r3, #122	; 0x7a
 8000334:	fbb3 f1f0 	udiv	r1, r3, r0
 8000338:	fb02 f101 	mul.w	r1, r2, r1
 800033c:	e7d7      	b.n	80002ee <SystemCoreClockUpdate+0x1a>
 800033e:	bf00      	nop
 8000340:	20000000 	.word	0x20000000

08000344 <Usart2_Config>:
#include "main.h"

Usart2_Config(void)
{
 8000344:	b570      	push	{r4, r5, r6, lr}
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 
 8000346:	2101      	movs	r1, #1
#include "main.h"

Usart2_Config(void)
{
 8000348:	b088      	sub	sp, #32
	GPIO_InitTypeDef GPIO_InitStructure;
	USART_InitTypeDef USART_InitStructure;

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 
 800034a:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 800034e:	f002 fc5d 	bl	8002c0c <RCC_APB1PeriphClockCmd>
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);
 8000352:	2101      	movs	r1, #1
 8000354:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8000358:	f002 fc3c 	bl	8002bd4 <RCC_AHBPeriphClockCmd>

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
 800035c:	2102      	movs	r1, #2
 800035e:	2207      	movs	r2, #7
 8000360:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000364:	f002 f940 	bl	80025e8 <GPIO_PinAFConfig>
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

	USART_Init(USART2, &USART_InitStructure);
 8000368:	f44f 4588 	mov.w	r5, #17408	; 0x4400

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE); 
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);
 800036c:	2207      	movs	r2, #7
 800036e:	2103      	movs	r1, #3
 8000370:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000374:	f002 f938 	bl	80025e8 <GPIO_PinAFConfig>

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
 8000378:	2400      	movs	r4, #0

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
 800037a:	2302      	movs	r3, #2
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
 800037c:	2203      	movs	r2, #3
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
 800037e:	260c      	movs	r6, #12
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000380:	4669      	mov	r1, sp
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

	USART_Init(USART2, &USART_InitStructure);
 8000382:	f2c4 0500 	movt	r5, #16384	; 0x4000
	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000386:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
 800038a:	f88d 3004 	strb.w	r3, [sp, #4]
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
 800038e:	f88d 2005 	strb.w	r2, [sp, #5]
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);

  	GPIO_PinAFConfig(GPIOA, GPIO_PinSource2, GPIO_AF_7);    
    GPIO_PinAFConfig(GPIOA, GPIO_PinSource3, GPIO_AF_7);

	GPIO_InitStructure.GPIO_Pin  	= GPIO_Pin_2 | GPIO_Pin_3;
 8000392:	9600      	str	r6, [sp, #0]
	GPIO_InitStructure.GPIO_Mode 	= GPIO_Mode_AF;
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
 8000394:	f88d 4006 	strb.w	r4, [sp, #6]
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
 8000398:	f88d 4007 	strb.w	r4, [sp, #7]
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 800039c:	f002 f88e 	bl	80024bc <GPIO_Init>
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;

	USART_Init(USART2, &USART_InitStructure);
 80003a0:	a902      	add	r1, sp, #8
 80003a2:	4628      	mov	r0, r5
	GPIO_InitStructure.GPIO_OType   = GPIO_OType_PP;
	GPIO_InitStructure.GPIO_PuPd    = GPIO_PuPd_NOPULL;
	GPIO_InitStructure.GPIO_Speed 	= GPIO_Speed_50MHz;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	USART_InitStructure.USART_BaudRate   = 115200;
 80003a4:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80003a8:	9302      	str	r3, [sp, #8]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 80003aa:	9403      	str	r4, [sp, #12]
	USART_InitStructure.USART_StopBits   = USART_StopBits_1;
 80003ac:	9404      	str	r4, [sp, #16]
	USART_InitStructure.USART_Parity	 = USART_Parity_No;
 80003ae:	9405      	str	r4, [sp, #20]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80003b0:	9407      	str	r4, [sp, #28]
	USART_InitStructure.USART_Mode       = USART_Mode_Rx | USART_Mode_Tx;
 80003b2:	9606      	str	r6, [sp, #24]

	USART_Init(USART2, &USART_InitStructure);
 80003b4:	f001 fdde 	bl	8001f74 <USART_Init>
	USART_Cmd(USART2, ENABLE);
 80003b8:	4628      	mov	r0, r5
 80003ba:	2101      	movs	r1, #1
 80003bc:	f001 fe60 	bl	8002080 <USART_Cmd>
}
 80003c0:	b008      	add	sp, #32
 80003c2:	bd70      	pop	{r4, r5, r6, pc}

080003c4 <USART_printf>:

	return string;
}

USART_printf(USART_TypeDef* USARTx, uint8_t *Data, ...)
{
 80003c4:	b40e      	push	{r1, r2, r3}
 80003c6:	b5f0      	push	{r4, r5, r6, r7, lr}
 80003c8:	b086      	sub	sp, #24
 80003ca:	ab0b      	add	r3, sp, #44	; 0x2c
 80003cc:	4604      	mov	r4, r0
 80003ce:	f853 5b04 	ldr.w	r5, [r3], #4
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80003d2:	7829      	ldrb	r1, [r5, #0]
{
	const char *s;
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);
 80003d4:	9301      	str	r3, [sp, #4]
	int 	flag = 0;
	char	*ptr = string;  

	if(radix != 0)
	{
		*ptr = 0;
 80003d6:	2700      	movs	r7, #0
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80003d8:	b191      	cbz	r1, 8000400 <USART_printf+0x3c>
	{
		if( *Data == 0x5c)
 80003da:	295c      	cmp	r1, #92	; 0x5c
 80003dc:	d02f      	beq.n	800043e <USART_printf+0x7a>
				default:
					Data++;
					break;
			}
		}
		else if( *Data == '%')
 80003de:	2925      	cmp	r1, #37	; 0x25
 80003e0:	d128      	bne.n	8000434 <USART_printf+0x70>
		{
			switch( *++Data)
 80003e2:	7868      	ldrb	r0, [r5, #1]
 80003e4:	2864      	cmp	r0, #100	; 0x64
 80003e6:	d035      	beq.n	8000454 <USART_printf+0x90>
 80003e8:	2873      	cmp	r0, #115	; 0x73
 80003ea:	d00e      	beq.n	800040a <USART_printf+0x46>
					for(s = buf; *s; s++)
					{
						USART_SendData(USARTx, *s);
						while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
					}
					Data++;
 80003ec:	3502      	adds	r5, #2
					break;
			}
		}

		else USART_SendData(USARTx, *Data++);
		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
 80003ee:	4620      	mov	r0, r4
 80003f0:	2140      	movs	r1, #64	; 0x40
 80003f2:	f001 ffc7 	bl	8002384 <USART_GetFlagStatus>
 80003f6:	2800      	cmp	r0, #0
 80003f8:	d0f9      	beq.n	80003ee <USART_printf+0x2a>
	int d;
	char buf[16];
	va_list ap;
	va_start(ap, Data);

	while(*Data != 0)
 80003fa:	7829      	ldrb	r1, [r5, #0]
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d1ec      	bne.n	80003da <USART_printf+0x16>
		}

		else USART_SendData(USARTx, *Data++);
		while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
	}
}
 8000400:	b006      	add	sp, #24
 8000402:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8000406:	b003      	add	sp, #12
 8000408:	4770      	bx	lr
		else if( *Data == '%')
		{
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
 800040a:	9a01      	ldr	r2, [sp, #4]
 800040c:	6816      	ldr	r6, [r2, #0]
				
					for(; *s; s++)
 800040e:	7831      	ldrb	r1, [r6, #0]
		else if( *Data == '%')
		{
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
 8000410:	1d13      	adds	r3, r2, #4
 8000412:	9301      	str	r3, [sp, #4]
				
					for(; *s; s++)
 8000414:	2900      	cmp	r1, #0
 8000416:	d0e9      	beq.n	80003ec <USART_printf+0x28>
					{
						USART_SendData(USARTx, *s);
 8000418:	4620      	mov	r0, r4
 800041a:	f001 fec1 	bl	80021a0 <USART_SendData>
						while(USART_GetFlagStatus(USARTx, USART_FLAG_TC) == RESET);
 800041e:	4620      	mov	r0, r4
 8000420:	2140      	movs	r1, #64	; 0x40
 8000422:	f001 ffaf 	bl	8002384 <USART_GetFlagStatus>
 8000426:	2800      	cmp	r0, #0
 8000428:	d0f9      	beq.n	800041e <USART_printf+0x5a>
			switch( *++Data)
			{
				case 's':
					s = va_arg(ap, const char *);
				
					for(; *s; s++)
 800042a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800042e:	2900      	cmp	r1, #0
 8000430:	d1f2      	bne.n	8000418 <USART_printf+0x54>
 8000432:	e7db      	b.n	80003ec <USART_printf+0x28>
					Data++;
					break;
			}
		}

		else USART_SendData(USARTx, *Data++);
 8000434:	4620      	mov	r0, r4
 8000436:	3501      	adds	r5, #1
 8000438:	f001 feb2 	bl	80021a0 <USART_SendData>
 800043c:	e7d7      	b.n	80003ee <USART_printf+0x2a>

	while(*Data != 0)
	{
		if( *Data == 0x5c)
		{
			switch( *++Data)
 800043e:	786a      	ldrb	r2, [r5, #1]
 8000440:	2a6e      	cmp	r2, #110	; 0x6e
 8000442:	d00d      	beq.n	8000460 <USART_printf+0x9c>
 8000444:	2a72      	cmp	r2, #114	; 0x72
 8000446:	d1d1      	bne.n	80003ec <USART_printf+0x28>
			{
				case 'r':
					USART_SendData(USARTx, 0x0d);
 8000448:	4620      	mov	r0, r4
 800044a:	210d      	movs	r1, #13
 800044c:	f001 fea8 	bl	80021a0 <USART_SendData>
					Data++;
 8000450:	3502      	adds	r5, #2
					break;
 8000452:	e7cc      	b.n	80003ee <USART_printf+0x2a>
					}
					Data++;
					break;

				case 'd':
					d = va_arg(ap, int);
 8000454:	9901      	ldr	r1, [sp, #4]
	int 	flag = 0;
	char	*ptr = string;  

	if(radix != 0)
	{
		*ptr = 0;
 8000456:	f88d 7008 	strb.w	r7, [sp, #8]
					}
					Data++;
					break;

				case 'd':
					d = va_arg(ap, int);
 800045a:	1d08      	adds	r0, r1, #4
 800045c:	9001      	str	r0, [sp, #4]
 800045e:	e7c5      	b.n	80003ec <USART_printf+0x28>
					USART_SendData(USARTx, 0x0d);
					Data++;
					break;

				case 'n':
					USART_SendData(USARTx, 0x0a);
 8000460:	4620      	mov	r0, r4
 8000462:	210a      	movs	r1, #10
 8000464:	f001 fe9c 	bl	80021a0 <USART_SendData>
					Data++;
 8000468:	3502      	adds	r5, #2
					break;
 800046a:	e7c0      	b.n	80003ee <USART_printf+0x2a>

0800046c <delay_us>:
#include"main.h"
void delay_us(uint32_t Nus)
{ 
	SysTick->LOAD=Nus;       //时间加载     
 800046c:	f24e 0110 	movw	r1, #57360	; 0xe010
 8000470:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8000474:	6048      	str	r0, [r1, #4]
	SysTick->CTRL|=0x01;            //开始倒数   
 8000476:	680b      	ldr	r3, [r1, #0]
 8000478:	f043 0001 	orr.w	r0, r3, #1
 800047c:	6008      	str	r0, [r1, #0]
	while(!(SysTick->CTRL&(1<<16)));//等待时间到达
 800047e:	680a      	ldr	r2, [r1, #0]
 8000480:	f24e 0310 	movw	r3, #57360	; 0xe010
 8000484:	03d2      	lsls	r2, r2, #15
 8000486:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800048a:	d5f8      	bpl.n	800047e <delay_us+0x12>
		SysTick->CTRL=0X00000000;       //关闭计数器
 800048c:	2100      	movs	r1, #0
 800048e:	6019      	str	r1, [r3, #0]
	SysTick->VAL=0X00000000;        //清空计数器    
 8000490:	6099      	str	r1, [r3, #8]
 8000492:	4770      	bx	lr

08000494 <adc_gpio_config>:
}

void adc_gpio_config(void)
{
 8000494:	b500      	push	{lr}
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div1);
 8000496:	f44f 7080 	mov.w	r0, #256	; 0x100
		SysTick->CTRL=0X00000000;       //关闭计数器
	SysTick->VAL=0X00000000;        //清空计数器    
}

void adc_gpio_config(void)
{
 800049a:	b083      	sub	sp, #12
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div1);
 800049c:	f002 fb00 	bl	8002aa0 <RCC_ADCCLKConfig>
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
 80004a0:	2101      	movs	r1, #1
 80004a2:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 80004a6:	f002 fb95 	bl	8002bd4 <RCC_AHBPeriphClockCmd>
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);
 80004aa:	2101      	movs	r1, #1
 80004ac:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 80004b0:	f002 fb90 	bl	8002bd4 <RCC_AHBPeriphClockCmd>

	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_1;
 80004b4:	2302      	movs	r3, #2
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 80004b6:	f44f 6000 	mov.w	r0, #2048	; 0x800

	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div1);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);

	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_1;
 80004ba:	9300      	str	r3, [sp, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 80004bc:	2203      	movs	r2, #3
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80004be:	2300      	movs	r3, #0
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 80004c0:	f6c4 0000 	movt	r0, #18432	; 0x4800
 80004c4:	4669      	mov	r1, sp
	RCC_ADCCLKConfig(RCC_ADC12PLLCLK_Div1);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOC, ENABLE);
	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_ADC12, ENABLE);

	GPIO_InitStructure.GPIO_Pin  = GPIO_Pin_1;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 80004c6:	f88d 2004 	strb.w	r2, [sp, #4]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80004ca:	f88d 3007 	strb.w	r3, [sp, #7]
	GPIO_Init(GPIOC, &GPIO_InitStructure);
 80004ce:	f001 fff5 	bl	80024bc <GPIO_Init>
}
 80004d2:	b003      	add	sp, #12
 80004d4:	bd00      	pop	{pc}
 80004d6:	bf00      	nop

080004d8 <adc12_mode_config>:

void adc12_mode_config(void)
{
 80004d8:	b530      	push	{r4, r5, lr}
	DMA_InitStructure.DMA_M2M           	 = DMA_M2M_Disable;
	DMA_Init(DMA1_Channel1, &DMA_InitStructure);
	DMA_Cmd(DMA1_Channel1, ENABLE);*/

	//ADC_StructInit(&ADC_InitStructure);
	ADC_VoltageRegulatorCmd(ADC1, ENABLE);
 80004da:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 80004de:	2101      	movs	r1, #1
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOC, &GPIO_InitStructure);
}

void adc12_mode_config(void)
{
 80004e0:	b08f      	sub	sp, #60	; 0x3c
	DMA_InitStructure.DMA_M2M           	 = DMA_M2M_Disable;
	DMA_Init(DMA1_Channel1, &DMA_InitStructure);
	DMA_Cmd(DMA1_Channel1, ENABLE);*/

	//ADC_StructInit(&ADC_InitStructure);
	ADC_VoltageRegulatorCmd(ADC1, ENABLE);
 80004e2:	f000 f9b9 	bl	8000858 <ADC_VoltageRegulatorCmd>
#include"main.h"
void delay_us(uint32_t Nus)
{ 
	SysTick->LOAD=Nus;       //时间加载     
 80004e6:	f24e 0110 	movw	r1, #57360	; 0xe010
 80004ea:	f2ce 0100 	movt	r1, #57344	; 0xe000
 80004ee:	2364      	movs	r3, #100	; 0x64
 80004f0:	604b      	str	r3, [r1, #4]
	SysTick->CTRL|=0x01;            //开始倒数   
 80004f2:	6808      	ldr	r0, [r1, #0]
 80004f4:	f040 0201 	orr.w	r2, r0, #1
 80004f8:	600a      	str	r2, [r1, #0]
	while(!(SysTick->CTRL&(1<<16)));//等待时间到达
 80004fa:	680c      	ldr	r4, [r1, #0]
 80004fc:	f24e 0510 	movw	r5, #57360	; 0xe010
 8000500:	03e0      	lsls	r0, r4, #15
 8000502:	f2ce 0500 	movt	r5, #57344	; 0xe000
 8000506:	d5f8      	bpl.n	80004fa <adc12_mode_config+0x22>
		SysTick->CTRL=0X00000000;       //关闭计数器
 8000508:	2100      	movs	r1, #0
 800050a:	6029      	str	r1, [r5, #0]
	//ADC_StructInit(&ADC_InitStructure);
	ADC_VoltageRegulatorCmd(ADC1, ENABLE);

	delay_us(100);

	ADC_SelectCalibrationMode(ADC1, ADC_CalibrationMode_Single);
 800050c:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
{ 
	SysTick->LOAD=Nus;       //时间加载     
	SysTick->CTRL|=0x01;            //开始倒数   
	while(!(SysTick->CTRL&(1<<16)));//等待时间到达
		SysTick->CTRL=0X00000000;       //关闭计数器
	SysTick->VAL=0X00000000;        //清空计数器    
 8000510:	60a9      	str	r1, [r5, #8]
	//ADC_StructInit(&ADC_InitStructure);
	ADC_VoltageRegulatorCmd(ADC1, ENABLE);

	delay_us(100);

	ADC_SelectCalibrationMode(ADC1, ADC_CalibrationMode_Single);
 8000512:	f000 f98b 	bl	800082c <ADC_SelectCalibrationMode>
	ADC_StartCalibration(ADC1);
 8000516:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 800051a:	f000 f979 	bl	8000810 <ADC_StartCalibration>
	while(ADC_GetCalibrationStatus(ADC1) != RESET);
 800051e:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 8000522:	f000 f98b 	bl	800083c <ADC_GetCalibrationStatus>
 8000526:	4604      	mov	r4, r0
 8000528:	2800      	cmp	r0, #0
 800052a:	d1f8      	bne.n	800051e <adc12_mode_config+0x46>
	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_AsynClkMode;
	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_OneShot;
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);
 800052c:	a901      	add	r1, sp, #4
 800052e:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
	ADC_InitStructure.ADC_NbrOfRegChannel = 1;
 8000532:	2501      	movs	r5, #1

	ADC_SelectCalibrationMode(ADC1, ADC_CalibrationMode_Single);
	ADC_StartCalibration(ADC1);
	while(ADC_GetCalibrationStatus(ADC1) != RESET);

	ADC_CommonInitStructure.ADC_Mode = ADC_Mode_Independent;
 8000534:	9401      	str	r4, [sp, #4]
	ADC_CommonInitStructure.ADC_Clock = ADC_Clock_AsynClkMode;
 8000536:	9402      	str	r4, [sp, #8]
	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 8000538:	9403      	str	r4, [sp, #12]
	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_OneShot;
 800053a:	9404      	str	r4, [sp, #16]
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
 800053c:	f88d 4014 	strb.w	r4, [sp, #20]
	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);
 8000540:	f000 f928 	bl	8000794 <ADC_CommonInit>
	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
	ADC_InitStructure.ADC_NbrOfRegChannel = 1;
	ADC_Init(ADC1, &ADC_InitStructure);
 8000544:	a906      	add	r1, sp, #24
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);

	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 8000546:	f44f 5300 	mov.w	r3, #8192	; 0x2000
	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
	ADC_InitStructure.ADC_NbrOfRegChannel = 1;
	ADC_Init(ADC1, &ADC_InitStructure);
 800054a:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);

	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
 800054e:	9306      	str	r3, [sp, #24]
	ADC_CommonInitStructure.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
	ADC_CommonInitStructure.ADC_DMAMode = ADC_DMAMode_OneShot;
	ADC_CommonInitStructure.ADC_TwoSamplingDelay = 0;
	ADC_CommonInit(ADC1, &ADC_CommonInitStructure);

	ADC_InitStructure.ADC_Resolution = ADC_Resolution_12b;
 8000550:	9407      	str	r4, [sp, #28]
	ADC_InitStructure.ADC_ExternalTrigConvEvent = ADC_ExternalTrigConvEvent_0;
 8000552:	9408      	str	r4, [sp, #32]
	ADC_InitStructure.ADC_ContinuousConvMode = ADC_ContinuousConvMode_Enable;
	ADC_InitStructure.ADC_ExternalTrigEventEdge = ADC_ExternalTrigEventEdge_None;
 8000554:	9409      	str	r4, [sp, #36]	; 0x24
	ADC_InitStructure.ADC_DataAlign = ADC_DataAlign_Right;
 8000556:	940a      	str	r4, [sp, #40]	; 0x28
	ADC_InitStructure.ADC_AutoInjMode = ADC_AutoInjec_Disable;
 8000558:	940c      	str	r4, [sp, #48]	; 0x30
	ADC_InitStructure.ADC_NbrOfRegChannel = 1;
 800055a:	f88d 5034 	strb.w	r5, [sp, #52]	; 0x34
	ADC_Init(ADC1, &ADC_InitStructure);
 800055e:	f000 f8c5 	bl	80006ec <ADC_Init>
	
	ADC_RegularChannelConfig(ADC1, ADC_Channel_7, 1, ADC_SampleTime_7Cycles5);
 8000562:	2107      	movs	r1, #7
 8000564:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 8000568:	462a      	mov	r2, r5
 800056a:	2303      	movs	r3, #3
 800056c:	f000 fa68 	bl	8000a40 <ADC_RegularChannelConfig>

	ADC_Cmd(ADC1, ENABLE);
 8000570:	f04f 40a0 	mov.w	r0, #1342177280	; 0x50000000
 8000574:	4629      	mov	r1, r5
 8000576:	f000 f941 	bl	80007fc <ADC_Cmd>
}
 800057a:	b00f      	add	sp, #60	; 0x3c
 800057c:	bd30      	pop	{r4, r5, pc}
 800057e:	bf00      	nop

08000580 <Delay>:
void Delay(__IO uint32_t nTime)
{ 
 8000580:	b082      	sub	sp, #8
	TimingDelay = nTime;
 8000582:	4a04      	ldr	r2, [pc, #16]	; (8000594 <Delay+0x14>)
	ADC_RegularChannelConfig(ADC1, ADC_Channel_7, 1, ADC_SampleTime_7Cycles5);

	ADC_Cmd(ADC1, ENABLE);
}
void Delay(__IO uint32_t nTime)
{ 
 8000584:	9001      	str	r0, [sp, #4]
	TimingDelay = nTime;
 8000586:	9b01      	ldr	r3, [sp, #4]
 8000588:	6013      	str	r3, [r2, #0]
	while(TimingDelay != 0);
 800058a:	6810      	ldr	r0, [r2, #0]
 800058c:	2800      	cmp	r0, #0
 800058e:	d1fc      	bne.n	800058a <Delay+0xa>
}
 8000590:	b002      	add	sp, #8
 8000592:	4770      	bx	lr
 8000594:	20000040 	.word	0x20000040

08000598 <tim3_config>:
#include "main.h"


void tim3_config(void)
{	
 8000598:	b500      	push	{lr}
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
 800059a:	2002      	movs	r0, #2
#include "main.h"


void tim3_config(void)
{	
 800059c:	b085      	sub	sp, #20
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);
 800059e:	2101      	movs	r1, #1
 80005a0:	f002 fb34 	bl	8002c0c <RCC_APB1PeriphClockCmd>

	TIM_TimeBaseInitTypeDef TIM_InitStructure;
	TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_InitStructure.TIM_Period = 100;
 80005a4:	2264      	movs	r2, #100	; 0x64
	TIM_InitStructure.TIM_Prescaler = 64;
	TIM_InitStructure.TIM_ClockDivision = 0;
	TIM_TimeBaseInit(TIM3, &TIM_InitStructure);
 80005a6:	f44f 6080 	mov.w	r0, #1024	; 0x400
void tim3_config(void)
{	
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);

	TIM_TimeBaseInitTypeDef TIM_InitStructure;
	TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;
 80005aa:	2300      	movs	r3, #0
	TIM_InitStructure.TIM_Period = 100;
 80005ac:	9202      	str	r2, [sp, #8]
	TIM_InitStructure.TIM_Prescaler = 64;
	TIM_InitStructure.TIM_ClockDivision = 0;
	TIM_TimeBaseInit(TIM3, &TIM_InitStructure);
 80005ae:	f2c4 0000 	movt	r0, #16384	; 0x4000
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);

	TIM_TimeBaseInitTypeDef TIM_InitStructure;
	TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;
	TIM_InitStructure.TIM_Period = 100;
	TIM_InitStructure.TIM_Prescaler = 64;
 80005b2:	2240      	movs	r2, #64	; 0x40
	TIM_InitStructure.TIM_ClockDivision = 0;
	TIM_TimeBaseInit(TIM3, &TIM_InitStructure);
 80005b4:	a901      	add	r1, sp, #4
void tim3_config(void)
{	
	RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);

	TIM_TimeBaseInitTypeDef TIM_InitStructure;
	TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;
 80005b6:	f8ad 3006 	strh.w	r3, [sp, #6]
	TIM_InitStructure.TIM_Period = 100;
	TIM_InitStructure.TIM_Prescaler = 64;
 80005ba:	f8ad 2004 	strh.w	r2, [sp, #4]
	TIM_InitStructure.TIM_ClockDivision = 0;
 80005be:	f8ad 300c 	strh.w	r3, [sp, #12]
	TIM_TimeBaseInit(TIM3, &TIM_InitStructure);
 80005c2:	f000 fdfd 	bl	80011c0 <TIM_TimeBaseInit>
}
 80005c6:	b005      	add	sp, #20
 80005c8:	bd00      	pop	{pc}
 80005ca:	bf00      	nop

080005cc <nvic_tim3_config>:

void nvic_tim3_config(void)
{
 80005cc:	b500      	push	{lr}
 80005ce:	b083      	sub	sp, #12
	NVIC_InitTypeDef NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80005d0:	2300      	movs	r3, #0
}

void nvic_tim3_config(void)
{
	NVIC_InitTypeDef NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
 80005d2:	221d      	movs	r2, #29
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80005d4:	2101      	movs	r1, #1
	NVIC_Init(&NVIC_InitStructure);
 80005d6:	a801      	add	r0, sp, #4
}

void nvic_tim3_config(void)
{
	NVIC_InitTypeDef NVIC_InitStructure;
	NVIC_InitStructure.NVIC_IRQChannel = TIM3_IRQn;
 80005d8:	f88d 2004 	strb.w	r2, [sp, #4]
	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80005dc:	f88d 3005 	strb.w	r3, [sp, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80005e0:	f88d 3006 	strb.w	r3, [sp, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80005e4:	f88d 1007 	strb.w	r1, [sp, #7]
	NVIC_Init(&NVIC_InitStructure);
 80005e8:	f000 fc28 	bl	8000e3c <NVIC_Init>
}
 80005ec:	b003      	add	sp, #12
 80005ee:	bd00      	pop	{pc}

080005f0 <dac_config>:

void dac_config(void)
{
 80005f0:	b510      	push	{r4, lr}
	GPIO_InitTypeDef GPIO_InitStructure;
	DAC_InitTypeDef DAC_InitStructure;;

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
 80005f2:	2101      	movs	r1, #1
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
	NVIC_Init(&NVIC_InitStructure);
}

void dac_config(void)
{
 80005f4:	b086      	sub	sp, #24
	GPIO_InitTypeDef GPIO_InitStructure;
	DAC_InitTypeDef DAC_InitStructure;;

	RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE);
 80005f6:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
 80005fa:	f002 fb07 	bl	8002c0c <RCC_APB1PeriphClockCmd>
	 * GPIOA时钟已在usart.c中初始化
	 * RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);*/
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80005fe:	2400      	movs	r4, #0
	
	/*
	 * GPIOA时钟已在usart.c中初始化
	 * RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);*/
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 8000600:	2330      	movs	r3, #48	; 0x30
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 8000602:	2203      	movs	r2, #3
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000604:	4669      	mov	r1, sp
 8000606:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
	
	/*
	 * GPIOA时钟已在usart.c中初始化
	 * RCC_AHBPeriphClockCmd(RCC_AHBPeriph_GPIOA, ENABLE);*/
	
	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;
 800060a:	9300      	str	r3, [sp, #0]
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
 800060c:	f88d 2004 	strb.w	r2, [sp, #4]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
 8000610:	f88d 4007 	strb.w	r4, [sp, #7]
	GPIO_Init(GPIOA, &GPIO_InitStructure);
 8000614:	f001 ff52 	bl	80024bc <GPIO_Init>

	DAC_DeInit(); 
 8000618:	f002 fb90 	bl	8002d3c <DAC_DeInit>
	DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
	DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
	DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits11_0;
	DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
	DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 800061c:	a902      	add	r1, sp, #8
 800061e:	4620      	mov	r0, r4
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	DAC_DeInit(); 
	DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
	DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
 8000620:	2340      	movs	r3, #64	; 0x40
	DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits11_0;
 8000622:	f44f 6230 	mov.w	r2, #2816	; 0xb00
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AN;
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
	GPIO_Init(GPIOA, &GPIO_InitStructure);

	DAC_DeInit(); 
	DAC_InitStructure.DAC_Trigger = DAC_Trigger_None;
 8000626:	9402      	str	r4, [sp, #8]
	DAC_InitStructure.DAC_WaveGeneration = DAC_WaveGeneration_Noise;
 8000628:	9303      	str	r3, [sp, #12]
	DAC_InitStructure.DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bits11_0;
 800062a:	9204      	str	r2, [sp, #16]
	DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 800062c:	9405      	str	r4, [sp, #20]
	DAC_Init(DAC_Channel_1, &DAC_InitStructure);
 800062e:	f002 fb93 	bl	8002d58 <DAC_Init>
	DAC_Cmd(DAC_Channel_1, ENABLE);
 8000632:	4620      	mov	r0, r4
 8000634:	2101      	movs	r1, #1
 8000636:	f002 fbaf 	bl	8002d98 <DAC_Cmd>
}
 800063a:	b006      	add	sp, #24
 800063c:	bd10      	pop	{r4, pc}
 800063e:	bf00      	nop

08000640 <pga_config>:

void pga_config(void)
{
 8000640:	b510      	push	{r4, lr}
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 8000642:	2001      	movs	r0, #1
	DAC_Init(DAC_Channel_1, &DAC_InitStructure);
	DAC_Cmd(DAC_Channel_1, ENABLE);
}

void pga_config(void)
{
 8000644:	b082      	sub	sp, #8
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);

	OPAMP_InitTypeDef OPAMP_InitStructure;
	OPAMP_InitStructure.OPAMP_InvertingInput = OPAMP_InvertingInput_PGA;
	OPAMP_InitStructure.OPAMP_NonInvertingInput = OPAMP_NonInvertingInput_IO1;
 8000646:	2400      	movs	r4, #0
	DAC_Cmd(DAC_Channel_1, ENABLE);
}

void pga_config(void)
{
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 8000648:	4601      	mov	r1, r0
 800064a:	f002 fad1 	bl	8002bf0 <RCC_APB2PeriphClockCmd>

	OPAMP_InitTypeDef OPAMP_InitStructure;
	OPAMP_InitStructure.OPAMP_InvertingInput = OPAMP_InvertingInput_PGA;
 800064e:	2340      	movs	r3, #64	; 0x40
	OPAMP_InitStructure.OPAMP_NonInvertingInput = OPAMP_NonInvertingInput_IO1;
	OPAMP_Init(OPAMP_Selection_OPAMP1, &OPAMP_InitStructure);
 8000650:	4669      	mov	r1, sp
 8000652:	4620      	mov	r0, r4
{
	RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);

	OPAMP_InitTypeDef OPAMP_InitStructure;
	OPAMP_InitStructure.OPAMP_InvertingInput = OPAMP_InvertingInput_PGA;
	OPAMP_InitStructure.OPAMP_NonInvertingInput = OPAMP_NonInvertingInput_IO1;
 8000654:	e88d 0018 	stmia.w	sp, {r3, r4}
	OPAMP_Init(OPAMP_Selection_OPAMP1, &OPAMP_InitStructure);
 8000658:	f000 fc5c 	bl	8000f14 <OPAMP_Init>

	OPAMP_PGAConfig(OPAMP_Selection_OPAMP1, OPAMP_OPAMP_PGAGain_16, OPAMP_PGAConnect_No);
 800065c:	4620      	mov	r0, r4
 800065e:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 8000662:	4622      	mov	r2, r4
 8000664:	f000 fc68 	bl	8000f38 <OPAMP_PGAConfig>
	OPAMP_Cmd(OPAMP_Selection_OPAMP1, ENABLE);
 8000668:	4620      	mov	r0, r4
 800066a:	2101      	movs	r1, #1
 800066c:	f000 fcb6 	bl	8000fdc <OPAMP_Cmd>
}
 8000670:	b002      	add	sp, #8
 8000672:	bd10      	pop	{r4, pc}
 8000674:	08002fd0 	.word	0x08002fd0
 8000678:	20000000 	.word	0x20000000
 800067c:	20000040 	.word	0x20000040
 8000680:	20000040 	.word	0x20000040
 8000684:	20000048 	.word	0x20000048

08000688 <ADC_DeInit>:
 8000688:	b510      	push	{r4, lr}
 800068a:	f44f 7480 	mov.w	r4, #256	; 0x100
 800068e:	f2c5 0400 	movt	r4, #20480	; 0x5000
 8000692:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000696:	bf18      	it	ne
 8000698:	42a0      	cmpne	r0, r4
 800069a:	bf14      	ite	ne
 800069c:	2400      	movne	r4, #0
 800069e:	2401      	moveq	r4, #1
 80006a0:	d018      	beq.n	80006d4 <ADC_DeInit+0x4c>
 80006a2:	f44f 62a0 	mov.w	r2, #1280	; 0x500
 80006a6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80006aa:	f2c5 0200 	movt	r2, #20480	; 0x5000
 80006ae:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80006b2:	4298      	cmp	r0, r3
 80006b4:	bf18      	it	ne
 80006b6:	4290      	cmpne	r0, r2
 80006b8:	d000      	beq.n	80006bc <ADC_DeInit+0x34>
 80006ba:	bd10      	pop	{r4, pc}
 80006bc:	2101      	movs	r1, #1
 80006be:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
 80006c2:	f002 fab1 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 80006c6:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
 80006ca:	4621      	mov	r1, r4
 80006cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006d0:	f002 baaa 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 80006d4:	2101      	movs	r1, #1
 80006d6:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 80006da:	f002 faa5 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 80006de:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
 80006e2:	2100      	movs	r1, #0
 80006e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006e8:	f002 ba9e 	b.w	8002c28 <RCC_AHBPeriphResetCmd>

080006ec <ADC_Init>:
 80006ec:	f101 0208 	add.w	r2, r1, #8
 80006f0:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 80006f4:	ca8c      	ldmia	r2, {r2, r3, r7}
 80006f6:	f8d1 8004 	ldr.w	r8, [r1, #4]
 80006fa:	f8d1 c000 	ldr.w	ip, [r1]
 80006fe:	694e      	ldr	r6, [r1, #20]
 8000700:	68c5      	ldr	r5, [r0, #12]
 8000702:	698c      	ldr	r4, [r1, #24]
 8000704:	ea48 0c0c 	orr.w	ip, r8, ip
 8000708:	ea4c 0202 	orr.w	r2, ip, r2
 800070c:	431a      	orrs	r2, r3
 800070e:	433a      	orrs	r2, r7
 8000710:	f24c 0307 	movw	r3, #49159	; 0xc007
 8000714:	f6cf 53ff 	movt	r3, #65023	; 0xfdff
 8000718:	4332      	orrs	r2, r6
 800071a:	4322      	orrs	r2, r4
 800071c:	402b      	ands	r3, r5
 800071e:	4313      	orrs	r3, r2
 8000720:	60c3      	str	r3, [r0, #12]
 8000722:	6b02      	ldr	r2, [r0, #48]	; 0x30
 8000724:	7f0b      	ldrb	r3, [r1, #28]
 8000726:	f022 020f 	bic.w	r2, r2, #15
 800072a:	3b01      	subs	r3, #1
 800072c:	4313      	orrs	r3, r2
 800072e:	6303      	str	r3, [r0, #48]	; 0x30
 8000730:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 8000734:	4770      	bx	lr
 8000736:	bf00      	nop

08000738 <ADC_StructInit>:
 8000738:	2300      	movs	r3, #0
 800073a:	6003      	str	r3, [r0, #0]
 800073c:	6043      	str	r3, [r0, #4]
 800073e:	6083      	str	r3, [r0, #8]
 8000740:	60c3      	str	r3, [r0, #12]
 8000742:	6103      	str	r3, [r0, #16]
 8000744:	6143      	str	r3, [r0, #20]
 8000746:	6183      	str	r3, [r0, #24]
 8000748:	2301      	movs	r3, #1
 800074a:	7703      	strb	r3, [r0, #28]
 800074c:	4770      	bx	lr
 800074e:	bf00      	nop

08000750 <ADC_InjectedInit>:
 8000750:	b4f0      	push	{r4, r5, r6, r7}
 8000752:	e891 1008 	ldmia.w	r1, {r3, ip}
 8000756:	68cf      	ldr	r7, [r1, #12]
 8000758:	690e      	ldr	r6, [r1, #16]
 800075a:	694d      	ldr	r5, [r1, #20]
 800075c:	698c      	ldr	r4, [r1, #24]
 800075e:	7a0a      	ldrb	r2, [r1, #8]
 8000760:	6cc1      	ldr	r1, [r0, #76]	; 0x4c
 8000762:	ea4c 0303 	orr.w	r3, ip, r3
 8000766:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
 800076a:	ea43 3386 	orr.w	r3, r3, r6, lsl #14
 800076e:	ea43 5305 	orr.w	r3, r3, r5, lsl #20
 8000772:	ea43 6384 	orr.w	r3, r3, r4, lsl #26
 8000776:	3a01      	subs	r2, #1
 8000778:	4313      	orrs	r3, r2
 800077a:	64c3      	str	r3, [r0, #76]	; 0x4c
 800077c:	bcf0      	pop	{r4, r5, r6, r7}
 800077e:	4770      	bx	lr

08000780 <ADC_InjectedStructInit>:
 8000780:	2301      	movs	r3, #1
 8000782:	2200      	movs	r2, #0
 8000784:	6002      	str	r2, [r0, #0]
 8000786:	6042      	str	r2, [r0, #4]
 8000788:	7203      	strb	r3, [r0, #8]
 800078a:	60c3      	str	r3, [r0, #12]
 800078c:	6103      	str	r3, [r0, #16]
 800078e:	6143      	str	r3, [r0, #20]
 8000790:	6183      	str	r3, [r0, #24]
 8000792:	4770      	bx	lr

08000794 <ADC_CommonInit>:
 8000794:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000798:	f2c5 0300 	movt	r3, #20480	; 0x5000
 800079c:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 80007a0:	bf18      	it	ne
 80007a2:	4298      	cmpne	r0, r3
 80007a4:	bf0c      	ite	eq
 80007a6:	f44f 7240 	moveq.w	r2, #768	; 0x300
 80007aa:	f44f 62e0 	movne.w	r2, #1792	; 0x700
 80007ae:	b4f0      	push	{r4, r5, r6, r7}
 80007b0:	bf07      	ittee	eq
 80007b2:	f2c5 0200 	movteq	r2, #20480	; 0x5000
 80007b6:	e891 0090 	ldmiaeq.w	r1, {r4, r7}
 80007ba:	f2c5 0200 	movtne	r2, #20480	; 0x5000
 80007be:	680f      	ldrne	r7, [r1, #0]
 80007c0:	bf18      	it	ne
 80007c2:	684c      	ldrne	r4, [r1, #4]
 80007c4:	688e      	ldr	r6, [r1, #8]
 80007c6:	6895      	ldr	r5, [r2, #8]
 80007c8:	68c8      	ldr	r0, [r1, #12]
 80007ca:	7c09      	ldrb	r1, [r1, #16]
 80007cc:	f44f 5387 	mov.w	r3, #4320	; 0x10e0
 80007d0:	433c      	orrs	r4, r7
 80007d2:	f6cf 73fc 	movt	r3, #65532	; 0xfffc
 80007d6:	4334      	orrs	r4, r6
 80007d8:	402b      	ands	r3, r5
 80007da:	4323      	orrs	r3, r4
 80007dc:	ea43 3300 	orr.w	r3, r3, r0, lsl #12
 80007e0:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80007e4:	6093      	str	r3, [r2, #8]
 80007e6:	bcf0      	pop	{r4, r5, r6, r7}
 80007e8:	4770      	bx	lr
 80007ea:	bf00      	nop

080007ec <ADC_CommonStructInit>:
 80007ec:	2300      	movs	r3, #0
 80007ee:	6003      	str	r3, [r0, #0]
 80007f0:	6043      	str	r3, [r0, #4]
 80007f2:	6083      	str	r3, [r0, #8]
 80007f4:	60c3      	str	r3, [r0, #12]
 80007f6:	7403      	strb	r3, [r0, #16]
 80007f8:	4770      	bx	lr
 80007fa:	bf00      	nop

080007fc <ADC_Cmd>:
 80007fc:	6883      	ldr	r3, [r0, #8]
 80007fe:	b919      	cbnz	r1, 8000808 <ADC_Cmd+0xc>
 8000800:	f043 0302 	orr.w	r3, r3, #2
 8000804:	6083      	str	r3, [r0, #8]
 8000806:	4770      	bx	lr
 8000808:	f043 0301 	orr.w	r3, r3, #1
 800080c:	6083      	str	r3, [r0, #8]
 800080e:	4770      	bx	lr

08000810 <ADC_StartCalibration>:
 8000810:	6883      	ldr	r3, [r0, #8]
 8000812:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000816:	6083      	str	r3, [r0, #8]
 8000818:	4770      	bx	lr
 800081a:	bf00      	nop

0800081c <ADC_GetCalibrationValue>:
 800081c:	f8d0 00b4 	ldr.w	r0, [r0, #180]	; 0xb4
 8000820:	4770      	bx	lr
 8000822:	bf00      	nop

08000824 <ADC_SetCalibrationValue>:
 8000824:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
 8000828:	4770      	bx	lr
 800082a:	bf00      	nop

0800082c <ADC_SelectCalibrationMode>:
 800082c:	6883      	ldr	r3, [r0, #8]
 800082e:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 8000832:	6083      	str	r3, [r0, #8]
 8000834:	6883      	ldr	r3, [r0, #8]
 8000836:	430b      	orrs	r3, r1
 8000838:	6083      	str	r3, [r0, #8]
 800083a:	4770      	bx	lr

0800083c <ADC_GetCalibrationStatus>:
 800083c:	6880      	ldr	r0, [r0, #8]
 800083e:	0fc0      	lsrs	r0, r0, #31
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop

08000844 <ADC_DisableCmd>:
 8000844:	6883      	ldr	r3, [r0, #8]
 8000846:	f043 0302 	orr.w	r3, r3, #2
 800084a:	6083      	str	r3, [r0, #8]
 800084c:	4770      	bx	lr
 800084e:	bf00      	nop

08000850 <ADC_GetDisableCmdStatus>:
 8000850:	6880      	ldr	r0, [r0, #8]
 8000852:	f3c0 0040 	ubfx	r0, r0, #1, #1
 8000856:	4770      	bx	lr

08000858 <ADC_VoltageRegulatorCmd>:
 8000858:	6883      	ldr	r3, [r0, #8]
 800085a:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 800085e:	6083      	str	r3, [r0, #8]
 8000860:	6883      	ldr	r3, [r0, #8]
 8000862:	b919      	cbnz	r1, 800086c <ADC_VoltageRegulatorCmd+0x14>
 8000864:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8000868:	6083      	str	r3, [r0, #8]
 800086a:	4770      	bx	lr
 800086c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000870:	6083      	str	r3, [r0, #8]
 8000872:	4770      	bx	lr

08000874 <ADC_SelectDifferentialMode>:
 8000874:	f8d0 30b0 	ldr.w	r3, [r0, #176]	; 0xb0
 8000878:	b93a      	cbnz	r2, 800088a <ADC_SelectDifferentialMode+0x16>
 800087a:	2201      	movs	r2, #1
 800087c:	fa12 f101 	lsls.w	r1, r2, r1
 8000880:	ea23 0101 	bic.w	r1, r3, r1
 8000884:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
 8000888:	4770      	bx	lr
 800088a:	2201      	movs	r2, #1
 800088c:	fa12 f101 	lsls.w	r1, r2, r1
 8000890:	4319      	orrs	r1, r3
 8000892:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
 8000896:	4770      	bx	lr

08000898 <ADC_SelectQueueOfContextMode>:
 8000898:	68c3      	ldr	r3, [r0, #12]
 800089a:	b919      	cbnz	r1, 80008a4 <ADC_SelectQueueOfContextMode+0xc>
 800089c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80008a0:	60c3      	str	r3, [r0, #12]
 80008a2:	4770      	bx	lr
 80008a4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 80008a8:	60c3      	str	r3, [r0, #12]
 80008aa:	4770      	bx	lr

080008ac <ADC_AutoDelayCmd>:
 80008ac:	68c3      	ldr	r3, [r0, #12]
 80008ae:	b919      	cbnz	r1, 80008b8 <ADC_AutoDelayCmd+0xc>
 80008b0:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80008b4:	60c3      	str	r3, [r0, #12]
 80008b6:	4770      	bx	lr
 80008b8:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80008bc:	60c3      	str	r3, [r0, #12]
 80008be:	4770      	bx	lr

080008c0 <ADC_AnalogWatchdogCmd>:
 80008c0:	68c3      	ldr	r3, [r0, #12]
 80008c2:	f023 73e0 	bic.w	r3, r3, #29360128	; 0x1c00000
 80008c6:	430b      	orrs	r3, r1
 80008c8:	60c3      	str	r3, [r0, #12]
 80008ca:	4770      	bx	lr

080008cc <ADC_AnalogWatchdog1ThresholdsConfig>:
 80008cc:	6a03      	ldr	r3, [r0, #32]
 80008ce:	f023 637f 	bic.w	r3, r3, #267386880	; 0xff00000
 80008d2:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 80008d6:	6203      	str	r3, [r0, #32]
 80008d8:	6a03      	ldr	r3, [r0, #32]
 80008da:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80008de:	6203      	str	r3, [r0, #32]
 80008e0:	6a03      	ldr	r3, [r0, #32]
 80008e2:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80008e6:	f023 030f 	bic.w	r3, r3, #15
 80008ea:	6203      	str	r3, [r0, #32]
 80008ec:	6a03      	ldr	r3, [r0, #32]
 80008ee:	4313      	orrs	r3, r2
 80008f0:	6203      	str	r3, [r0, #32]
 80008f2:	4770      	bx	lr

080008f4 <ADC_AnalogWatchdog2ThresholdsConfig>:
 80008f4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80008f6:	f423 037f 	bic.w	r3, r3, #16711680	; 0xff0000
 80008fa:	6243      	str	r3, [r0, #36]	; 0x24
 80008fc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80008fe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000902:	6243      	str	r3, [r0, #36]	; 0x24
 8000904:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8000906:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800090a:	6243      	str	r3, [r0, #36]	; 0x24
 800090c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800090e:	4313      	orrs	r3, r2
 8000910:	6243      	str	r3, [r0, #36]	; 0x24
 8000912:	4770      	bx	lr

08000914 <ADC_AnalogWatchdog3ThresholdsConfig>:
 8000914:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000916:	f423 037f 	bic.w	r3, r3, #16711680	; 0xff0000
 800091a:	6283      	str	r3, [r0, #40]	; 0x28
 800091c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800091e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000922:	6283      	str	r3, [r0, #40]	; 0x28
 8000924:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000926:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 800092a:	6283      	str	r3, [r0, #40]	; 0x28
 800092c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800092e:	4313      	orrs	r3, r2
 8000930:	6283      	str	r3, [r0, #40]	; 0x28
 8000932:	4770      	bx	lr

08000934 <ADC_AnalogWatchdog1SingleChannelConfig>:
 8000934:	68c3      	ldr	r3, [r0, #12]
 8000936:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 800093a:	ea43 6381 	orr.w	r3, r3, r1, lsl #26
 800093e:	60c3      	str	r3, [r0, #12]
 8000940:	4770      	bx	lr
 8000942:	bf00      	nop

08000944 <ADC_AnalogWatchdog2SingleChannelConfig>:
 8000944:	b410      	push	{r4}
 8000946:	2301      	movs	r3, #1
 8000948:	f8d0 40a0 	ldr.w	r4, [r0, #160]	; 0xa0
 800094c:	f8d0 20a0 	ldr.w	r2, [r0, #160]	; 0xa0
 8000950:	f6cf 73f8 	movt	r3, #65528	; 0xfff8
 8000954:	4023      	ands	r3, r4
 8000956:	4313      	orrs	r3, r2
 8000958:	2201      	movs	r2, #1
 800095a:	408a      	lsls	r2, r1
 800095c:	4313      	orrs	r3, r2
 800095e:	f8c0 30a0 	str.w	r3, [r0, #160]	; 0xa0
 8000962:	bc10      	pop	{r4}
 8000964:	4770      	bx	lr
 8000966:	bf00      	nop

08000968 <ADC_AnalogWatchdog3SingleChannelConfig>:
 8000968:	b410      	push	{r4}
 800096a:	2301      	movs	r3, #1
 800096c:	f8d0 40a4 	ldr.w	r4, [r0, #164]	; 0xa4
 8000970:	f8d0 20a4 	ldr.w	r2, [r0, #164]	; 0xa4
 8000974:	f6cf 73f8 	movt	r3, #65528	; 0xfff8
 8000978:	4023      	ands	r3, r4
 800097a:	4313      	orrs	r3, r2
 800097c:	2201      	movs	r2, #1
 800097e:	408a      	lsls	r2, r1
 8000980:	4313      	orrs	r3, r2
 8000982:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
 8000986:	bc10      	pop	{r4}
 8000988:	4770      	bx	lr
 800098a:	bf00      	nop

0800098c <ADC_TempSensorCmd>:
 800098c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000990:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000994:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000998:	bf18      	it	ne
 800099a:	4298      	cmpne	r0, r3
 800099c:	d109      	bne.n	80009b2 <ADC_TempSensorCmd+0x26>
 800099e:	f44f 7340 	mov.w	r3, #768	; 0x300
 80009a2:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80009a6:	689a      	ldr	r2, [r3, #8]
 80009a8:	b151      	cbz	r1, 80009c0 <ADC_TempSensorCmd+0x34>
 80009aa:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009ae:	609a      	str	r2, [r3, #8]
 80009b0:	4770      	bx	lr
 80009b2:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 80009b6:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80009ba:	689a      	ldr	r2, [r3, #8]
 80009bc:	2900      	cmp	r1, #0
 80009be:	d1f4      	bne.n	80009aa <ADC_TempSensorCmd+0x1e>
 80009c0:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009c4:	609a      	str	r2, [r3, #8]
 80009c6:	4770      	bx	lr

080009c8 <ADC_VrefintCmd>:
 80009c8:	f44f 7380 	mov.w	r3, #256	; 0x100
 80009cc:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80009d0:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 80009d4:	bf18      	it	ne
 80009d6:	4298      	cmpne	r0, r3
 80009d8:	d109      	bne.n	80009ee <ADC_VrefintCmd+0x26>
 80009da:	f44f 7340 	mov.w	r3, #768	; 0x300
 80009de:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80009e2:	689a      	ldr	r2, [r3, #8]
 80009e4:	b151      	cbz	r1, 80009fc <ADC_VrefintCmd+0x34>
 80009e6:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80009ea:	609a      	str	r2, [r3, #8]
 80009ec:	4770      	bx	lr
 80009ee:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 80009f2:	f2c5 0300 	movt	r3, #20480	; 0x5000
 80009f6:	689a      	ldr	r2, [r3, #8]
 80009f8:	2900      	cmp	r1, #0
 80009fa:	d1f4      	bne.n	80009e6 <ADC_VrefintCmd+0x1e>
 80009fc:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8000a00:	609a      	str	r2, [r3, #8]
 8000a02:	4770      	bx	lr

08000a04 <ADC_VbatCmd>:
 8000a04:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000a08:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000a0c:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000a10:	bf18      	it	ne
 8000a12:	4298      	cmpne	r0, r3
 8000a14:	d109      	bne.n	8000a2a <ADC_VbatCmd+0x26>
 8000a16:	f44f 7340 	mov.w	r3, #768	; 0x300
 8000a1a:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000a1e:	689a      	ldr	r2, [r3, #8]
 8000a20:	b151      	cbz	r1, 8000a38 <ADC_VbatCmd+0x34>
 8000a22:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000a26:	609a      	str	r2, [r3, #8]
 8000a28:	4770      	bx	lr
 8000a2a:	f44f 63e0 	mov.w	r3, #1792	; 0x700
 8000a2e:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000a32:	689a      	ldr	r2, [r3, #8]
 8000a34:	2900      	cmp	r1, #0
 8000a36:	d1f4      	bne.n	8000a22 <ADC_VbatCmd+0x1e>
 8000a38:	f022 7280 	bic.w	r2, r2, #16777216	; 0x1000000
 8000a3c:	609a      	str	r2, [r3, #8]
 8000a3e:	4770      	bx	lr

08000a40 <ADC_RegularChannelConfig>:
 8000a40:	2a04      	cmp	r2, #4
 8000a42:	b430      	push	{r4, r5}
 8000a44:	d820      	bhi.n	8000a88 <ADC_RegularChannelConfig+0x48>
 8000a46:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8000a4a:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8000a4c:	0052      	lsls	r2, r2, #1
 8000a4e:	241f      	movs	r4, #31
 8000a50:	4094      	lsls	r4, r2
 8000a52:	ea25 0404 	bic.w	r4, r5, r4
 8000a56:	fa11 f202 	lsls.w	r2, r1, r2
 8000a5a:	4322      	orrs	r2, r4
 8000a5c:	6302      	str	r2, [r0, #48]	; 0x30
 8000a5e:	2909      	cmp	r1, #9
 8000a60:	d823      	bhi.n	8000aaa <ADC_RegularChannelConfig+0x6a>
 8000a62:	1e4a      	subs	r2, r1, #1
 8000a64:	6944      	ldr	r4, [r0, #20]
 8000a66:	6944      	ldr	r4, [r0, #20]
 8000a68:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8000a6c:	2538      	movs	r5, #56	; 0x38
 8000a6e:	fa15 f202 	lsls.w	r2, r5, r2
 8000a72:	ea24 0202 	bic.w	r2, r4, r2
 8000a76:	6142      	str	r2, [r0, #20]
 8000a78:	6942      	ldr	r2, [r0, #20]
 8000a7a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8000a7e:	408b      	lsls	r3, r1
 8000a80:	4313      	orrs	r3, r2
 8000a82:	6143      	str	r3, [r0, #20]
 8000a84:	bc30      	pop	{r4, r5}
 8000a86:	4770      	bx	lr
 8000a88:	2a09      	cmp	r2, #9
 8000a8a:	d81e      	bhi.n	8000aca <ADC_RegularChannelConfig+0x8a>
 8000a8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8000a90:	0052      	lsls	r2, r2, #1
 8000a92:	3a1e      	subs	r2, #30
 8000a94:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8000a96:	241f      	movs	r4, #31
 8000a98:	4094      	lsls	r4, r2
 8000a9a:	ea25 0404 	bic.w	r4, r5, r4
 8000a9e:	fa11 f202 	lsls.w	r2, r1, r2
 8000aa2:	4322      	orrs	r2, r4
 8000aa4:	2909      	cmp	r1, #9
 8000aa6:	6342      	str	r2, [r0, #52]	; 0x34
 8000aa8:	d9db      	bls.n	8000a62 <ADC_RegularChannelConfig+0x22>
 8000aaa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8000aae:	6982      	ldr	r2, [r0, #24]
 8000ab0:	6984      	ldr	r4, [r0, #24]
 8000ab2:	391e      	subs	r1, #30
 8000ab4:	2207      	movs	r2, #7
 8000ab6:	408a      	lsls	r2, r1
 8000ab8:	ea24 0202 	bic.w	r2, r4, r2
 8000abc:	6182      	str	r2, [r0, #24]
 8000abe:	6982      	ldr	r2, [r0, #24]
 8000ac0:	fa13 f101 	lsls.w	r1, r3, r1
 8000ac4:	4311      	orrs	r1, r2
 8000ac6:	6181      	str	r1, [r0, #24]
 8000ac8:	e7dc      	b.n	8000a84 <ADC_RegularChannelConfig+0x44>
 8000aca:	2a0e      	cmp	r2, #14
 8000acc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8000ad0:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8000ad4:	d80a      	bhi.n	8000aec <ADC_RegularChannelConfig+0xac>
 8000ad6:	6b85      	ldr	r5, [r0, #56]	; 0x38
 8000ad8:	3a3c      	subs	r2, #60	; 0x3c
 8000ada:	241f      	movs	r4, #31
 8000adc:	4094      	lsls	r4, r2
 8000ade:	ea25 0404 	bic.w	r4, r5, r4
 8000ae2:	fa11 f202 	lsls.w	r2, r1, r2
 8000ae6:	4322      	orrs	r2, r4
 8000ae8:	6382      	str	r2, [r0, #56]	; 0x38
 8000aea:	e7b8      	b.n	8000a5e <ADC_RegularChannelConfig+0x1e>
 8000aec:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 8000aee:	3a5a      	subs	r2, #90	; 0x5a
 8000af0:	241f      	movs	r4, #31
 8000af2:	4094      	lsls	r4, r2
 8000af4:	ea25 0404 	bic.w	r4, r5, r4
 8000af8:	fa11 f202 	lsls.w	r2, r1, r2
 8000afc:	4322      	orrs	r2, r4
 8000afe:	63c2      	str	r2, [r0, #60]	; 0x3c
 8000b00:	e7ad      	b.n	8000a5e <ADC_RegularChannelConfig+0x1e>
 8000b02:	bf00      	nop

08000b04 <ADC_RegularChannelSequencerLengthConfig>:
 8000b04:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000b06:	f023 030f 	bic.w	r3, r3, #15
 8000b0a:	6303      	str	r3, [r0, #48]	; 0x30
 8000b0c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000b0e:	3901      	subs	r1, #1
 8000b10:	4319      	orrs	r1, r3
 8000b12:	6301      	str	r1, [r0, #48]	; 0x30
 8000b14:	4770      	bx	lr
 8000b16:	bf00      	nop

08000b18 <ADC_ExternalTriggerConfig>:
 8000b18:	68c3      	ldr	r3, [r0, #12]
 8000b1a:	f423 637c 	bic.w	r3, r3, #4032	; 0xfc0
 8000b1e:	60c3      	str	r3, [r0, #12]
 8000b20:	68c3      	ldr	r3, [r0, #12]
 8000b22:	430a      	orrs	r2, r1
 8000b24:	431a      	orrs	r2, r3
 8000b26:	60c2      	str	r2, [r0, #12]
 8000b28:	4770      	bx	lr
 8000b2a:	bf00      	nop

08000b2c <ADC_StartConversion>:
 8000b2c:	6883      	ldr	r3, [r0, #8]
 8000b2e:	f043 0304 	orr.w	r3, r3, #4
 8000b32:	6083      	str	r3, [r0, #8]
 8000b34:	4770      	bx	lr
 8000b36:	bf00      	nop

08000b38 <ADC_GetStartConversionStatus>:
 8000b38:	6880      	ldr	r0, [r0, #8]
 8000b3a:	f3c0 0080 	ubfx	r0, r0, #2, #1
 8000b3e:	4770      	bx	lr

08000b40 <ADC_StopConversion>:
 8000b40:	6883      	ldr	r3, [r0, #8]
 8000b42:	f043 0310 	orr.w	r3, r3, #16
 8000b46:	6083      	str	r3, [r0, #8]
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <ADC_DiscModeChannelCountConfig>:
 8000b4c:	68c3      	ldr	r3, [r0, #12]
 8000b4e:	3901      	subs	r1, #1
 8000b50:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8000b54:	ea43 4141 	orr.w	r1, r3, r1, lsl #17
 8000b58:	60c1      	str	r1, [r0, #12]
 8000b5a:	4770      	bx	lr

08000b5c <ADC_DiscModeCmd>:
 8000b5c:	68c3      	ldr	r3, [r0, #12]
 8000b5e:	b919      	cbnz	r1, 8000b68 <ADC_DiscModeCmd+0xc>
 8000b60:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000b64:	60c3      	str	r3, [r0, #12]
 8000b66:	4770      	bx	lr
 8000b68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000b6c:	60c3      	str	r3, [r0, #12]
 8000b6e:	4770      	bx	lr

08000b70 <ADC_GetConversionValue>:
 8000b70:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8000b72:	b280      	uxth	r0, r0
 8000b74:	4770      	bx	lr
 8000b76:	bf00      	nop

08000b78 <ADC_GetDualModeConversionValue>:
 8000b78:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000b7c:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000b80:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000b84:	bf18      	it	ne
 8000b86:	4298      	cmpne	r0, r3
 8000b88:	bf0b      	itete	eq
 8000b8a:	f44f 7340 	moveq.w	r3, #768	; 0x300
 8000b8e:	f44f 63e0 	movne.w	r3, #1792	; 0x700
 8000b92:	f2c5 0300 	movteq	r3, #20480	; 0x5000
 8000b96:	f2c5 0300 	movtne	r3, #20480	; 0x5000
 8000b9a:	bf0c      	ite	eq
 8000b9c:	68d8      	ldreq	r0, [r3, #12]
 8000b9e:	68d8      	ldrne	r0, [r3, #12]
 8000ba0:	4770      	bx	lr
 8000ba2:	bf00      	nop

08000ba4 <ADC_SetChannelOffset1>:
 8000ba4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8000ba6:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8000baa:	6603      	str	r3, [r0, #96]	; 0x60
 8000bac:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8000bae:	ea43 6381 	orr.w	r3, r3, r1, lsl #26
 8000bb2:	6603      	str	r3, [r0, #96]	; 0x60
 8000bb4:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8000bb6:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8000bba:	f023 030f 	bic.w	r3, r3, #15
 8000bbe:	6603      	str	r3, [r0, #96]	; 0x60
 8000bc0:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8000bc2:	4313      	orrs	r3, r2
 8000bc4:	6603      	str	r3, [r0, #96]	; 0x60
 8000bc6:	4770      	bx	lr

08000bc8 <ADC_SetChannelOffset2>:
 8000bc8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8000bca:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8000bce:	6643      	str	r3, [r0, #100]	; 0x64
 8000bd0:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8000bd2:	ea43 6381 	orr.w	r3, r3, r1, lsl #26
 8000bd6:	6643      	str	r3, [r0, #100]	; 0x64
 8000bd8:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8000bda:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8000bde:	f023 030f 	bic.w	r3, r3, #15
 8000be2:	6643      	str	r3, [r0, #100]	; 0x64
 8000be4:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8000be6:	4313      	orrs	r3, r2
 8000be8:	6643      	str	r3, [r0, #100]	; 0x64
 8000bea:	4770      	bx	lr

08000bec <ADC_SetChannelOffset3>:
 8000bec:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000bee:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8000bf2:	6683      	str	r3, [r0, #104]	; 0x68
 8000bf4:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000bf6:	ea43 6381 	orr.w	r3, r3, r1, lsl #26
 8000bfa:	6683      	str	r3, [r0, #104]	; 0x68
 8000bfc:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000bfe:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8000c02:	f023 030f 	bic.w	r3, r3, #15
 8000c06:	6683      	str	r3, [r0, #104]	; 0x68
 8000c08:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000c0a:	4313      	orrs	r3, r2
 8000c0c:	6683      	str	r3, [r0, #104]	; 0x68
 8000c0e:	4770      	bx	lr

08000c10 <ADC_SetChannelOffset4>:
 8000c10:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000c12:	f023 43f8 	bic.w	r3, r3, #2080374784	; 0x7c000000
 8000c16:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c18:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000c1a:	ea43 6381 	orr.w	r3, r3, r1, lsl #26
 8000c1e:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c20:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000c22:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8000c26:	f023 030f 	bic.w	r3, r3, #15
 8000c2a:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c2c:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000c2e:	4313      	orrs	r3, r2
 8000c30:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c32:	4770      	bx	lr

08000c34 <ADC_ChannelOffset1Cmd>:
 8000c34:	6e03      	ldr	r3, [r0, #96]	; 0x60
 8000c36:	b919      	cbnz	r1, 8000c40 <ADC_ChannelOffset1Cmd+0xc>
 8000c38:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c3c:	6603      	str	r3, [r0, #96]	; 0x60
 8000c3e:	4770      	bx	lr
 8000c40:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c44:	6603      	str	r3, [r0, #96]	; 0x60
 8000c46:	4770      	bx	lr

08000c48 <ADC_ChannelOffset2Cmd>:
 8000c48:	6e43      	ldr	r3, [r0, #100]	; 0x64
 8000c4a:	b919      	cbnz	r1, 8000c54 <ADC_ChannelOffset2Cmd+0xc>
 8000c4c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c50:	6643      	str	r3, [r0, #100]	; 0x64
 8000c52:	4770      	bx	lr
 8000c54:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c58:	6643      	str	r3, [r0, #100]	; 0x64
 8000c5a:	4770      	bx	lr

08000c5c <ADC_ChannelOffset3Cmd>:
 8000c5c:	6e83      	ldr	r3, [r0, #104]	; 0x68
 8000c5e:	b919      	cbnz	r1, 8000c68 <ADC_ChannelOffset3Cmd+0xc>
 8000c60:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c64:	6683      	str	r3, [r0, #104]	; 0x68
 8000c66:	4770      	bx	lr
 8000c68:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c6c:	6683      	str	r3, [r0, #104]	; 0x68
 8000c6e:	4770      	bx	lr

08000c70 <ADC_ChannelOffset4Cmd>:
 8000c70:	6ec3      	ldr	r3, [r0, #108]	; 0x6c
 8000c72:	b919      	cbnz	r1, 8000c7c <ADC_ChannelOffset4Cmd+0xc>
 8000c74:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8000c78:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c7a:	4770      	bx	lr
 8000c7c:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000c80:	66c3      	str	r3, [r0, #108]	; 0x6c
 8000c82:	4770      	bx	lr

08000c84 <ADC_DMACmd>:
 8000c84:	68c3      	ldr	r3, [r0, #12]
 8000c86:	b919      	cbnz	r1, 8000c90 <ADC_DMACmd+0xc>
 8000c88:	f023 0301 	bic.w	r3, r3, #1
 8000c8c:	60c3      	str	r3, [r0, #12]
 8000c8e:	4770      	bx	lr
 8000c90:	f043 0301 	orr.w	r3, r3, #1
 8000c94:	60c3      	str	r3, [r0, #12]
 8000c96:	4770      	bx	lr

08000c98 <ADC_DMAConfig>:
 8000c98:	68c3      	ldr	r3, [r0, #12]
 8000c9a:	f023 0302 	bic.w	r3, r3, #2
 8000c9e:	60c3      	str	r3, [r0, #12]
 8000ca0:	68c3      	ldr	r3, [r0, #12]
 8000ca2:	430b      	orrs	r3, r1
 8000ca4:	60c3      	str	r3, [r0, #12]
 8000ca6:	4770      	bx	lr

08000ca8 <ADC_InjectedChannelConfig>:
 8000ca8:	2909      	cmp	r1, #9
 8000caa:	b470      	push	{r4, r5, r6}
 8000cac:	d81b      	bhi.n	8000ce6 <ADC_InjectedChannelConfig+0x3e>
 8000cae:	6946      	ldr	r6, [r0, #20]
 8000cb0:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8000cb4:	2507      	movs	r5, #7
 8000cb6:	40a5      	lsls	r5, r4
 8000cb8:	ea26 0505 	bic.w	r5, r6, r5
 8000cbc:	fa13 f404 	lsls.w	r4, r3, r4
 8000cc0:	ea45 0304 	orr.w	r3, r5, r4
 8000cc4:	6143      	str	r3, [r0, #20]
 8000cc6:	3a01      	subs	r2, #1
 8000cc8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8000ccc:	0052      	lsls	r2, r2, #1
 8000cce:	6cc4      	ldr	r4, [r0, #76]	; 0x4c
 8000cd0:	f44f 53f8 	mov.w	r3, #7936	; 0x1f00
 8000cd4:	4093      	lsls	r3, r2
 8000cd6:	ea24 0303 	bic.w	r3, r4, r3
 8000cda:	4091      	lsls	r1, r2
 8000cdc:	ea43 0201 	orr.w	r2, r3, r1
 8000ce0:	64c2      	str	r2, [r0, #76]	; 0x4c
 8000ce2:	bc70      	pop	{r4, r5, r6}
 8000ce4:	4770      	bx	lr
 8000ce6:	eb01 0441 	add.w	r4, r1, r1, lsl #1
 8000cea:	6986      	ldr	r6, [r0, #24]
 8000cec:	3c1e      	subs	r4, #30
 8000cee:	2507      	movs	r5, #7
 8000cf0:	40a5      	lsls	r5, r4
 8000cf2:	ea26 0505 	bic.w	r5, r6, r5
 8000cf6:	fa13 f404 	lsls.w	r4, r3, r4
 8000cfa:	ea45 0304 	orr.w	r3, r5, r4
 8000cfe:	6183      	str	r3, [r0, #24]
 8000d00:	e7e1      	b.n	8000cc6 <ADC_InjectedChannelConfig+0x1e>
 8000d02:	bf00      	nop

08000d04 <ADC_InjectedSequencerLengthConfig>:
 8000d04:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8000d06:	3901      	subs	r1, #1
 8000d08:	f023 0303 	bic.w	r3, r3, #3
 8000d0c:	4319      	orrs	r1, r3
 8000d0e:	64c1      	str	r1, [r0, #76]	; 0x4c
 8000d10:	4770      	bx	lr
 8000d12:	bf00      	nop

08000d14 <ADC_ExternalTriggerInjectedConfig>:
 8000d14:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8000d16:	f023 03fc 	bic.w	r3, r3, #252	; 0xfc
 8000d1a:	64c3      	str	r3, [r0, #76]	; 0x4c
 8000d1c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8000d1e:	430a      	orrs	r2, r1
 8000d20:	431a      	orrs	r2, r3
 8000d22:	64c2      	str	r2, [r0, #76]	; 0x4c
 8000d24:	4770      	bx	lr
 8000d26:	bf00      	nop

08000d28 <ADC_StartInjectedConversion>:
 8000d28:	6883      	ldr	r3, [r0, #8]
 8000d2a:	f043 0308 	orr.w	r3, r3, #8
 8000d2e:	6083      	str	r3, [r0, #8]
 8000d30:	4770      	bx	lr
 8000d32:	bf00      	nop

08000d34 <ADC_StopInjectedConversion>:
 8000d34:	6883      	ldr	r3, [r0, #8]
 8000d36:	f043 0320 	orr.w	r3, r3, #32
 8000d3a:	6083      	str	r3, [r0, #8]
 8000d3c:	4770      	bx	lr
 8000d3e:	bf00      	nop

08000d40 <ADC_GetStartInjectedConversionStatus>:
 8000d40:	6880      	ldr	r0, [r0, #8]
 8000d42:	f3c0 00c0 	ubfx	r0, r0, #3, #1
 8000d46:	4770      	bx	lr

08000d48 <ADC_AutoInjectedConvCmd>:
 8000d48:	68c3      	ldr	r3, [r0, #12]
 8000d4a:	b919      	cbnz	r1, 8000d54 <ADC_AutoInjectedConvCmd+0xc>
 8000d4c:	f023 7300 	bic.w	r3, r3, #33554432	; 0x2000000
 8000d50:	60c3      	str	r3, [r0, #12]
 8000d52:	4770      	bx	lr
 8000d54:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000d58:	60c3      	str	r3, [r0, #12]
 8000d5a:	4770      	bx	lr

08000d5c <ADC_InjectedDiscModeCmd>:
 8000d5c:	68c3      	ldr	r3, [r0, #12]
 8000d5e:	b919      	cbnz	r1, 8000d68 <ADC_InjectedDiscModeCmd+0xc>
 8000d60:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8000d64:	60c3      	str	r3, [r0, #12]
 8000d66:	4770      	bx	lr
 8000d68:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000d6c:	60c3      	str	r3, [r0, #12]
 8000d6e:	4770      	bx	lr

08000d70 <ADC_GetInjectedConversionValue>:
 8000d70:	b082      	sub	sp, #8
 8000d72:	2300      	movs	r3, #0
 8000d74:	9301      	str	r3, [sp, #4]
 8000d76:	9001      	str	r0, [sp, #4]
 8000d78:	9b01      	ldr	r3, [sp, #4]
 8000d7a:	3380      	adds	r3, #128	; 0x80
 8000d7c:	185b      	adds	r3, r3, r1
 8000d7e:	9301      	str	r3, [sp, #4]
 8000d80:	9b01      	ldr	r3, [sp, #4]
 8000d82:	6818      	ldr	r0, [r3, #0]
 8000d84:	b280      	uxth	r0, r0
 8000d86:	b002      	add	sp, #8
 8000d88:	4770      	bx	lr
 8000d8a:	bf00      	nop

08000d8c <ADC_ITConfig>:
 8000d8c:	6843      	ldr	r3, [r0, #4]
 8000d8e:	b91a      	cbnz	r2, 8000d98 <ADC_ITConfig+0xc>
 8000d90:	ea23 0101 	bic.w	r1, r3, r1
 8000d94:	6041      	str	r1, [r0, #4]
 8000d96:	4770      	bx	lr
 8000d98:	4319      	orrs	r1, r3
 8000d9a:	6041      	str	r1, [r0, #4]
 8000d9c:	4770      	bx	lr
 8000d9e:	bf00      	nop

08000da0 <ADC_GetFlagStatus>:
 8000da0:	6803      	ldr	r3, [r0, #0]
 8000da2:	4219      	tst	r1, r3
 8000da4:	bf0c      	ite	eq
 8000da6:	2000      	moveq	r0, #0
 8000da8:	2001      	movne	r0, #1
 8000daa:	4770      	bx	lr

08000dac <ADC_ClearFlag>:
 8000dac:	6001      	str	r1, [r0, #0]
 8000dae:	4770      	bx	lr

08000db0 <ADC_GetCommonFlagStatus>:
 8000db0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000db4:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000db8:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000dbc:	bf18      	it	ne
 8000dbe:	4298      	cmpne	r0, r3
 8000dc0:	bf0c      	ite	eq
 8000dc2:	f44f 7340 	moveq.w	r3, #768	; 0x300
 8000dc6:	f44f 63e0 	movne.w	r3, #1792	; 0x700
 8000dca:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000dce:	681b      	ldr	r3, [r3, #0]
 8000dd0:	420b      	tst	r3, r1
 8000dd2:	bf0c      	ite	eq
 8000dd4:	2000      	moveq	r0, #0
 8000dd6:	2001      	movne	r0, #1
 8000dd8:	4770      	bx	lr
 8000dda:	bf00      	nop

08000ddc <ADC_ClearCommonFlag>:
 8000ddc:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000de0:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000de4:	f1b0 4fa0 	cmp.w	r0, #1342177280	; 0x50000000
 8000de8:	bf18      	it	ne
 8000dea:	4298      	cmpne	r0, r3
 8000dec:	bf0c      	ite	eq
 8000dee:	f44f 7340 	moveq.w	r3, #768	; 0x300
 8000df2:	f44f 63e0 	movne.w	r3, #1792	; 0x700
 8000df6:	f2c5 0300 	movt	r3, #20480	; 0x5000
 8000dfa:	681a      	ldr	r2, [r3, #0]
 8000dfc:	4311      	orrs	r1, r2
 8000dfe:	6019      	str	r1, [r3, #0]
 8000e00:	4770      	bx	lr
 8000e02:	bf00      	nop

08000e04 <ADC_GetITStatus>:
 8000e04:	6803      	ldr	r3, [r0, #0]
 8000e06:	6842      	ldr	r2, [r0, #4]
 8000e08:	b289      	uxth	r1, r1
 8000e0a:	4211      	tst	r1, r2
 8000e0c:	bf0c      	ite	eq
 8000e0e:	2000      	moveq	r0, #0
 8000e10:	2001      	movne	r0, #1
 8000e12:	4219      	tst	r1, r3
 8000e14:	bf0c      	ite	eq
 8000e16:	2000      	moveq	r0, #0
 8000e18:	f000 0001 	andne.w	r0, r0, #1
 8000e1c:	4770      	bx	lr
 8000e1e:	bf00      	nop

08000e20 <ADC_ClearITPendingBit>:
 8000e20:	6803      	ldr	r3, [r0, #0]
 8000e22:	430b      	orrs	r3, r1
 8000e24:	6003      	str	r3, [r0, #0]
 8000e26:	4770      	bx	lr

08000e28 <NVIC_PriorityGroupConfig>:
 8000e28:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8000e2c:	f040 60bf 	orr.w	r0, r0, #100139008	; 0x5f80000
 8000e30:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000e34:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000e38:	60d8      	str	r0, [r3, #12]
 8000e3a:	4770      	bx	lr

08000e3c <NVIC_Init>:
 8000e3c:	78c3      	ldrb	r3, [r0, #3]
 8000e3e:	b470      	push	{r4, r5, r6}
 8000e40:	b97b      	cbnz	r3, 8000e62 <NVIC_Init+0x26>
 8000e42:	7802      	ldrb	r2, [r0, #0]
 8000e44:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000e48:	0951      	lsrs	r1, r2, #5
 8000e4a:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000e4e:	f002 021f 	and.w	r2, r2, #31
 8000e52:	3120      	adds	r1, #32
 8000e54:	2001      	movs	r0, #1
 8000e56:	fa10 f202 	lsls.w	r2, r0, r2
 8000e5a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8000e5e:	bc70      	pop	{r4, r5, r6}
 8000e60:	4770      	bx	lr
 8000e62:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8000e66:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000e6a:	7845      	ldrb	r5, [r0, #1]
 8000e6c:	68da      	ldr	r2, [r3, #12]
 8000e6e:	7884      	ldrb	r4, [r0, #2]
 8000e70:	7803      	ldrb	r3, [r0, #0]
 8000e72:	43d2      	mvns	r2, r2
 8000e74:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8000e78:	260f      	movs	r6, #15
 8000e7a:	f1c2 0104 	rsb	r1, r2, #4
 8000e7e:	fa36 f202 	lsrs.w	r2, r6, r2
 8000e82:	fa15 f101 	lsls.w	r1, r5, r1
 8000e86:	4022      	ands	r2, r4
 8000e88:	430a      	orrs	r2, r1
 8000e8a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000e8e:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8000e92:	0112      	lsls	r2, r2, #4
 8000e94:	b2d2      	uxtb	r2, r2
 8000e96:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000e9a:	7802      	ldrb	r2, [r0, #0]
 8000e9c:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000ea0:	0951      	lsrs	r1, r2, #5
 8000ea2:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000ea6:	f002 021f 	and.w	r2, r2, #31
 8000eaa:	2001      	movs	r0, #1
 8000eac:	fa10 f202 	lsls.w	r2, r0, r2
 8000eb0:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8000eb4:	e7d3      	b.n	8000e5e <NVIC_Init+0x22>
 8000eb6:	bf00      	nop

08000eb8 <NVIC_SetVectorTable>:
 8000eb8:	f021 4160 	bic.w	r1, r1, #3758096384	; 0xe0000000
 8000ebc:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8000ec0:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8000ec4:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000ec8:	4301      	orrs	r1, r0
 8000eca:	6099      	str	r1, [r3, #8]
 8000ecc:	4770      	bx	lr
 8000ece:	bf00      	nop

08000ed0 <NVIC_SystemLPConfig>:
 8000ed0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 8000ed4:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000ed8:	691a      	ldr	r2, [r3, #16]
 8000eda:	b919      	cbnz	r1, 8000ee4 <NVIC_SystemLPConfig+0x14>
 8000edc:	ea22 0000 	bic.w	r0, r2, r0
 8000ee0:	6118      	str	r0, [r3, #16]
 8000ee2:	4770      	bx	lr
 8000ee4:	4310      	orrs	r0, r2
 8000ee6:	6118      	str	r0, [r3, #16]
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <SysTick_CLKSourceConfig>:
 8000eec:	f24e 0310 	movw	r3, #57360	; 0xe010
 8000ef0:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8000ef4:	2804      	cmp	r0, #4
 8000ef6:	681a      	ldr	r2, [r3, #0]
 8000ef8:	bf0c      	ite	eq
 8000efa:	f042 0204 	orreq.w	r2, r2, #4
 8000efe:	f022 0204 	bicne.w	r2, r2, #4
 8000f02:	601a      	str	r2, [r3, #0]
 8000f04:	4770      	bx	lr
 8000f06:	bf00      	nop

08000f08 <OPAMP_DeInit>:
 8000f08:	2338      	movs	r3, #56	; 0x38
 8000f0a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f0e:	2200      	movs	r2, #0
 8000f10:	50c2      	str	r2, [r0, r3]
 8000f12:	4770      	bx	lr

08000f14 <OPAMP_Init>:
 8000f14:	2338      	movs	r3, #56	; 0x38
 8000f16:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f1a:	b430      	push	{r4, r5}
 8000f1c:	684a      	ldr	r2, [r1, #4]
 8000f1e:	680c      	ldr	r4, [r1, #0]
 8000f20:	58c5      	ldr	r5, [r0, r3]
 8000f22:	4322      	orrs	r2, r4
 8000f24:	f025 016c 	bic.w	r1, r5, #108	; 0x6c
 8000f28:	430a      	orrs	r2, r1
 8000f2a:	50c2      	str	r2, [r0, r3]
 8000f2c:	bc30      	pop	{r4, r5}
 8000f2e:	4770      	bx	lr

08000f30 <OPAMP_StructInit>:
 8000f30:	2300      	movs	r3, #0
 8000f32:	6043      	str	r3, [r0, #4]
 8000f34:	6003      	str	r3, [r0, #0]
 8000f36:	4770      	bx	lr

08000f38 <OPAMP_PGAConfig>:
 8000f38:	2338      	movs	r3, #56	; 0x38
 8000f3a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f3e:	430a      	orrs	r2, r1
 8000f40:	58c1      	ldr	r1, [r0, r3]
 8000f42:	f421 3170 	bic.w	r1, r1, #245760	; 0x3c000
 8000f46:	b410      	push	{r4}
 8000f48:	50c1      	str	r1, [r0, r3]
 8000f4a:	58c4      	ldr	r4, [r0, r3]
 8000f4c:	4322      	orrs	r2, r4
 8000f4e:	50c2      	str	r2, [r0, r3]
 8000f50:	bc10      	pop	{r4}
 8000f52:	4770      	bx	lr

08000f54 <OPAMP_VrefConfig>:
 8000f54:	2338      	movs	r3, #56	; 0x38
 8000f56:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f5a:	58c2      	ldr	r2, [r0, r3]
 8000f5c:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 8000f60:	430a      	orrs	r2, r1
 8000f62:	50c2      	str	r2, [r0, r3]
 8000f64:	4770      	bx	lr
 8000f66:	bf00      	nop

08000f68 <OPAMP_VrefConnectNonInvertingInput>:
 8000f68:	2338      	movs	r3, #56	; 0x38
 8000f6a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f6e:	58c2      	ldr	r2, [r0, r3]
 8000f70:	b919      	cbnz	r1, 8000f7a <OPAMP_VrefConnectNonInvertingInput+0x12>
 8000f72:	f022 0202 	bic.w	r2, r2, #2
 8000f76:	50c2      	str	r2, [r0, r3]
 8000f78:	4770      	bx	lr
 8000f7a:	f042 0202 	orr.w	r2, r2, #2
 8000f7e:	50c2      	str	r2, [r0, r3]
 8000f80:	4770      	bx	lr
 8000f82:	bf00      	nop

08000f84 <OPAMP_VrefConnectADCCmd>:
 8000f84:	2338      	movs	r3, #56	; 0x38
 8000f86:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000f8a:	58c2      	ldr	r2, [r0, r3]
 8000f8c:	b919      	cbnz	r1, 8000f96 <OPAMP_VrefConnectADCCmd+0x12>
 8000f8e:	f022 5200 	bic.w	r2, r2, #536870912	; 0x20000000
 8000f92:	50c2      	str	r2, [r0, r3]
 8000f94:	4770      	bx	lr
 8000f96:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8000f9a:	50c2      	str	r2, [r0, r3]
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop

08000fa0 <OPAMP_TimerControlledMuxConfig>:
 8000fa0:	2338      	movs	r3, #56	; 0x38
 8000fa2:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000fa6:	b430      	push	{r4, r5}
 8000fa8:	680c      	ldr	r4, [r1, #0]
 8000faa:	684a      	ldr	r2, [r1, #4]
 8000fac:	58c5      	ldr	r5, [r0, r3]
 8000fae:	00e4      	lsls	r4, r4, #3
 8000fb0:	f425 61e0 	bic.w	r1, r5, #1792	; 0x700
 8000fb4:	ea44 12c2 	orr.w	r2, r4, r2, lsl #7
 8000fb8:	430a      	orrs	r2, r1
 8000fba:	50c2      	str	r2, [r0, r3]
 8000fbc:	bc30      	pop	{r4, r5}
 8000fbe:	4770      	bx	lr

08000fc0 <OPAMP_TimerControlledMuxCmd>:
 8000fc0:	2338      	movs	r3, #56	; 0x38
 8000fc2:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000fc6:	58c2      	ldr	r2, [r0, r3]
 8000fc8:	b919      	cbnz	r1, 8000fd2 <OPAMP_TimerControlledMuxCmd+0x12>
 8000fca:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8000fce:	50c2      	str	r2, [r0, r3]
 8000fd0:	4770      	bx	lr
 8000fd2:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000fd6:	50c2      	str	r2, [r0, r3]
 8000fd8:	4770      	bx	lr
 8000fda:	bf00      	nop

08000fdc <OPAMP_Cmd>:
 8000fdc:	2338      	movs	r3, #56	; 0x38
 8000fde:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000fe2:	58c2      	ldr	r2, [r0, r3]
 8000fe4:	b919      	cbnz	r1, 8000fee <OPAMP_Cmd+0x12>
 8000fe6:	f022 0201 	bic.w	r2, r2, #1
 8000fea:	50c2      	str	r2, [r0, r3]
 8000fec:	4770      	bx	lr
 8000fee:	f042 0201 	orr.w	r2, r2, #1
 8000ff2:	50c2      	str	r2, [r0, r3]
 8000ff4:	4770      	bx	lr
 8000ff6:	bf00      	nop

08000ff8 <OPAMP_GetOutputLevel>:
 8000ff8:	2338      	movs	r3, #56	; 0x38
 8000ffa:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8000ffe:	58c0      	ldr	r0, [r0, r3]
 8001000:	f000 4080 	and.w	r0, r0, #1073741824	; 0x40000000
 8001004:	4770      	bx	lr
 8001006:	bf00      	nop

08001008 <OPAMP_OffsetTrimModeSelect>:
 8001008:	2338      	movs	r3, #56	; 0x38
 800100a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 800100e:	58c2      	ldr	r2, [r0, r3]
 8001010:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8001014:	50c2      	str	r2, [r0, r3]
 8001016:	58c2      	ldr	r2, [r0, r3]
 8001018:	430a      	orrs	r2, r1
 800101a:	50c2      	str	r2, [r0, r3]
 800101c:	4770      	bx	lr
 800101e:	bf00      	nop

08001020 <OPAMP_OffsetTrimConfig>:
 8001020:	2338      	movs	r3, #56	; 0x38
 8001022:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001026:	b430      	push	{r4, r5}
 8001028:	58c5      	ldr	r5, [r0, r3]
 800102a:	241f      	movs	r4, #31
 800102c:	408c      	lsls	r4, r1
 800102e:	ea25 0404 	bic.w	r4, r5, r4
 8001032:	fa12 f101 	lsls.w	r1, r2, r1
 8001036:	430c      	orrs	r4, r1
 8001038:	50c4      	str	r4, [r0, r3]
 800103a:	bc30      	pop	{r4, r5}
 800103c:	4770      	bx	lr
 800103e:	bf00      	nop

08001040 <OPAMP_StartCalibration>:
 8001040:	2338      	movs	r3, #56	; 0x38
 8001042:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001046:	58c2      	ldr	r2, [r0, r3]
 8001048:	b919      	cbnz	r1, 8001052 <OPAMP_StartCalibration+0x12>
 800104a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800104e:	50c2      	str	r2, [r0, r3]
 8001050:	4770      	bx	lr
 8001052:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8001056:	50c2      	str	r2, [r0, r3]
 8001058:	4770      	bx	lr
 800105a:	bf00      	nop

0800105c <OPAMP_LockConfig>:
 800105c:	2338      	movs	r3, #56	; 0x38
 800105e:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001062:	58c2      	ldr	r2, [r0, r3]
 8001064:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8001068:	50c2      	str	r2, [r0, r3]
 800106a:	4770      	bx	lr

0800106c <TIM_DeInit>:
 800106c:	b508      	push	{r3, lr}
 800106e:	f44f 5330 	mov.w	r3, #11264	; 0x2c00
 8001072:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001076:	4298      	cmp	r0, r3
 8001078:	d03f      	beq.n	80010fa <TIM_DeInit+0x8e>
 800107a:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 800107e:	d048      	beq.n	8001112 <TIM_DeInit+0xa6>
 8001080:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001084:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001088:	4298      	cmp	r0, r3
 800108a:	d04c      	beq.n	8001126 <TIM_DeInit+0xba>
 800108c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001090:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001094:	4298      	cmp	r0, r3
 8001096:	d050      	beq.n	800113a <TIM_DeInit+0xce>
 8001098:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800109c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80010a0:	4298      	cmp	r0, r3
 80010a2:	d054      	beq.n	800114e <TIM_DeInit+0xe2>
 80010a4:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80010a8:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80010ac:	4298      	cmp	r0, r3
 80010ae:	d058      	beq.n	8001162 <TIM_DeInit+0xf6>
 80010b0:	f44f 5350 	mov.w	r3, #13312	; 0x3400
 80010b4:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80010b8:	4298      	cmp	r0, r3
 80010ba:	d05c      	beq.n	8001176 <TIM_DeInit+0x10a>
 80010bc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 80010c0:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80010c4:	4298      	cmp	r0, r3
 80010c6:	d062      	beq.n	800118e <TIM_DeInit+0x122>
 80010c8:	f44f 4388 	mov.w	r3, #17408	; 0x4400
 80010cc:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80010d0:	4298      	cmp	r0, r3
 80010d2:	d068      	beq.n	80011a6 <TIM_DeInit+0x13a>
 80010d4:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 80010d8:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80010dc:	4298      	cmp	r0, r3
 80010de:	d000      	beq.n	80010e2 <TIM_DeInit+0x76>
 80010e0:	bd08      	pop	{r3, pc}
 80010e2:	2101      	movs	r1, #1
 80010e4:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80010e8:	f001 fdac 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 80010ec:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80010f0:	2100      	movs	r1, #0
 80010f2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80010f6:	f001 bda5 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 80010fa:	2101      	movs	r1, #1
 80010fc:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8001100:	f001 fda0 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 8001104:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8001108:	2100      	movs	r1, #0
 800110a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800110e:	f001 bd99 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 8001112:	2001      	movs	r0, #1
 8001114:	4601      	mov	r1, r0
 8001116:	f001 fda3 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 800111a:	2001      	movs	r0, #1
 800111c:	2100      	movs	r1, #0
 800111e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001122:	f001 bd9d 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001126:	2002      	movs	r0, #2
 8001128:	2101      	movs	r1, #1
 800112a:	f001 fd99 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 800112e:	2002      	movs	r0, #2
 8001130:	2100      	movs	r1, #0
 8001132:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001136:	f001 bd93 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 800113a:	2004      	movs	r0, #4
 800113c:	2101      	movs	r1, #1
 800113e:	f001 fd8f 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001142:	2004      	movs	r0, #4
 8001144:	2100      	movs	r1, #0
 8001146:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800114a:	f001 bd89 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 800114e:	2010      	movs	r0, #16
 8001150:	2101      	movs	r1, #1
 8001152:	f001 fd85 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001156:	2010      	movs	r0, #16
 8001158:	2100      	movs	r1, #0
 800115a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800115e:	f001 bd7f 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001162:	2020      	movs	r0, #32
 8001164:	2101      	movs	r1, #1
 8001166:	f001 fd7b 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 800116a:	2020      	movs	r0, #32
 800116c:	2100      	movs	r1, #0
 800116e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001172:	f001 bd75 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001176:	2101      	movs	r1, #1
 8001178:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 800117c:	f001 fd62 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 8001180:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 8001184:	2100      	movs	r1, #0
 8001186:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800118a:	f001 bd5b 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 800118e:	2101      	movs	r1, #1
 8001190:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 8001194:	f001 fd56 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 8001198:	f44f 3080 	mov.w	r0, #65536	; 0x10000
 800119c:	2100      	movs	r1, #0
 800119e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80011a2:	f001 bd4f 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 80011a6:	2101      	movs	r1, #1
 80011a8:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80011ac:	f001 fd4a 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 80011b0:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 80011b4:	2100      	movs	r1, #0
 80011b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80011ba:	f001 bd43 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 80011be:	bf00      	nop

080011c0 <TIM_TimeBaseInit>:
 80011c0:	f44f 5250 	mov.w	r2, #13312	; 0x3400
 80011c4:	f44f 5330 	mov.w	r3, #11264	; 0x2c00
 80011c8:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80011cc:	b470      	push	{r4, r5, r6}
 80011ce:	f2c4 0201 	movt	r2, #16385	; 0x4001
 80011d2:	8804      	ldrh	r4, [r0, #0]
 80011d4:	4298      	cmp	r0, r3
 80011d6:	bf18      	it	ne
 80011d8:	4290      	cmpne	r0, r2
 80011da:	b2a4      	uxth	r4, r4
 80011dc:	bf14      	ite	ne
 80011de:	2300      	movne	r3, #0
 80011e0:	2301      	moveq	r3, #1
 80011e2:	d008      	beq.n	80011f6 <TIM_TimeBaseInit+0x36>
 80011e4:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80011e8:	f2c4 0200 	movt	r2, #16384	; 0x4000
 80011ec:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80011f0:	bf18      	it	ne
 80011f2:	4290      	cmpne	r0, r2
 80011f4:	d136      	bne.n	8001264 <TIM_TimeBaseInit+0xa4>
 80011f6:	f64f 758f 	movw	r5, #65423	; 0xff8f
 80011fa:	884a      	ldrh	r2, [r1, #2]
 80011fc:	4025      	ands	r5, r4
 80011fe:	ea45 0402 	orr.w	r4, r5, r2
 8001202:	f44f 56a0 	mov.w	r6, #5120	; 0x1400
 8001206:	f44f 5580 	mov.w	r5, #4096	; 0x1000
 800120a:	f2c4 0500 	movt	r5, #16384	; 0x4000
 800120e:	f2c4 0600 	movt	r6, #16384	; 0x4000
 8001212:	42b0      	cmp	r0, r6
 8001214:	bf18      	it	ne
 8001216:	42a8      	cmpne	r0, r5
 8001218:	bf1f      	itttt	ne
 800121a:	890d      	ldrhne	r5, [r1, #8]
 800121c:	f64f 42ff 	movwne	r2, #64767	; 0xfcff
 8001220:	4022      	andne	r2, r4
 8001222:	ea42 0405 	orrne.w	r4, r2, r5
 8001226:	684d      	ldr	r5, [r1, #4]
 8001228:	880a      	ldrh	r2, [r1, #0]
 800122a:	8004      	strh	r4, [r0, #0]
 800122c:	62c5      	str	r5, [r0, #44]	; 0x2c
 800122e:	8502      	strh	r2, [r0, #40]	; 0x28
 8001230:	b95b      	cbnz	r3, 800124a <TIM_TimeBaseInit+0x8a>
 8001232:	f44f 4288 	mov.w	r2, #17408	; 0x4400
 8001236:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800123a:	f2c4 0201 	movt	r2, #16385	; 0x4001
 800123e:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001242:	4298      	cmp	r0, r3
 8001244:	bf18      	it	ne
 8001246:	4290      	cmpne	r0, r2
 8001248:	d105      	bne.n	8001256 <TIM_TimeBaseInit+0x96>
 800124a:	7a8b      	ldrb	r3, [r1, #10]
 800124c:	8603      	strh	r3, [r0, #48]	; 0x30
 800124e:	2301      	movs	r3, #1
 8001250:	6143      	str	r3, [r0, #20]
 8001252:	bc70      	pop	{r4, r5, r6}
 8001254:	4770      	bx	lr
 8001256:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 800125a:	f2c4 0301 	movt	r3, #16385	; 0x4001
 800125e:	4298      	cmp	r0, r3
 8001260:	d1f5      	bne.n	800124e <TIM_TimeBaseInit+0x8e>
 8001262:	e7f2      	b.n	800124a <TIM_TimeBaseInit+0x8a>
 8001264:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8001268:	f2c4 0200 	movt	r2, #16384	; 0x4000
 800126c:	4290      	cmp	r0, r2
 800126e:	d1c8      	bne.n	8001202 <TIM_TimeBaseInit+0x42>
 8001270:	e7c1      	b.n	80011f6 <TIM_TimeBaseInit+0x36>
 8001272:	bf00      	nop

08001274 <TIM_TimeBaseStructInit>:
 8001274:	2300      	movs	r3, #0
 8001276:	f04f 31ff 	mov.w	r1, #4294967295
 800127a:	6041      	str	r1, [r0, #4]
 800127c:	8003      	strh	r3, [r0, #0]
 800127e:	8103      	strh	r3, [r0, #8]
 8001280:	8043      	strh	r3, [r0, #2]
 8001282:	7283      	strb	r3, [r0, #10]
 8001284:	4770      	bx	lr
 8001286:	bf00      	nop

08001288 <TIM_PrescalerConfig>:
 8001288:	8501      	strh	r1, [r0, #40]	; 0x28
 800128a:	6142      	str	r2, [r0, #20]
 800128c:	4770      	bx	lr
 800128e:	bf00      	nop

08001290 <TIM_CounterModeConfig>:
 8001290:	8803      	ldrh	r3, [r0, #0]
 8001292:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001296:	041b      	lsls	r3, r3, #16
 8001298:	0c1b      	lsrs	r3, r3, #16
 800129a:	430b      	orrs	r3, r1
 800129c:	8003      	strh	r3, [r0, #0]
 800129e:	4770      	bx	lr

080012a0 <TIM_SetCounter>:
 80012a0:	6241      	str	r1, [r0, #36]	; 0x24
 80012a2:	4770      	bx	lr

080012a4 <TIM_SetAutoreload>:
 80012a4:	62c1      	str	r1, [r0, #44]	; 0x2c
 80012a6:	4770      	bx	lr

080012a8 <TIM_GetCounter>:
 80012a8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80012aa:	4770      	bx	lr

080012ac <TIM_GetPrescaler>:
 80012ac:	8d00      	ldrh	r0, [r0, #40]	; 0x28
 80012ae:	b280      	uxth	r0, r0
 80012b0:	4770      	bx	lr
 80012b2:	bf00      	nop

080012b4 <TIM_UpdateDisableConfig>:
 80012b4:	8803      	ldrh	r3, [r0, #0]
 80012b6:	b929      	cbnz	r1, 80012c4 <TIM_UpdateDisableConfig+0x10>
 80012b8:	f023 0302 	bic.w	r3, r3, #2
 80012bc:	041b      	lsls	r3, r3, #16
 80012be:	0c1b      	lsrs	r3, r3, #16
 80012c0:	8003      	strh	r3, [r0, #0]
 80012c2:	4770      	bx	lr
 80012c4:	b29b      	uxth	r3, r3
 80012c6:	f043 0302 	orr.w	r3, r3, #2
 80012ca:	8003      	strh	r3, [r0, #0]
 80012cc:	4770      	bx	lr
 80012ce:	bf00      	nop

080012d0 <TIM_UpdateRequestConfig>:
 80012d0:	8803      	ldrh	r3, [r0, #0]
 80012d2:	b929      	cbnz	r1, 80012e0 <TIM_UpdateRequestConfig+0x10>
 80012d4:	f023 0304 	bic.w	r3, r3, #4
 80012d8:	041b      	lsls	r3, r3, #16
 80012da:	0c1b      	lsrs	r3, r3, #16
 80012dc:	8003      	strh	r3, [r0, #0]
 80012de:	4770      	bx	lr
 80012e0:	b29b      	uxth	r3, r3
 80012e2:	f043 0304 	orr.w	r3, r3, #4
 80012e6:	8003      	strh	r3, [r0, #0]
 80012e8:	4770      	bx	lr
 80012ea:	bf00      	nop

080012ec <TIM_UIFRemap>:
 80012ec:	8803      	ldrh	r3, [r0, #0]
 80012ee:	b929      	cbnz	r1, 80012fc <TIM_UIFRemap+0x10>
 80012f0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80012f4:	041b      	lsls	r3, r3, #16
 80012f6:	0c1b      	lsrs	r3, r3, #16
 80012f8:	8003      	strh	r3, [r0, #0]
 80012fa:	4770      	bx	lr
 80012fc:	b29b      	uxth	r3, r3
 80012fe:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8001302:	8003      	strh	r3, [r0, #0]
 8001304:	4770      	bx	lr
 8001306:	bf00      	nop

08001308 <TIM_ARRPreloadConfig>:
 8001308:	8803      	ldrh	r3, [r0, #0]
 800130a:	b929      	cbnz	r1, 8001318 <TIM_ARRPreloadConfig+0x10>
 800130c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001310:	041b      	lsls	r3, r3, #16
 8001312:	0c1b      	lsrs	r3, r3, #16
 8001314:	8003      	strh	r3, [r0, #0]
 8001316:	4770      	bx	lr
 8001318:	b29b      	uxth	r3, r3
 800131a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800131e:	8003      	strh	r3, [r0, #0]
 8001320:	4770      	bx	lr
 8001322:	bf00      	nop

08001324 <TIM_SelectOnePulseMode>:
 8001324:	8803      	ldrh	r3, [r0, #0]
 8001326:	f023 0308 	bic.w	r3, r3, #8
 800132a:	041b      	lsls	r3, r3, #16
 800132c:	0c1b      	lsrs	r3, r3, #16
 800132e:	8003      	strh	r3, [r0, #0]
 8001330:	8803      	ldrh	r3, [r0, #0]
 8001332:	b29b      	uxth	r3, r3
 8001334:	430b      	orrs	r3, r1
 8001336:	8003      	strh	r3, [r0, #0]
 8001338:	4770      	bx	lr
 800133a:	bf00      	nop

0800133c <TIM_SetClockDivision>:
 800133c:	8803      	ldrh	r3, [r0, #0]
 800133e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001342:	041b      	lsls	r3, r3, #16
 8001344:	0c1b      	lsrs	r3, r3, #16
 8001346:	8003      	strh	r3, [r0, #0]
 8001348:	8803      	ldrh	r3, [r0, #0]
 800134a:	b29b      	uxth	r3, r3
 800134c:	430b      	orrs	r3, r1
 800134e:	8003      	strh	r3, [r0, #0]
 8001350:	4770      	bx	lr
 8001352:	bf00      	nop

08001354 <TIM_Cmd>:
 8001354:	8803      	ldrh	r3, [r0, #0]
 8001356:	b929      	cbnz	r1, 8001364 <TIM_Cmd+0x10>
 8001358:	f023 0301 	bic.w	r3, r3, #1
 800135c:	041b      	lsls	r3, r3, #16
 800135e:	0c1b      	lsrs	r3, r3, #16
 8001360:	8003      	strh	r3, [r0, #0]
 8001362:	4770      	bx	lr
 8001364:	b29b      	uxth	r3, r3
 8001366:	f043 0301 	orr.w	r3, r3, #1
 800136a:	8003      	strh	r3, [r0, #0]
 800136c:	4770      	bx	lr
 800136e:	bf00      	nop

08001370 <TIM_OC1Init>:
 8001370:	6a03      	ldr	r3, [r0, #32]
 8001372:	f023 0301 	bic.w	r3, r3, #1
 8001376:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 800137a:	f8b1 800c 	ldrh.w	r8, [r1, #12]
 800137e:	680e      	ldr	r6, [r1, #0]
 8001380:	888f      	ldrh	r7, [r1, #4]
 8001382:	6203      	str	r3, [r0, #32]
 8001384:	6a03      	ldr	r3, [r0, #32]
 8001386:	6842      	ldr	r2, [r0, #4]
 8001388:	6984      	ldr	r4, [r0, #24]
 800138a:	f44f 5550 	mov.w	r5, #13312	; 0x3400
 800138e:	f424 3c80 	bic.w	ip, r4, #65536	; 0x10000
 8001392:	f44f 5430 	mov.w	r4, #11264	; 0x2c00
 8001396:	f023 0302 	bic.w	r3, r3, #2
 800139a:	f2c4 0501 	movt	r5, #16385	; 0x4001
 800139e:	f2c4 0401 	movt	r4, #16385	; 0x4001
 80013a2:	f02c 0c73 	bic.w	ip, ip, #115	; 0x73
 80013a6:	ea48 0303 	orr.w	r3, r8, r3
 80013aa:	42a0      	cmp	r0, r4
 80013ac:	bf18      	it	ne
 80013ae:	42a8      	cmpne	r0, r5
 80013b0:	ea4c 0606 	orr.w	r6, ip, r6
 80013b4:	ea43 0307 	orr.w	r3, r3, r7
 80013b8:	d00b      	beq.n	80013d2 <TIM_OC1Init+0x62>
 80013ba:	f44f 4588 	mov.w	r5, #17408	; 0x4400
 80013be:	f44f 4480 	mov.w	r4, #16384	; 0x4000
 80013c2:	f2c4 0501 	movt	r5, #16385	; 0x4001
 80013c6:	f2c4 0401 	movt	r4, #16385	; 0x4001
 80013ca:	42a0      	cmp	r0, r4
 80013cc:	bf18      	it	ne
 80013ce:	42a8      	cmpne	r0, r5
 80013d0:	d117      	bne.n	8001402 <TIM_OC1Init+0x92>
 80013d2:	f8b1 c00e 	ldrh.w	ip, [r1, #14]
 80013d6:	8a0f      	ldrh	r7, [r1, #16]
 80013d8:	88cd      	ldrh	r5, [r1, #6]
 80013da:	8a4c      	ldrh	r4, [r1, #18]
 80013dc:	f023 0308 	bic.w	r3, r3, #8
 80013e0:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 80013e4:	ea43 030c 	orr.w	r3, r3, ip
 80013e8:	f023 0304 	bic.w	r3, r3, #4
 80013ec:	433a      	orrs	r2, r7
 80013ee:	432b      	orrs	r3, r5
 80013f0:	4322      	orrs	r2, r4
 80013f2:	6889      	ldr	r1, [r1, #8]
 80013f4:	6042      	str	r2, [r0, #4]
 80013f6:	6186      	str	r6, [r0, #24]
 80013f8:	6341      	str	r1, [r0, #52]	; 0x34
 80013fa:	6203      	str	r3, [r0, #32]
 80013fc:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 8001400:	4770      	bx	lr
 8001402:	f44f 4490 	mov.w	r4, #18432	; 0x4800
 8001406:	f2c4 0401 	movt	r4, #16385	; 0x4001
 800140a:	42a0      	cmp	r0, r4
 800140c:	d1f1      	bne.n	80013f2 <TIM_OC1Init+0x82>
 800140e:	e7e0      	b.n	80013d2 <TIM_OC1Init+0x62>

08001410 <TIM_OC2Init>:
 8001410:	6a02      	ldr	r2, [r0, #32]
 8001412:	898b      	ldrh	r3, [r1, #12]
 8001414:	f8d1 c000 	ldr.w	ip, [r1]
 8001418:	f022 0210 	bic.w	r2, r2, #16
 800141c:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 8001420:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8001424:	6202      	str	r2, [r0, #32]
 8001426:	6a07      	ldr	r7, [r0, #32]
 8001428:	6842      	ldr	r2, [r0, #4]
 800142a:	6986      	ldr	r6, [r0, #24]
 800142c:	f44f 5550 	mov.w	r5, #13312	; 0x3400
 8001430:	f44f 5430 	mov.w	r4, #11264	; 0x2c00
 8001434:	f026 7680 	bic.w	r6, r6, #16777216	; 0x1000000
 8001438:	f2c4 0501 	movt	r5, #16385	; 0x4001
 800143c:	f2c4 0401 	movt	r4, #16385	; 0x4001
 8001440:	f426 46e6 	bic.w	r6, r6, #29440	; 0x7300
 8001444:	f027 0720 	bic.w	r7, r7, #32
 8001448:	ea43 0308 	orr.w	r3, r3, r8
 800144c:	42a0      	cmp	r0, r4
 800144e:	bf18      	it	ne
 8001450:	42a8      	cmpne	r0, r5
 8001452:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
 8001456:	ea47 1303 	orr.w	r3, r7, r3, lsl #4
 800145a:	d111      	bne.n	8001480 <TIM_OC2Init+0x70>
 800145c:	f8b1 c00e 	ldrh.w	ip, [r1, #14]
 8001460:	8a0f      	ldrh	r7, [r1, #16]
 8001462:	8a4c      	ldrh	r4, [r1, #18]
 8001464:	88cd      	ldrh	r5, [r1, #6]
 8001466:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800146a:	ea43 130c 	orr.w	r3, r3, ip, lsl #4
 800146e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8001472:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8001476:	433c      	orrs	r4, r7
 8001478:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 800147c:	ea42 0284 	orr.w	r2, r2, r4, lsl #2
 8001480:	6889      	ldr	r1, [r1, #8]
 8001482:	6042      	str	r2, [r0, #4]
 8001484:	6186      	str	r6, [r0, #24]
 8001486:	6381      	str	r1, [r0, #56]	; 0x38
 8001488:	6203      	str	r3, [r0, #32]
 800148a:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 800148e:	4770      	bx	lr

08001490 <TIM_OC3Init>:
 8001490:	6a02      	ldr	r2, [r0, #32]
 8001492:	898b      	ldrh	r3, [r1, #12]
 8001494:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001498:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 800149c:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 80014a0:	680e      	ldr	r6, [r1, #0]
 80014a2:	6202      	str	r2, [r0, #32]
 80014a4:	6a07      	ldr	r7, [r0, #32]
 80014a6:	6842      	ldr	r2, [r0, #4]
 80014a8:	f8d0 c01c 	ldr.w	ip, [r0, #28]
 80014ac:	f44f 5550 	mov.w	r5, #13312	; 0x3400
 80014b0:	f44f 5430 	mov.w	r4, #11264	; 0x2c00
 80014b4:	f2c4 0501 	movt	r5, #16385	; 0x4001
 80014b8:	f2c4 0401 	movt	r4, #16385	; 0x4001
 80014bc:	f02c 0c73 	bic.w	ip, ip, #115	; 0x73
 80014c0:	f427 7700 	bic.w	r7, r7, #512	; 0x200
 80014c4:	ea43 0308 	orr.w	r3, r3, r8
 80014c8:	42a0      	cmp	r0, r4
 80014ca:	bf18      	it	ne
 80014cc:	42a8      	cmpne	r0, r5
 80014ce:	ea4c 0606 	orr.w	r6, ip, r6
 80014d2:	ea47 2303 	orr.w	r3, r7, r3, lsl #8
 80014d6:	d111      	bne.n	80014fc <TIM_OC3Init+0x6c>
 80014d8:	f8b1 c00e 	ldrh.w	ip, [r1, #14]
 80014dc:	8a0f      	ldrh	r7, [r1, #16]
 80014de:	8a4c      	ldrh	r4, [r1, #18]
 80014e0:	88cd      	ldrh	r5, [r1, #6]
 80014e2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80014e6:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
 80014ea:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80014ee:	f422 5240 	bic.w	r2, r2, #12288	; 0x3000
 80014f2:	433c      	orrs	r4, r7
 80014f4:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 80014f8:	ea42 1204 	orr.w	r2, r2, r4, lsl #4
 80014fc:	6889      	ldr	r1, [r1, #8]
 80014fe:	6042      	str	r2, [r0, #4]
 8001500:	61c6      	str	r6, [r0, #28]
 8001502:	63c1      	str	r1, [r0, #60]	; 0x3c
 8001504:	6203      	str	r3, [r0, #32]
 8001506:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 800150a:	4770      	bx	lr

0800150c <TIM_OC4Init>:
 800150c:	6a03      	ldr	r3, [r0, #32]
 800150e:	f8d1 c000 	ldr.w	ip, [r1]
 8001512:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 8001516:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800151a:	f44f 5450 	mov.w	r4, #13312	; 0x3400
 800151e:	f44f 5230 	mov.w	r2, #11264	; 0x2c00
 8001522:	898d      	ldrh	r5, [r1, #12]
 8001524:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8001528:	6203      	str	r3, [r0, #32]
 800152a:	f2c4 0201 	movt	r2, #16385	; 0x4001
 800152e:	f2c4 0401 	movt	r4, #16385	; 0x4001
 8001532:	6a07      	ldr	r7, [r0, #32]
 8001534:	6843      	ldr	r3, [r0, #4]
 8001536:	69c6      	ldr	r6, [r0, #28]
 8001538:	4290      	cmp	r0, r2
 800153a:	bf18      	it	ne
 800153c:	42a0      	cmpne	r0, r4
 800153e:	bf02      	ittt	eq
 8001540:	8a0a      	ldrheq	r2, [r1, #16]
 8001542:	f423 4380 	biceq.w	r3, r3, #16384	; 0x4000
 8001546:	ea43 1382 	orreq.w	r3, r3, r2, lsl #6
 800154a:	f426 46e6 	bic.w	r6, r6, #29440	; 0x7300
 800154e:	688a      	ldr	r2, [r1, #8]
 8001550:	6043      	str	r3, [r0, #4]
 8001552:	f427 5700 	bic.w	r7, r7, #8192	; 0x2000
 8001556:	ea45 0508 	orr.w	r5, r5, r8
 800155a:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
 800155e:	ea47 3505 	orr.w	r5, r7, r5, lsl #12
 8001562:	61c6      	str	r6, [r0, #28]
 8001564:	6402      	str	r2, [r0, #64]	; 0x40
 8001566:	6205      	str	r5, [r0, #32]
 8001568:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 800156c:	4770      	bx	lr
 800156e:	bf00      	nop

08001570 <TIM_OC5Init>:
 8001570:	6a03      	ldr	r3, [r0, #32]
 8001572:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 8001576:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800157a:	f44f 5450 	mov.w	r4, #13312	; 0x3400
 800157e:	f44f 5230 	mov.w	r2, #11264	; 0x2c00
 8001582:	898d      	ldrh	r5, [r1, #12]
 8001584:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 8001588:	680e      	ldr	r6, [r1, #0]
 800158a:	6203      	str	r3, [r0, #32]
 800158c:	f2c4 0201 	movt	r2, #16385	; 0x4001
 8001590:	f2c4 0401 	movt	r4, #16385	; 0x4001
 8001594:	6a07      	ldr	r7, [r0, #32]
 8001596:	6843      	ldr	r3, [r0, #4]
 8001598:	f8d0 c054 	ldr.w	ip, [r0, #84]	; 0x54
 800159c:	4290      	cmp	r0, r2
 800159e:	bf18      	it	ne
 80015a0:	42a0      	cmpne	r0, r4
 80015a2:	bf02      	ittt	eq
 80015a4:	8a0a      	ldrheq	r2, [r1, #16]
 80015a6:	f423 3380 	biceq.w	r3, r3, #65536	; 0x10000
 80015aa:	ea43 4302 	orreq.w	r3, r3, r2, lsl #16
 80015ae:	f02c 0c70 	bic.w	ip, ip, #112	; 0x70
 80015b2:	688a      	ldr	r2, [r1, #8]
 80015b4:	6043      	str	r3, [r0, #4]
 80015b6:	f427 3700 	bic.w	r7, r7, #131072	; 0x20000
 80015ba:	ea45 0508 	orr.w	r5, r5, r8
 80015be:	ea4c 0606 	orr.w	r6, ip, r6
 80015c2:	ea47 4505 	orr.w	r5, r7, r5, lsl #16
 80015c6:	6546      	str	r6, [r0, #84]	; 0x54
 80015c8:	6582      	str	r2, [r0, #88]	; 0x58
 80015ca:	6205      	str	r5, [r0, #32]
 80015cc:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 80015d0:	4770      	bx	lr
 80015d2:	bf00      	nop

080015d4 <TIM_OC6Init>:
 80015d4:	6a03      	ldr	r3, [r0, #32]
 80015d6:	f8d1 c000 	ldr.w	ip, [r1]
 80015da:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80015de:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 80015e2:	898d      	ldrh	r5, [r1, #12]
 80015e4:	f8b1 8004 	ldrh.w	r8, [r1, #4]
 80015e8:	6203      	str	r3, [r0, #32]
 80015ea:	6a07      	ldr	r7, [r0, #32]
 80015ec:	6843      	ldr	r3, [r0, #4]
 80015ee:	6d46      	ldr	r6, [r0, #84]	; 0x54
 80015f0:	f44f 5450 	mov.w	r4, #13312	; 0x3400
 80015f4:	f44f 5230 	mov.w	r2, #11264	; 0x2c00
 80015f8:	f2c4 0201 	movt	r2, #16385	; 0x4001
 80015fc:	f2c4 0401 	movt	r4, #16385	; 0x4001
 8001600:	4290      	cmp	r0, r2
 8001602:	bf18      	it	ne
 8001604:	42a0      	cmpne	r0, r4
 8001606:	f426 46e0 	bic.w	r6, r6, #28672	; 0x7000
 800160a:	688a      	ldr	r2, [r1, #8]
 800160c:	f427 1700 	bic.w	r7, r7, #2097152	; 0x200000
 8001610:	ea45 0508 	orr.w	r5, r5, r8
 8001614:	ea46 260c 	orr.w	r6, r6, ip, lsl #8
 8001618:	ea47 5505 	orr.w	r5, r7, r5, lsl #20
 800161c:	bf08      	it	eq
 800161e:	f423 3300 	biceq.w	r3, r3, #131072	; 0x20000
 8001622:	6043      	str	r3, [r0, #4]
 8001624:	6546      	str	r6, [r0, #84]	; 0x54
 8001626:	65c2      	str	r2, [r0, #92]	; 0x5c
 8001628:	6205      	str	r5, [r0, #32]
 800162a:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 800162e:	4770      	bx	lr

08001630 <TIM_SelectGC5C1>:
 8001630:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8001632:	b919      	cbnz	r1, 800163c <TIM_SelectGC5C1+0xc>
 8001634:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 8001638:	6583      	str	r3, [r0, #88]	; 0x58
 800163a:	4770      	bx	lr
 800163c:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 8001640:	6583      	str	r3, [r0, #88]	; 0x58
 8001642:	4770      	bx	lr

08001644 <TIM_SelectGC5C2>:
 8001644:	6d83      	ldr	r3, [r0, #88]	; 0x58
 8001646:	b919      	cbnz	r1, 8001650 <TIM_SelectGC5C2+0xc>
 8001648:	f023 4380 	bic.w	r3, r3, #1073741824	; 0x40000000
 800164c:	6583      	str	r3, [r0, #88]	; 0x58
 800164e:	4770      	bx	lr
 8001650:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8001654:	6583      	str	r3, [r0, #88]	; 0x58
 8001656:	4770      	bx	lr

08001658 <TIM_SelectGC5C3>:
 8001658:	6d83      	ldr	r3, [r0, #88]	; 0x58
 800165a:	b919      	cbnz	r1, 8001664 <TIM_SelectGC5C3+0xc>
 800165c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8001660:	6583      	str	r3, [r0, #88]	; 0x58
 8001662:	4770      	bx	lr
 8001664:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8001668:	6583      	str	r3, [r0, #88]	; 0x58
 800166a:	4770      	bx	lr

0800166c <TIM_OCStructInit>:
 800166c:	2300      	movs	r3, #0
 800166e:	6003      	str	r3, [r0, #0]
 8001670:	8083      	strh	r3, [r0, #4]
 8001672:	80c3      	strh	r3, [r0, #6]
 8001674:	6083      	str	r3, [r0, #8]
 8001676:	8183      	strh	r3, [r0, #12]
 8001678:	81c3      	strh	r3, [r0, #14]
 800167a:	8203      	strh	r3, [r0, #16]
 800167c:	8243      	strh	r3, [r0, #18]
 800167e:	4770      	bx	lr

08001680 <TIM_SelectOCxM>:
 8001680:	2301      	movs	r3, #1
 8001682:	408b      	lsls	r3, r1
 8001684:	b410      	push	{r4}
 8001686:	43db      	mvns	r3, r3
 8001688:	6a04      	ldr	r4, [r0, #32]
 800168a:	b29b      	uxth	r3, r3
 800168c:	4023      	ands	r3, r4
 800168e:	6203      	str	r3, [r0, #32]
 8001690:	3018      	adds	r0, #24
 8001692:	2900      	cmp	r1, #0
 8001694:	bf18      	it	ne
 8001696:	2908      	cmpne	r1, #8
 8001698:	d00e      	beq.n	80016b8 <TIM_SelectOCxM+0x38>
 800169a:	3904      	subs	r1, #4
 800169c:	0849      	lsrs	r1, r1, #1
 800169e:	0212      	lsls	r2, r2, #8
 80016a0:	580b      	ldr	r3, [r1, r0]
 80016a2:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80016a6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80016aa:	500b      	str	r3, [r1, r0]
 80016ac:	580b      	ldr	r3, [r1, r0]
 80016ae:	b292      	uxth	r2, r2
 80016b0:	431a      	orrs	r2, r3
 80016b2:	500a      	str	r2, [r1, r0]
 80016b4:	bc10      	pop	{r4}
 80016b6:	4770      	bx	lr
 80016b8:	0849      	lsrs	r1, r1, #1
 80016ba:	580b      	ldr	r3, [r1, r0]
 80016bc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80016c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80016c4:	500b      	str	r3, [r1, r0]
 80016c6:	580b      	ldr	r3, [r1, r0]
 80016c8:	431a      	orrs	r2, r3
 80016ca:	500a      	str	r2, [r1, r0]
 80016cc:	e7f2      	b.n	80016b4 <TIM_SelectOCxM+0x34>
 80016ce:	bf00      	nop

080016d0 <TIM_SetCompare1>:
 80016d0:	6341      	str	r1, [r0, #52]	; 0x34
 80016d2:	4770      	bx	lr

080016d4 <TIM_SetCompare2>:
 80016d4:	6381      	str	r1, [r0, #56]	; 0x38
 80016d6:	4770      	bx	lr

080016d8 <TIM_SetCompare3>:
 80016d8:	63c1      	str	r1, [r0, #60]	; 0x3c
 80016da:	4770      	bx	lr

080016dc <TIM_SetCompare4>:
 80016dc:	6401      	str	r1, [r0, #64]	; 0x40
 80016de:	4770      	bx	lr

080016e0 <TIM_SetCompare5>:
 80016e0:	6581      	str	r1, [r0, #88]	; 0x58
 80016e2:	4770      	bx	lr

080016e4 <TIM_SetCompare6>:
 80016e4:	65c1      	str	r1, [r0, #92]	; 0x5c
 80016e6:	4770      	bx	lr

080016e8 <TIM_ForcedOC1Config>:
 80016e8:	6983      	ldr	r3, [r0, #24]
 80016ea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80016ee:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80016f2:	430b      	orrs	r3, r1
 80016f4:	6183      	str	r3, [r0, #24]
 80016f6:	4770      	bx	lr

080016f8 <TIM_ForcedOC2Config>:
 80016f8:	6983      	ldr	r3, [r0, #24]
 80016fa:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80016fe:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8001702:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001706:	6183      	str	r3, [r0, #24]
 8001708:	4770      	bx	lr
 800170a:	bf00      	nop

0800170c <TIM_ForcedOC3Config>:
 800170c:	69c3      	ldr	r3, [r0, #28]
 800170e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8001712:	430b      	orrs	r3, r1
 8001714:	61c3      	str	r3, [r0, #28]
 8001716:	4770      	bx	lr

08001718 <TIM_ForcedOC4Config>:
 8001718:	69c3      	ldr	r3, [r0, #28]
 800171a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800171e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001722:	61c3      	str	r3, [r0, #28]
 8001724:	4770      	bx	lr
 8001726:	bf00      	nop

08001728 <TIM_ForcedOC5Config>:
 8001728:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800172a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800172e:	430b      	orrs	r3, r1
 8001730:	6543      	str	r3, [r0, #84]	; 0x54
 8001732:	4770      	bx	lr

08001734 <TIM_ForcedOC6Config>:
 8001734:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8001736:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800173a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800173e:	6543      	str	r3, [r0, #84]	; 0x54
 8001740:	4770      	bx	lr
 8001742:	bf00      	nop

08001744 <TIM_OC1PreloadConfig>:
 8001744:	6983      	ldr	r3, [r0, #24]
 8001746:	f023 0308 	bic.w	r3, r3, #8
 800174a:	430b      	orrs	r3, r1
 800174c:	6183      	str	r3, [r0, #24]
 800174e:	4770      	bx	lr

08001750 <TIM_OC2PreloadConfig>:
 8001750:	6983      	ldr	r3, [r0, #24]
 8001752:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001756:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800175a:	6183      	str	r3, [r0, #24]
 800175c:	4770      	bx	lr
 800175e:	bf00      	nop

08001760 <TIM_OC3PreloadConfig>:
 8001760:	69c3      	ldr	r3, [r0, #28]
 8001762:	f023 0308 	bic.w	r3, r3, #8
 8001766:	430b      	orrs	r3, r1
 8001768:	61c3      	str	r3, [r0, #28]
 800176a:	4770      	bx	lr

0800176c <TIM_OC4PreloadConfig>:
 800176c:	69c3      	ldr	r3, [r0, #28]
 800176e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001772:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001776:	61c3      	str	r3, [r0, #28]
 8001778:	4770      	bx	lr
 800177a:	bf00      	nop

0800177c <TIM_OC5PreloadConfig>:
 800177c:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800177e:	f023 0308 	bic.w	r3, r3, #8
 8001782:	430b      	orrs	r3, r1
 8001784:	6543      	str	r3, [r0, #84]	; 0x54
 8001786:	4770      	bx	lr

08001788 <TIM_OC6PreloadConfig>:
 8001788:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800178a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800178e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001792:	6543      	str	r3, [r0, #84]	; 0x54
 8001794:	4770      	bx	lr
 8001796:	bf00      	nop

08001798 <TIM_OC1FastConfig>:
 8001798:	6983      	ldr	r3, [r0, #24]
 800179a:	f023 0304 	bic.w	r3, r3, #4
 800179e:	430b      	orrs	r3, r1
 80017a0:	6183      	str	r3, [r0, #24]
 80017a2:	4770      	bx	lr

080017a4 <TIM_OC2FastConfig>:
 80017a4:	6983      	ldr	r3, [r0, #24]
 80017a6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80017aa:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80017ae:	6183      	str	r3, [r0, #24]
 80017b0:	4770      	bx	lr
 80017b2:	bf00      	nop

080017b4 <TIM_OC3FastConfig>:
 80017b4:	69c3      	ldr	r3, [r0, #28]
 80017b6:	f023 0304 	bic.w	r3, r3, #4
 80017ba:	430b      	orrs	r3, r1
 80017bc:	61c3      	str	r3, [r0, #28]
 80017be:	4770      	bx	lr

080017c0 <TIM_OC4FastConfig>:
 80017c0:	69c3      	ldr	r3, [r0, #28]
 80017c2:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80017c6:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80017ca:	61c3      	str	r3, [r0, #28]
 80017cc:	4770      	bx	lr
 80017ce:	bf00      	nop

080017d0 <TIM_ClearOC1Ref>:
 80017d0:	6983      	ldr	r3, [r0, #24]
 80017d2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80017d6:	430b      	orrs	r3, r1
 80017d8:	6183      	str	r3, [r0, #24]
 80017da:	4770      	bx	lr

080017dc <TIM_ClearOC2Ref>:
 80017dc:	6983      	ldr	r3, [r0, #24]
 80017de:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80017e2:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80017e6:	6183      	str	r3, [r0, #24]
 80017e8:	4770      	bx	lr
 80017ea:	bf00      	nop

080017ec <TIM_ClearOC3Ref>:
 80017ec:	69c3      	ldr	r3, [r0, #28]
 80017ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80017f2:	430b      	orrs	r3, r1
 80017f4:	61c3      	str	r3, [r0, #28]
 80017f6:	4770      	bx	lr

080017f8 <TIM_ClearOC4Ref>:
 80017f8:	69c3      	ldr	r3, [r0, #28]
 80017fa:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80017fe:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001802:	61c3      	str	r3, [r0, #28]
 8001804:	4770      	bx	lr
 8001806:	bf00      	nop

08001808 <TIM_ClearOC5Ref>:
 8001808:	6d43      	ldr	r3, [r0, #84]	; 0x54
 800180a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800180e:	430b      	orrs	r3, r1
 8001810:	6543      	str	r3, [r0, #84]	; 0x54
 8001812:	4770      	bx	lr

08001814 <TIM_ClearOC6Ref>:
 8001814:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8001816:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800181a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800181e:	6543      	str	r3, [r0, #84]	; 0x54
 8001820:	4770      	bx	lr
 8001822:	bf00      	nop

08001824 <TIM_SelectOCREFClear>:
 8001824:	6882      	ldr	r2, [r0, #8]
 8001826:	f64f 73f7 	movw	r3, #65527	; 0xfff7
 800182a:	4013      	ands	r3, r2
 800182c:	6083      	str	r3, [r0, #8]
 800182e:	6883      	ldr	r3, [r0, #8]
 8001830:	430b      	orrs	r3, r1
 8001832:	6083      	str	r3, [r0, #8]
 8001834:	4770      	bx	lr
 8001836:	bf00      	nop

08001838 <TIM_OC1PolarityConfig>:
 8001838:	6a03      	ldr	r3, [r0, #32]
 800183a:	f023 0302 	bic.w	r3, r3, #2
 800183e:	430b      	orrs	r3, r1
 8001840:	6203      	str	r3, [r0, #32]
 8001842:	4770      	bx	lr

08001844 <TIM_OC1NPolarityConfig>:
 8001844:	6a03      	ldr	r3, [r0, #32]
 8001846:	f023 0308 	bic.w	r3, r3, #8
 800184a:	430b      	orrs	r3, r1
 800184c:	6203      	str	r3, [r0, #32]
 800184e:	4770      	bx	lr

08001850 <TIM_OC2PolarityConfig>:
 8001850:	6a03      	ldr	r3, [r0, #32]
 8001852:	f023 0320 	bic.w	r3, r3, #32
 8001856:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 800185a:	6203      	str	r3, [r0, #32]
 800185c:	4770      	bx	lr
 800185e:	bf00      	nop

08001860 <TIM_OC2NPolarityConfig>:
 8001860:	6a03      	ldr	r3, [r0, #32]
 8001862:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8001866:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
 800186a:	6203      	str	r3, [r0, #32]
 800186c:	4770      	bx	lr
 800186e:	bf00      	nop

08001870 <TIM_OC3PolarityConfig>:
 8001870:	6a03      	ldr	r3, [r0, #32]
 8001872:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8001876:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800187a:	6203      	str	r3, [r0, #32]
 800187c:	4770      	bx	lr
 800187e:	bf00      	nop

08001880 <TIM_OC3NPolarityConfig>:
 8001880:	6a03      	ldr	r3, [r0, #32]
 8001882:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8001886:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800188a:	6203      	str	r3, [r0, #32]
 800188c:	4770      	bx	lr
 800188e:	bf00      	nop

08001890 <TIM_OC4PolarityConfig>:
 8001890:	6a03      	ldr	r3, [r0, #32]
 8001892:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001896:	ea43 3301 	orr.w	r3, r3, r1, lsl #12
 800189a:	6203      	str	r3, [r0, #32]
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop

080018a0 <TIM_OC5PolarityConfig>:
 80018a0:	6a03      	ldr	r3, [r0, #32]
 80018a2:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 80018a6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80018aa:	6203      	str	r3, [r0, #32]
 80018ac:	4770      	bx	lr
 80018ae:	bf00      	nop

080018b0 <TIM_OC6PolarityConfig>:
 80018b0:	6a03      	ldr	r3, [r0, #32]
 80018b2:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 80018b6:	ea43 5301 	orr.w	r3, r3, r1, lsl #20
 80018ba:	6203      	str	r3, [r0, #32]
 80018bc:	4770      	bx	lr
 80018be:	bf00      	nop

080018c0 <TIM_CCxCmd>:
 80018c0:	b410      	push	{r4}
 80018c2:	2301      	movs	r3, #1
 80018c4:	6a04      	ldr	r4, [r0, #32]
 80018c6:	408b      	lsls	r3, r1
 80018c8:	ea24 0303 	bic.w	r3, r4, r3
 80018cc:	6203      	str	r3, [r0, #32]
 80018ce:	6a03      	ldr	r3, [r0, #32]
 80018d0:	fa12 f101 	lsls.w	r1, r2, r1
 80018d4:	430b      	orrs	r3, r1
 80018d6:	6203      	str	r3, [r0, #32]
 80018d8:	bc10      	pop	{r4}
 80018da:	4770      	bx	lr

080018dc <TIM_CCxNCmd>:
 80018dc:	b410      	push	{r4}
 80018de:	2304      	movs	r3, #4
 80018e0:	6a04      	ldr	r4, [r0, #32]
 80018e2:	408b      	lsls	r3, r1
 80018e4:	ea24 0303 	bic.w	r3, r4, r3
 80018e8:	6203      	str	r3, [r0, #32]
 80018ea:	6a03      	ldr	r3, [r0, #32]
 80018ec:	fa12 f101 	lsls.w	r1, r2, r1
 80018f0:	430b      	orrs	r3, r1
 80018f2:	6203      	str	r3, [r0, #32]
 80018f4:	bc10      	pop	{r4}
 80018f6:	4770      	bx	lr

080018f8 <TIM_ICInit>:
 80018f8:	880b      	ldrh	r3, [r1, #0]
 80018fa:	b4f0      	push	{r4, r5, r6, r7}
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d02e      	beq.n	800195e <TIM_ICInit+0x66>
 8001900:	2b04      	cmp	r3, #4
 8001902:	d04a      	beq.n	800199a <TIM_ICInit+0xa2>
 8001904:	2b08      	cmp	r3, #8
 8001906:	6a03      	ldr	r3, [r0, #32]
 8001908:	d06c      	beq.n	80019e4 <TIM_ICInit+0xec>
 800190a:	884e      	ldrh	r6, [r1, #2]
 800190c:	f8b1 c004 	ldrh.w	ip, [r1, #4]
 8001910:	890f      	ldrh	r7, [r1, #8]
 8001912:	88cc      	ldrh	r4, [r1, #6]
 8001914:	f64e 71ff 	movw	r1, #61439	; 0xefff
 8001918:	4019      	ands	r1, r3
 800191a:	6201      	str	r1, [r0, #32]
 800191c:	69c5      	ldr	r5, [r0, #28]
 800191e:	6a03      	ldr	r3, [r0, #32]
 8001920:	f645 72ff 	movw	r2, #24575	; 0x5fff
 8001924:	401a      	ands	r2, r3
 8001926:	ea4f 210c 	mov.w	r1, ip, lsl #8
 800192a:	f640 43ff 	movw	r3, #3327	; 0xcff
 800192e:	ea41 3107 	orr.w	r1, r1, r7, lsl #12
 8001932:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
 8001936:	402b      	ands	r3, r5
 8001938:	b289      	uxth	r1, r1
 800193a:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 800193e:	430b      	orrs	r3, r1
 8001940:	b292      	uxth	r2, r2
 8001942:	61c3      	str	r3, [r0, #28]
 8001944:	6202      	str	r2, [r0, #32]
 8001946:	69c2      	ldr	r2, [r0, #28]
 8001948:	f24f 33ff 	movw	r3, #62463	; 0xf3ff
 800194c:	4013      	ands	r3, r2
 800194e:	61c3      	str	r3, [r0, #28]
 8001950:	69c2      	ldr	r2, [r0, #28]
 8001952:	0223      	lsls	r3, r4, #8
 8001954:	b29b      	uxth	r3, r3
 8001956:	4313      	orrs	r3, r2
 8001958:	61c3      	str	r3, [r0, #28]
 800195a:	bcf0      	pop	{r4, r5, r6, r7}
 800195c:	4770      	bx	lr
 800195e:	6a04      	ldr	r4, [r0, #32]
 8001960:	884b      	ldrh	r3, [r1, #2]
 8001962:	888e      	ldrh	r6, [r1, #4]
 8001964:	890d      	ldrh	r5, [r1, #8]
 8001966:	88ca      	ldrh	r2, [r1, #6]
 8001968:	f024 0101 	bic.w	r1, r4, #1
 800196c:	6201      	str	r1, [r0, #32]
 800196e:	6981      	ldr	r1, [r0, #24]
 8001970:	6a04      	ldr	r4, [r0, #32]
 8001972:	f021 01f3 	bic.w	r1, r1, #243	; 0xf3
 8001976:	4331      	orrs	r1, r6
 8001978:	f024 040a 	bic.w	r4, r4, #10
 800197c:	f043 0301 	orr.w	r3, r3, #1
 8001980:	4323      	orrs	r3, r4
 8001982:	ea41 1105 	orr.w	r1, r1, r5, lsl #4
 8001986:	6181      	str	r1, [r0, #24]
 8001988:	6203      	str	r3, [r0, #32]
 800198a:	6983      	ldr	r3, [r0, #24]
 800198c:	f023 030c 	bic.w	r3, r3, #12
 8001990:	6183      	str	r3, [r0, #24]
 8001992:	6983      	ldr	r3, [r0, #24]
 8001994:	4313      	orrs	r3, r2
 8001996:	6183      	str	r3, [r0, #24]
 8001998:	e7df      	b.n	800195a <TIM_ICInit+0x62>
 800199a:	6a05      	ldr	r5, [r0, #32]
 800199c:	884c      	ldrh	r4, [r1, #2]
 800199e:	888f      	ldrh	r7, [r1, #4]
 80019a0:	88ca      	ldrh	r2, [r1, #6]
 80019a2:	f8b1 c008 	ldrh.w	ip, [r1, #8]
 80019a6:	f64f 73ef 	movw	r3, #65519	; 0xffef
 80019aa:	402b      	ands	r3, r5
 80019ac:	6203      	str	r3, [r0, #32]
 80019ae:	6985      	ldr	r5, [r0, #24]
 80019b0:	6a06      	ldr	r6, [r0, #32]
 80019b2:	0124      	lsls	r4, r4, #4
 80019b4:	023f      	lsls	r7, r7, #8
 80019b6:	f64f 735f 	movw	r3, #65375	; 0xff5f
 80019ba:	f044 0410 	orr.w	r4, r4, #16
 80019be:	f425 4573 	bic.w	r5, r5, #62208	; 0xf300
 80019c2:	ea47 310c 	orr.w	r1, r7, ip, lsl #12
 80019c6:	4033      	ands	r3, r6
 80019c8:	b2a4      	uxth	r4, r4
 80019ca:	4323      	orrs	r3, r4
 80019cc:	4329      	orrs	r1, r5
 80019ce:	6181      	str	r1, [r0, #24]
 80019d0:	6203      	str	r3, [r0, #32]
 80019d2:	6983      	ldr	r3, [r0, #24]
 80019d4:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80019d8:	6183      	str	r3, [r0, #24]
 80019da:	6983      	ldr	r3, [r0, #24]
 80019dc:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80019e0:	6183      	str	r3, [r0, #24]
 80019e2:	e7ba      	b.n	800195a <TIM_ICInit+0x62>
 80019e4:	884d      	ldrh	r5, [r1, #2]
 80019e6:	888e      	ldrh	r6, [r1, #4]
 80019e8:	890f      	ldrh	r7, [r1, #8]
 80019ea:	88cc      	ldrh	r4, [r1, #6]
 80019ec:	f64f 61ff 	movw	r1, #65279	; 0xfeff
 80019f0:	4019      	ands	r1, r3
 80019f2:	6201      	str	r1, [r0, #32]
 80019f4:	69c1      	ldr	r1, [r0, #28]
 80019f6:	f8d0 c020 	ldr.w	ip, [r0, #32]
 80019fa:	f24f 52ff 	movw	r2, #62975	; 0xf5ff
 80019fe:	f64f 730c 	movw	r3, #65292	; 0xff0c
 8001a02:	ea0c 0202 	and.w	r2, ip, r2
 8001a06:	400b      	ands	r3, r1
 8001a08:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8001a0c:	ea46 1107 	orr.w	r1, r6, r7, lsl #4
 8001a10:	430b      	orrs	r3, r1
 8001a12:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a16:	b29b      	uxth	r3, r3
 8001a18:	b292      	uxth	r2, r2
 8001a1a:	61c3      	str	r3, [r0, #28]
 8001a1c:	6202      	str	r2, [r0, #32]
 8001a1e:	69c2      	ldr	r2, [r0, #28]
 8001a20:	f64f 73f3 	movw	r3, #65523	; 0xfff3
 8001a24:	4013      	ands	r3, r2
 8001a26:	61c3      	str	r3, [r0, #28]
 8001a28:	69c3      	ldr	r3, [r0, #28]
 8001a2a:	4323      	orrs	r3, r4
 8001a2c:	61c3      	str	r3, [r0, #28]
 8001a2e:	e794      	b.n	800195a <TIM_ICInit+0x62>

08001a30 <TIM_ICStructInit>:
 8001a30:	2300      	movs	r3, #0
 8001a32:	2201      	movs	r2, #1
 8001a34:	8003      	strh	r3, [r0, #0]
 8001a36:	8043      	strh	r3, [r0, #2]
 8001a38:	8082      	strh	r2, [r0, #4]
 8001a3a:	80c3      	strh	r3, [r0, #6]
 8001a3c:	8103      	strh	r3, [r0, #8]
 8001a3e:	4770      	bx	lr

08001a40 <TIM_PWMIConfig>:
 8001a40:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
 8001a44:	884a      	ldrh	r2, [r1, #2]
 8001a46:	888b      	ldrh	r3, [r1, #4]
 8001a48:	880e      	ldrh	r6, [r1, #0]
 8001a4a:	2a00      	cmp	r2, #0
 8001a4c:	bf0c      	ite	eq
 8001a4e:	2502      	moveq	r5, #2
 8001a50:	2500      	movne	r5, #0
 8001a52:	2b01      	cmp	r3, #1
 8001a54:	bf14      	ite	ne
 8001a56:	2401      	movne	r4, #1
 8001a58:	2402      	moveq	r4, #2
 8001a5a:	2e00      	cmp	r6, #0
 8001a5c:	d042      	beq.n	8001ae4 <TIM_PWMIConfig+0xa4>
 8001a5e:	f8d0 c020 	ldr.w	ip, [r0, #32]
 8001a62:	890f      	ldrh	r7, [r1, #8]
 8001a64:	88ce      	ldrh	r6, [r1, #6]
 8001a66:	f64f 71ef 	movw	r1, #65519	; 0xffef
 8001a6a:	ea0c 0101 	and.w	r1, ip, r1
 8001a6e:	6201      	str	r1, [r0, #32]
 8001a70:	f8d0 c018 	ldr.w	ip, [r0, #24]
 8001a74:	f8d0 8020 	ldr.w	r8, [r0, #32]
 8001a78:	0112      	lsls	r2, r2, #4
 8001a7a:	021b      	lsls	r3, r3, #8
 8001a7c:	f64f 715f 	movw	r1, #65375	; 0xff5f
 8001a80:	f042 0210 	orr.w	r2, r2, #16
 8001a84:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8001a88:	b292      	uxth	r2, r2
 8001a8a:	f42c 4c73 	bic.w	ip, ip, #62208	; 0xf300
 8001a8e:	ea08 0101 	and.w	r1, r8, r1
 8001a92:	ea43 030c 	orr.w	r3, r3, ip
 8001a96:	4311      	orrs	r1, r2
 8001a98:	6183      	str	r3, [r0, #24]
 8001a9a:	6201      	str	r1, [r0, #32]
 8001a9c:	6983      	ldr	r3, [r0, #24]
 8001a9e:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8001aa2:	6183      	str	r3, [r0, #24]
 8001aa4:	6983      	ldr	r3, [r0, #24]
 8001aa6:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
 8001aaa:	6183      	str	r3, [r0, #24]
 8001aac:	6a03      	ldr	r3, [r0, #32]
 8001aae:	f023 0301 	bic.w	r3, r3, #1
 8001ab2:	6203      	str	r3, [r0, #32]
 8001ab4:	6982      	ldr	r2, [r0, #24]
 8001ab6:	6a03      	ldr	r3, [r0, #32]
 8001ab8:	f022 02f3 	bic.w	r2, r2, #243	; 0xf3
 8001abc:	f023 030a 	bic.w	r3, r3, #10
 8001ac0:	ea42 1707 	orr.w	r7, r2, r7, lsl #4
 8001ac4:	f045 0501 	orr.w	r5, r5, #1
 8001ac8:	431d      	orrs	r5, r3
 8001aca:	433c      	orrs	r4, r7
 8001acc:	6184      	str	r4, [r0, #24]
 8001ace:	6205      	str	r5, [r0, #32]
 8001ad0:	6983      	ldr	r3, [r0, #24]
 8001ad2:	f023 030c 	bic.w	r3, r3, #12
 8001ad6:	6183      	str	r3, [r0, #24]
 8001ad8:	6983      	ldr	r3, [r0, #24]
 8001ada:	431e      	orrs	r6, r3
 8001adc:	6186      	str	r6, [r0, #24]
 8001ade:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 8001ae2:	4770      	bx	lr
 8001ae4:	6a07      	ldr	r7, [r0, #32]
 8001ae6:	890e      	ldrh	r6, [r1, #8]
 8001ae8:	88c9      	ldrh	r1, [r1, #6]
 8001aea:	f027 0701 	bic.w	r7, r7, #1
 8001aee:	6207      	str	r7, [r0, #32]
 8001af0:	f8d0 c018 	ldr.w	ip, [r0, #24]
 8001af4:	6a07      	ldr	r7, [r0, #32]
 8001af6:	f02c 0cf3 	bic.w	ip, ip, #243	; 0xf3
 8001afa:	f027 070a 	bic.w	r7, r7, #10
 8001afe:	ea43 030c 	orr.w	r3, r3, ip
 8001b02:	f042 0201 	orr.w	r2, r2, #1
 8001b06:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
 8001b0a:	433a      	orrs	r2, r7
 8001b0c:	6183      	str	r3, [r0, #24]
 8001b0e:	6202      	str	r2, [r0, #32]
 8001b10:	6983      	ldr	r3, [r0, #24]
 8001b12:	f023 030c 	bic.w	r3, r3, #12
 8001b16:	6183      	str	r3, [r0, #24]
 8001b18:	6983      	ldr	r3, [r0, #24]
 8001b1a:	430b      	orrs	r3, r1
 8001b1c:	6183      	str	r3, [r0, #24]
 8001b1e:	6a02      	ldr	r2, [r0, #32]
 8001b20:	f64f 73ef 	movw	r3, #65519	; 0xffef
 8001b24:	4013      	ands	r3, r2
 8001b26:	6203      	str	r3, [r0, #32]
 8001b28:	6987      	ldr	r7, [r0, #24]
 8001b2a:	6a02      	ldr	r2, [r0, #32]
 8001b2c:	f427 4773 	bic.w	r7, r7, #62208	; 0xf300
 8001b30:	f64f 735f 	movw	r3, #65375	; 0xff5f
 8001b34:	ea47 3606 	orr.w	r6, r7, r6, lsl #12
 8001b38:	4013      	ands	r3, r2
 8001b3a:	2d00      	cmp	r5, #0
 8001b3c:	bf14      	ite	ne
 8001b3e:	2530      	movne	r5, #48	; 0x30
 8001b40:	2510      	moveq	r5, #16
 8001b42:	432b      	orrs	r3, r5
 8001b44:	ea46 2404 	orr.w	r4, r6, r4, lsl #8
 8001b48:	6184      	str	r4, [r0, #24]
 8001b4a:	6203      	str	r3, [r0, #32]
 8001b4c:	6983      	ldr	r3, [r0, #24]
 8001b4e:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8001b52:	6183      	str	r3, [r0, #24]
 8001b54:	6983      	ldr	r3, [r0, #24]
 8001b56:	ea43 2101 	orr.w	r1, r3, r1, lsl #8
 8001b5a:	6181      	str	r1, [r0, #24]
 8001b5c:	e7bf      	b.n	8001ade <TIM_PWMIConfig+0x9e>
 8001b5e:	bf00      	nop

08001b60 <TIM_GetCapture1>:
 8001b60:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8001b62:	4770      	bx	lr

08001b64 <TIM_GetCapture2>:
 8001b64:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8001b66:	4770      	bx	lr

08001b68 <TIM_GetCapture3>:
 8001b68:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8001b6a:	4770      	bx	lr

08001b6c <TIM_GetCapture4>:
 8001b6c:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8001b6e:	4770      	bx	lr

08001b70 <TIM_SetIC1Prescaler>:
 8001b70:	6983      	ldr	r3, [r0, #24]
 8001b72:	f023 030c 	bic.w	r3, r3, #12
 8001b76:	6183      	str	r3, [r0, #24]
 8001b78:	6983      	ldr	r3, [r0, #24]
 8001b7a:	430b      	orrs	r3, r1
 8001b7c:	6183      	str	r3, [r0, #24]
 8001b7e:	4770      	bx	lr

08001b80 <TIM_SetIC2Prescaler>:
 8001b80:	6983      	ldr	r3, [r0, #24]
 8001b82:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8001b86:	6183      	str	r3, [r0, #24]
 8001b88:	6983      	ldr	r3, [r0, #24]
 8001b8a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8001b8e:	6183      	str	r3, [r0, #24]
 8001b90:	4770      	bx	lr
 8001b92:	bf00      	nop

08001b94 <TIM_SetIC3Prescaler>:
 8001b94:	69c2      	ldr	r2, [r0, #28]
 8001b96:	f64f 73f3 	movw	r3, #65523	; 0xfff3
 8001b9a:	4013      	ands	r3, r2
 8001b9c:	61c3      	str	r3, [r0, #28]
 8001b9e:	69c3      	ldr	r3, [r0, #28]
 8001ba0:	430b      	orrs	r3, r1
 8001ba2:	61c3      	str	r3, [r0, #28]
 8001ba4:	4770      	bx	lr
 8001ba6:	bf00      	nop

08001ba8 <TIM_SetIC4Prescaler>:
 8001ba8:	69c2      	ldr	r2, [r0, #28]
 8001baa:	f24f 33ff 	movw	r3, #62463	; 0xf3ff
 8001bae:	4013      	ands	r3, r2
 8001bb0:	61c3      	str	r3, [r0, #28]
 8001bb2:	69c3      	ldr	r3, [r0, #28]
 8001bb4:	0209      	lsls	r1, r1, #8
 8001bb6:	b289      	uxth	r1, r1
 8001bb8:	430b      	orrs	r3, r1
 8001bba:	61c3      	str	r3, [r0, #28]
 8001bbc:	4770      	bx	lr
 8001bbe:	bf00      	nop

08001bc0 <TIM_BDTRConfig>:
 8001bc0:	f8b1 c002 	ldrh.w	ip, [r1, #2]
 8001bc4:	880b      	ldrh	r3, [r1, #0]
 8001bc6:	898a      	ldrh	r2, [r1, #12]
 8001bc8:	b4f0      	push	{r4, r5, r6, r7}
 8001bca:	888f      	ldrh	r7, [r1, #4]
 8001bcc:	88ce      	ldrh	r6, [r1, #6]
 8001bce:	890d      	ldrh	r5, [r1, #8]
 8001bd0:	894c      	ldrh	r4, [r1, #10]
 8001bd2:	ea4c 0303 	orr.w	r3, ip, r3
 8001bd6:	433b      	orrs	r3, r7
 8001bd8:	4333      	orrs	r3, r6
 8001bda:	432b      	orrs	r3, r5
 8001bdc:	4323      	orrs	r3, r4
 8001bde:	4313      	orrs	r3, r2
 8001be0:	b29b      	uxth	r3, r3
 8001be2:	6443      	str	r3, [r0, #68]	; 0x44
 8001be4:	bcf0      	pop	{r4, r5, r6, r7}
 8001be6:	4770      	bx	lr

08001be8 <TIM_Break1Config>:
 8001be8:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001bea:	f423 2372 	bic.w	r3, r3, #991232	; 0xf2000
 8001bee:	6443      	str	r3, [r0, #68]	; 0x44
 8001bf0:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001bf2:	430b      	orrs	r3, r1
 8001bf4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8001bf8:	6443      	str	r3, [r0, #68]	; 0x44
 8001bfa:	4770      	bx	lr

08001bfc <TIM_Break2Config>:
 8001bfc:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001bfe:	f023 733c 	bic.w	r3, r3, #49283072	; 0x2f00000
 8001c02:	6443      	str	r3, [r0, #68]	; 0x44
 8001c04:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001c06:	430b      	orrs	r3, r1
 8001c08:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
 8001c0c:	6443      	str	r3, [r0, #68]	; 0x44
 8001c0e:	4770      	bx	lr

08001c10 <TIM_Break1Cmd>:
 8001c10:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001c12:	b919      	cbnz	r1, 8001c1c <TIM_Break1Cmd+0xc>
 8001c14:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001c18:	6443      	str	r3, [r0, #68]	; 0x44
 8001c1a:	4770      	bx	lr
 8001c1c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001c20:	6443      	str	r3, [r0, #68]	; 0x44
 8001c22:	4770      	bx	lr

08001c24 <TIM_Break2Cmd>:
 8001c24:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001c26:	b919      	cbnz	r1, 8001c30 <TIM_Break2Cmd+0xc>
 8001c28:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001c2c:	6443      	str	r3, [r0, #68]	; 0x44
 8001c2e:	4770      	bx	lr
 8001c30:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001c34:	6443      	str	r3, [r0, #68]	; 0x44
 8001c36:	4770      	bx	lr

08001c38 <TIM_BDTRStructInit>:
 8001c38:	2300      	movs	r3, #0
 8001c3a:	8003      	strh	r3, [r0, #0]
 8001c3c:	8043      	strh	r3, [r0, #2]
 8001c3e:	8083      	strh	r3, [r0, #4]
 8001c40:	80c3      	strh	r3, [r0, #6]
 8001c42:	8103      	strh	r3, [r0, #8]
 8001c44:	8143      	strh	r3, [r0, #10]
 8001c46:	8183      	strh	r3, [r0, #12]
 8001c48:	4770      	bx	lr
 8001c4a:	bf00      	nop

08001c4c <TIM_CtrlPWMOutputs>:
 8001c4c:	6c43      	ldr	r3, [r0, #68]	; 0x44
 8001c4e:	b919      	cbnz	r1, 8001c58 <TIM_CtrlPWMOutputs+0xc>
 8001c50:	045b      	lsls	r3, r3, #17
 8001c52:	0c5b      	lsrs	r3, r3, #17
 8001c54:	6443      	str	r3, [r0, #68]	; 0x44
 8001c56:	4770      	bx	lr
 8001c58:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001c5c:	6443      	str	r3, [r0, #68]	; 0x44
 8001c5e:	4770      	bx	lr

08001c60 <TIM_SelectCOM>:
 8001c60:	b929      	cbnz	r1, 8001c6e <TIM_SelectCOM+0xe>
 8001c62:	6842      	ldr	r2, [r0, #4]
 8001c64:	f64f 73fb 	movw	r3, #65531	; 0xfffb
 8001c68:	4013      	ands	r3, r2
 8001c6a:	6043      	str	r3, [r0, #4]
 8001c6c:	4770      	bx	lr
 8001c6e:	6843      	ldr	r3, [r0, #4]
 8001c70:	f043 0304 	orr.w	r3, r3, #4
 8001c74:	6043      	str	r3, [r0, #4]
 8001c76:	4770      	bx	lr

08001c78 <TIM_CCPreloadControl>:
 8001c78:	b929      	cbnz	r1, 8001c86 <TIM_CCPreloadControl+0xe>
 8001c7a:	6842      	ldr	r2, [r0, #4]
 8001c7c:	f64f 73fe 	movw	r3, #65534	; 0xfffe
 8001c80:	4013      	ands	r3, r2
 8001c82:	6043      	str	r3, [r0, #4]
 8001c84:	4770      	bx	lr
 8001c86:	6843      	ldr	r3, [r0, #4]
 8001c88:	f043 0301 	orr.w	r3, r3, #1
 8001c8c:	6043      	str	r3, [r0, #4]
 8001c8e:	4770      	bx	lr

08001c90 <TIM_ITConfig>:
 8001c90:	68c3      	ldr	r3, [r0, #12]
 8001c92:	b922      	cbnz	r2, 8001c9e <TIM_ITConfig+0xe>
 8001c94:	43c9      	mvns	r1, r1
 8001c96:	b289      	uxth	r1, r1
 8001c98:	4019      	ands	r1, r3
 8001c9a:	60c1      	str	r1, [r0, #12]
 8001c9c:	4770      	bx	lr
 8001c9e:	4319      	orrs	r1, r3
 8001ca0:	60c1      	str	r1, [r0, #12]
 8001ca2:	4770      	bx	lr

08001ca4 <TIM_GenerateEvent>:
 8001ca4:	6141      	str	r1, [r0, #20]
 8001ca6:	4770      	bx	lr

08001ca8 <TIM_GetFlagStatus>:
 8001ca8:	6903      	ldr	r3, [r0, #16]
 8001caa:	4219      	tst	r1, r3
 8001cac:	bf0c      	ite	eq
 8001cae:	2000      	moveq	r0, #0
 8001cb0:	2001      	movne	r0, #1
 8001cb2:	4770      	bx	lr

08001cb4 <TIM_ClearFlag>:
 8001cb4:	43c9      	mvns	r1, r1
 8001cb6:	b289      	uxth	r1, r1
 8001cb8:	6101      	str	r1, [r0, #16]
 8001cba:	4770      	bx	lr

08001cbc <TIM_GetITStatus>:
 8001cbc:	6903      	ldr	r3, [r0, #16]
 8001cbe:	68c2      	ldr	r2, [r0, #12]
 8001cc0:	4211      	tst	r1, r2
 8001cc2:	bf0c      	ite	eq
 8001cc4:	2000      	moveq	r0, #0
 8001cc6:	2001      	movne	r0, #1
 8001cc8:	4219      	tst	r1, r3
 8001cca:	bf0c      	ite	eq
 8001ccc:	2000      	moveq	r0, #0
 8001cce:	f000 0001 	andne.w	r0, r0, #1
 8001cd2:	4770      	bx	lr

08001cd4 <TIM_ClearITPendingBit>:
 8001cd4:	43c9      	mvns	r1, r1
 8001cd6:	b289      	uxth	r1, r1
 8001cd8:	6101      	str	r1, [r0, #16]
 8001cda:	4770      	bx	lr

08001cdc <TIM_DMAConfig>:
 8001cdc:	430a      	orrs	r2, r1
 8001cde:	f8a0 2048 	strh.w	r2, [r0, #72]	; 0x48
 8001ce2:	4770      	bx	lr

08001ce4 <TIM_DMACmd>:
 8001ce4:	68c3      	ldr	r3, [r0, #12]
 8001ce6:	b922      	cbnz	r2, 8001cf2 <TIM_DMACmd+0xe>
 8001ce8:	43c9      	mvns	r1, r1
 8001cea:	b289      	uxth	r1, r1
 8001cec:	4019      	ands	r1, r3
 8001cee:	60c1      	str	r1, [r0, #12]
 8001cf0:	4770      	bx	lr
 8001cf2:	4319      	orrs	r1, r3
 8001cf4:	60c1      	str	r1, [r0, #12]
 8001cf6:	4770      	bx	lr

08001cf8 <TIM_SelectCCDMA>:
 8001cf8:	b929      	cbnz	r1, 8001d06 <TIM_SelectCCDMA+0xe>
 8001cfa:	6842      	ldr	r2, [r0, #4]
 8001cfc:	f64f 73f7 	movw	r3, #65527	; 0xfff7
 8001d00:	4013      	ands	r3, r2
 8001d02:	6043      	str	r3, [r0, #4]
 8001d04:	4770      	bx	lr
 8001d06:	6843      	ldr	r3, [r0, #4]
 8001d08:	f043 0308 	orr.w	r3, r3, #8
 8001d0c:	6043      	str	r3, [r0, #4]
 8001d0e:	4770      	bx	lr

08001d10 <TIM_InternalClockConfig>:
 8001d10:	6882      	ldr	r2, [r0, #8]
 8001d12:	f64f 73f8 	movw	r3, #65528	; 0xfff8
 8001d16:	4013      	ands	r3, r2
 8001d18:	6083      	str	r3, [r0, #8]
 8001d1a:	4770      	bx	lr

08001d1c <TIM_ITRxExternalClockConfig>:
 8001d1c:	6882      	ldr	r2, [r0, #8]
 8001d1e:	f64f 738f 	movw	r3, #65423	; 0xff8f
 8001d22:	4013      	ands	r3, r2
 8001d24:	430b      	orrs	r3, r1
 8001d26:	6083      	str	r3, [r0, #8]
 8001d28:	6883      	ldr	r3, [r0, #8]
 8001d2a:	f043 0307 	orr.w	r3, r3, #7
 8001d2e:	6083      	str	r3, [r0, #8]
 8001d30:	4770      	bx	lr
 8001d32:	bf00      	nop

08001d34 <TIM_TIxExternalClockConfig>:
 8001d34:	2960      	cmp	r1, #96	; 0x60
 8001d36:	b470      	push	{r4, r5, r6}
 8001d38:	d01e      	beq.n	8001d78 <TIM_TIxExternalClockConfig+0x44>
 8001d3a:	6a04      	ldr	r4, [r0, #32]
 8001d3c:	f024 0401 	bic.w	r4, r4, #1
 8001d40:	6204      	str	r4, [r0, #32]
 8001d42:	6985      	ldr	r5, [r0, #24]
 8001d44:	6a04      	ldr	r4, [r0, #32]
 8001d46:	f025 05f3 	bic.w	r5, r5, #243	; 0xf3
 8001d4a:	f045 0501 	orr.w	r5, r5, #1
 8001d4e:	f024 040a 	bic.w	r4, r4, #10
 8001d52:	f042 0201 	orr.w	r2, r2, #1
 8001d56:	ea45 1303 	orr.w	r3, r5, r3, lsl #4
 8001d5a:	4322      	orrs	r2, r4
 8001d5c:	6183      	str	r3, [r0, #24]
 8001d5e:	6202      	str	r2, [r0, #32]
 8001d60:	6882      	ldr	r2, [r0, #8]
 8001d62:	f64f 738f 	movw	r3, #65423	; 0xff8f
 8001d66:	4013      	ands	r3, r2
 8001d68:	4319      	orrs	r1, r3
 8001d6a:	6081      	str	r1, [r0, #8]
 8001d6c:	6883      	ldr	r3, [r0, #8]
 8001d6e:	f043 0307 	orr.w	r3, r3, #7
 8001d72:	6083      	str	r3, [r0, #8]
 8001d74:	bc70      	pop	{r4, r5, r6}
 8001d76:	4770      	bx	lr
 8001d78:	6a05      	ldr	r5, [r0, #32]
 8001d7a:	f64f 74ef 	movw	r4, #65519	; 0xffef
 8001d7e:	402c      	ands	r4, r5
 8001d80:	6204      	str	r4, [r0, #32]
 8001d82:	6985      	ldr	r5, [r0, #24]
 8001d84:	6a06      	ldr	r6, [r0, #32]
 8001d86:	0112      	lsls	r2, r2, #4
 8001d88:	f425 4573 	bic.w	r5, r5, #62208	; 0xf300
 8001d8c:	f64f 745f 	movw	r4, #65375	; 0xff5f
 8001d90:	f042 0210 	orr.w	r2, r2, #16
 8001d94:	f445 7580 	orr.w	r5, r5, #256	; 0x100
 8001d98:	4034      	ands	r4, r6
 8001d9a:	b292      	uxth	r2, r2
 8001d9c:	ea45 3303 	orr.w	r3, r5, r3, lsl #12
 8001da0:	4314      	orrs	r4, r2
 8001da2:	6183      	str	r3, [r0, #24]
 8001da4:	6204      	str	r4, [r0, #32]
 8001da6:	e7db      	b.n	8001d60 <TIM_TIxExternalClockConfig+0x2c>

08001da8 <TIM_ETRClockMode1Config>:
 8001da8:	b430      	push	{r4, r5}
 8001daa:	6885      	ldr	r5, [r0, #8]
 8001dac:	b2ed      	uxtb	r5, r5
 8001dae:	430d      	orrs	r5, r1
 8001db0:	4315      	orrs	r5, r2
 8001db2:	ea45 2503 	orr.w	r5, r5, r3, lsl #8
 8001db6:	b2ad      	uxth	r5, r5
 8001db8:	6085      	str	r5, [r0, #8]
 8001dba:	6883      	ldr	r3, [r0, #8]
 8001dbc:	f64f 7488 	movw	r4, #65416	; 0xff88
 8001dc0:	401c      	ands	r4, r3
 8001dc2:	f044 0477 	orr.w	r4, r4, #119	; 0x77
 8001dc6:	6084      	str	r4, [r0, #8]
 8001dc8:	bc30      	pop	{r4, r5}
 8001dca:	4770      	bx	lr

08001dcc <TIM_ETRClockMode2Config>:
 8001dcc:	b410      	push	{r4}
 8001dce:	6884      	ldr	r4, [r0, #8]
 8001dd0:	b2e4      	uxtb	r4, r4
 8001dd2:	430c      	orrs	r4, r1
 8001dd4:	4314      	orrs	r4, r2
 8001dd6:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
 8001dda:	b2a4      	uxth	r4, r4
 8001ddc:	6084      	str	r4, [r0, #8]
 8001dde:	6883      	ldr	r3, [r0, #8]
 8001de0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001de4:	6083      	str	r3, [r0, #8]
 8001de6:	bc10      	pop	{r4}
 8001de8:	4770      	bx	lr
 8001dea:	bf00      	nop

08001dec <TIM_SelectInputTrigger>:
 8001dec:	6882      	ldr	r2, [r0, #8]
 8001dee:	f64f 738f 	movw	r3, #65423	; 0xff8f
 8001df2:	4013      	ands	r3, r2
 8001df4:	430b      	orrs	r3, r1
 8001df6:	6083      	str	r3, [r0, #8]
 8001df8:	4770      	bx	lr
 8001dfa:	bf00      	nop

08001dfc <TIM_SelectOutputTrigger>:
 8001dfc:	6842      	ldr	r2, [r0, #4]
 8001dfe:	f64f 738f 	movw	r3, #65423	; 0xff8f
 8001e02:	4013      	ands	r3, r2
 8001e04:	6043      	str	r3, [r0, #4]
 8001e06:	6843      	ldr	r3, [r0, #4]
 8001e08:	430b      	orrs	r3, r1
 8001e0a:	6043      	str	r3, [r0, #4]
 8001e0c:	4770      	bx	lr
 8001e0e:	bf00      	nop

08001e10 <TIM_SelectOutputTrigger2>:
 8001e10:	6843      	ldr	r3, [r0, #4]
 8001e12:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8001e16:	6043      	str	r3, [r0, #4]
 8001e18:	6843      	ldr	r3, [r0, #4]
 8001e1a:	430b      	orrs	r3, r1
 8001e1c:	6043      	str	r3, [r0, #4]
 8001e1e:	4770      	bx	lr

08001e20 <TIM_SelectSlaveMode>:
 8001e20:	6883      	ldr	r3, [r0, #8]
 8001e22:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8001e26:	f023 0307 	bic.w	r3, r3, #7
 8001e2a:	6083      	str	r3, [r0, #8]
 8001e2c:	6883      	ldr	r3, [r0, #8]
 8001e2e:	430b      	orrs	r3, r1
 8001e30:	6083      	str	r3, [r0, #8]
 8001e32:	4770      	bx	lr

08001e34 <TIM_SelectMasterSlaveMode>:
 8001e34:	6882      	ldr	r2, [r0, #8]
 8001e36:	f64f 737f 	movw	r3, #65407	; 0xff7f
 8001e3a:	4013      	ands	r3, r2
 8001e3c:	6083      	str	r3, [r0, #8]
 8001e3e:	6883      	ldr	r3, [r0, #8]
 8001e40:	430b      	orrs	r3, r1
 8001e42:	6083      	str	r3, [r0, #8]
 8001e44:	4770      	bx	lr
 8001e46:	bf00      	nop

08001e48 <TIM_ETRConfig>:
 8001e48:	b410      	push	{r4}
 8001e4a:	6884      	ldr	r4, [r0, #8]
 8001e4c:	b2e4      	uxtb	r4, r4
 8001e4e:	430c      	orrs	r4, r1
 8001e50:	4314      	orrs	r4, r2
 8001e52:	ea44 2403 	orr.w	r4, r4, r3, lsl #8
 8001e56:	b2a4      	uxth	r4, r4
 8001e58:	6084      	str	r4, [r0, #8]
 8001e5a:	bc10      	pop	{r4}
 8001e5c:	4770      	bx	lr
 8001e5e:	bf00      	nop

08001e60 <TIM_EncoderInterfaceConfig>:
 8001e60:	b4f0      	push	{r4, r5, r6, r7}
 8001e62:	6887      	ldr	r7, [r0, #8]
 8001e64:	f8d0 c018 	ldr.w	ip, [r0, #24]
 8001e68:	6a04      	ldr	r4, [r0, #32]
 8001e6a:	f64f 76dd 	movw	r6, #65501	; 0xffdd
 8001e6e:	4026      	ands	r6, r4
 8001e70:	f64f 45fc 	movw	r5, #64764	; 0xfcfc
 8001e74:	f64f 74f8 	movw	r4, #65528	; 0xfff8
 8001e78:	ea0c 0505 	and.w	r5, ip, r5
 8001e7c:	4316      	orrs	r6, r2
 8001e7e:	403c      	ands	r4, r7
 8001e80:	f445 7580 	orr.w	r5, r5, #256	; 0x100
 8001e84:	ea46 1603 	orr.w	r6, r6, r3, lsl #4
 8001e88:	4321      	orrs	r1, r4
 8001e8a:	f045 0501 	orr.w	r5, r5, #1
 8001e8e:	b2b6      	uxth	r6, r6
 8001e90:	6081      	str	r1, [r0, #8]
 8001e92:	6185      	str	r5, [r0, #24]
 8001e94:	6206      	str	r6, [r0, #32]
 8001e96:	bcf0      	pop	{r4, r5, r6, r7}
 8001e98:	4770      	bx	lr
 8001e9a:	bf00      	nop

08001e9c <TIM_SelectHallSensor>:
 8001e9c:	b929      	cbnz	r1, 8001eaa <TIM_SelectHallSensor+0xe>
 8001e9e:	6842      	ldr	r2, [r0, #4]
 8001ea0:	f64f 737f 	movw	r3, #65407	; 0xff7f
 8001ea4:	4013      	ands	r3, r2
 8001ea6:	6043      	str	r3, [r0, #4]
 8001ea8:	4770      	bx	lr
 8001eaa:	6843      	ldr	r3, [r0, #4]
 8001eac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001eb0:	6043      	str	r3, [r0, #4]
 8001eb2:	4770      	bx	lr

08001eb4 <TIM_RemapConfig>:
 8001eb4:	f8a0 1050 	strh.w	r1, [r0, #80]	; 0x50
 8001eb8:	4770      	bx	lr
 8001eba:	bf00      	nop

08001ebc <USART_DeInit>:
 8001ebc:	b508      	push	{r3, lr}
 8001ebe:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8001ec2:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001ec6:	4298      	cmp	r0, r3
 8001ec8:	d024      	beq.n	8001f14 <USART_DeInit+0x58>
 8001eca:	f44f 4388 	mov.w	r3, #17408	; 0x4400
 8001ece:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001ed2:	4298      	cmp	r0, r3
 8001ed4:	d02a      	beq.n	8001f2c <USART_DeInit+0x70>
 8001ed6:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 8001eda:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001ede:	4298      	cmp	r0, r3
 8001ee0:	d030      	beq.n	8001f44 <USART_DeInit+0x88>
 8001ee2:	f44f 4398 	mov.w	r3, #19456	; 0x4c00
 8001ee6:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001eea:	4298      	cmp	r0, r3
 8001eec:	d036      	beq.n	8001f5c <USART_DeInit+0xa0>
 8001eee:	f44f 43a0 	mov.w	r3, #20480	; 0x5000
 8001ef2:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001ef6:	4298      	cmp	r0, r3
 8001ef8:	d000      	beq.n	8001efc <USART_DeInit+0x40>
 8001efa:	bd08      	pop	{r3, pc}
 8001efc:	2101      	movs	r1, #1
 8001efe:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8001f02:	f000 fead 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001f06:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8001f0a:	2100      	movs	r1, #0
 8001f0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f10:	f000 bea6 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001f14:	2101      	movs	r1, #1
 8001f16:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8001f1a:	f000 fe93 	bl	8002c44 <RCC_APB2PeriphResetCmd>
 8001f1e:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 8001f22:	2100      	movs	r1, #0
 8001f24:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f28:	f000 be8c 	b.w	8002c44 <RCC_APB2PeriphResetCmd>
 8001f2c:	2101      	movs	r1, #1
 8001f2e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001f32:	f000 fe95 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001f36:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8001f3a:	2100      	movs	r1, #0
 8001f3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f40:	f000 be8e 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001f44:	2101      	movs	r1, #1
 8001f46:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001f4a:	f000 fe89 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001f4e:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001f52:	2100      	movs	r1, #0
 8001f54:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f58:	f000 be82 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8001f5c:	2101      	movs	r1, #1
 8001f5e:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8001f62:	f000 fe7d 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8001f66:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8001f6a:	2100      	movs	r1, #0
 8001f6c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f70:	f000 be76 	b.w	8002c60 <RCC_APB1PeriphResetCmd>

08001f74 <USART_Init>:
 8001f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001f76:	460d      	mov	r5, r1
 8001f78:	6801      	ldr	r1, [r0, #0]
 8001f7a:	68af      	ldr	r7, [r5, #8]
 8001f7c:	68ee      	ldr	r6, [r5, #12]
 8001f7e:	686b      	ldr	r3, [r5, #4]
 8001f80:	696a      	ldr	r2, [r5, #20]
 8001f82:	4604      	mov	r4, r0
 8001f84:	f021 0101 	bic.w	r1, r1, #1
 8001f88:	6928      	ldr	r0, [r5, #16]
 8001f8a:	6021      	str	r1, [r4, #0]
 8001f8c:	6861      	ldr	r1, [r4, #4]
 8001f8e:	f421 5140 	bic.w	r1, r1, #12288	; 0x3000
 8001f92:	4339      	orrs	r1, r7
 8001f94:	6061      	str	r1, [r4, #4]
 8001f96:	6821      	ldr	r1, [r4, #0]
 8001f98:	4333      	orrs	r3, r6
 8001f9a:	f421 51b0 	bic.w	r1, r1, #5632	; 0x1600
 8001f9e:	f021 010c 	bic.w	r1, r1, #12
 8001fa2:	4303      	orrs	r3, r0
 8001fa4:	430b      	orrs	r3, r1
 8001fa6:	6023      	str	r3, [r4, #0]
 8001fa8:	68a3      	ldr	r3, [r4, #8]
 8001faa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8001fae:	b091      	sub	sp, #68	; 0x44
 8001fb0:	4313      	orrs	r3, r2
 8001fb2:	60a3      	str	r3, [r4, #8]
 8001fb4:	a801      	add	r0, sp, #4
 8001fb6:	f000 fbf5 	bl	80027a4 <RCC_GetClocksFreq>
 8001fba:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8001fbe:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8001fc2:	429c      	cmp	r4, r3
 8001fc4:	bf08      	it	eq
 8001fc6:	990b      	ldreq	r1, [sp, #44]	; 0x2c
 8001fc8:	d017      	beq.n	8001ffa <USART_Init+0x86>
 8001fca:	f44f 4388 	mov.w	r3, #17408	; 0x4400
 8001fce:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001fd2:	429c      	cmp	r4, r3
 8001fd4:	bf08      	it	eq
 8001fd6:	990c      	ldreq	r1, [sp, #48]	; 0x30
 8001fd8:	d00f      	beq.n	8001ffa <USART_Init+0x86>
 8001fda:	f44f 4390 	mov.w	r3, #18432	; 0x4800
 8001fde:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001fe2:	429c      	cmp	r4, r3
 8001fe4:	bf08      	it	eq
 8001fe6:	990d      	ldreq	r1, [sp, #52]	; 0x34
 8001fe8:	d007      	beq.n	8001ffa <USART_Init+0x86>
 8001fea:	f44f 4398 	mov.w	r3, #19456	; 0x4c00
 8001fee:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8001ff2:	429c      	cmp	r4, r3
 8001ff4:	bf0c      	ite	eq
 8001ff6:	990e      	ldreq	r1, [sp, #56]	; 0x38
 8001ff8:	990f      	ldrne	r1, [sp, #60]	; 0x3c
 8001ffa:	6823      	ldr	r3, [r4, #0]
 8001ffc:	682a      	ldr	r2, [r5, #0]
 8001ffe:	0418      	lsls	r0, r3, #16
 8002000:	d516      	bpl.n	8002030 <USART_Init+0xbc>
 8002002:	0049      	lsls	r1, r1, #1
 8002004:	fbb1 f3f2 	udiv	r3, r1, r2
 8002008:	fb02 1113 	mls	r1, r2, r3, r1
 800200c:	ebb1 0f52 	cmp.w	r1, r2, lsr #1
 8002010:	6822      	ldr	r2, [r4, #0]
 8002012:	bf28      	it	cs
 8002014:	3301      	addcs	r3, #1
 8002016:	0412      	lsls	r2, r2, #16
 8002018:	bf41      	itttt	mi
 800201a:	f64f 72f0 	movwmi	r2, #65520	; 0xfff0
 800201e:	f3c3 0142 	ubfxmi	r1, r3, #1, #3
 8002022:	401a      	andmi	r2, r3
 8002024:	ea41 0302 	orrmi.w	r3, r1, r2
 8002028:	b29b      	uxth	r3, r3
 800202a:	81a3      	strh	r3, [r4, #12]
 800202c:	b011      	add	sp, #68	; 0x44
 800202e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002030:	fbb1 f3f2 	udiv	r3, r1, r2
 8002034:	fb02 1113 	mls	r1, r2, r3, r1
 8002038:	e7e8      	b.n	800200c <USART_Init+0x98>
 800203a:	bf00      	nop

0800203c <USART_StructInit>:
 800203c:	2300      	movs	r3, #0
 800203e:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8002042:	e880 000c 	stmia.w	r0, {r2, r3}
 8002046:	220c      	movs	r2, #12
 8002048:	6083      	str	r3, [r0, #8]
 800204a:	60c3      	str	r3, [r0, #12]
 800204c:	6102      	str	r2, [r0, #16]
 800204e:	6143      	str	r3, [r0, #20]
 8002050:	4770      	bx	lr
 8002052:	bf00      	nop

08002054 <USART_ClockInit>:
 8002054:	b430      	push	{r4, r5}
 8002056:	e891 0028 	ldmia.w	r1, {r3, r5}
 800205a:	688c      	ldr	r4, [r1, #8]
 800205c:	6842      	ldr	r2, [r0, #4]
 800205e:	68c9      	ldr	r1, [r1, #12]
 8002060:	432b      	orrs	r3, r5
 8002062:	4323      	orrs	r3, r4
 8002064:	f422 6270 	bic.w	r2, r2, #3840	; 0xf00
 8002068:	430b      	orrs	r3, r1
 800206a:	4313      	orrs	r3, r2
 800206c:	6043      	str	r3, [r0, #4]
 800206e:	bc30      	pop	{r4, r5}
 8002070:	4770      	bx	lr
 8002072:	bf00      	nop

08002074 <USART_ClockStructInit>:
 8002074:	2300      	movs	r3, #0
 8002076:	6003      	str	r3, [r0, #0]
 8002078:	6043      	str	r3, [r0, #4]
 800207a:	6083      	str	r3, [r0, #8]
 800207c:	60c3      	str	r3, [r0, #12]
 800207e:	4770      	bx	lr

08002080 <USART_Cmd>:
 8002080:	6803      	ldr	r3, [r0, #0]
 8002082:	b919      	cbnz	r1, 800208c <USART_Cmd+0xc>
 8002084:	f023 0301 	bic.w	r3, r3, #1
 8002088:	6003      	str	r3, [r0, #0]
 800208a:	4770      	bx	lr
 800208c:	f043 0301 	orr.w	r3, r3, #1
 8002090:	6003      	str	r3, [r0, #0]
 8002092:	4770      	bx	lr

08002094 <USART_DirectionModeCmd>:
 8002094:	6803      	ldr	r3, [r0, #0]
 8002096:	b91a      	cbnz	r2, 80020a0 <USART_DirectionModeCmd+0xc>
 8002098:	ea23 0101 	bic.w	r1, r3, r1
 800209c:	6001      	str	r1, [r0, #0]
 800209e:	4770      	bx	lr
 80020a0:	4319      	orrs	r1, r3
 80020a2:	6001      	str	r1, [r0, #0]
 80020a4:	4770      	bx	lr
 80020a6:	bf00      	nop

080020a8 <USART_OverSampling8Cmd>:
 80020a8:	6803      	ldr	r3, [r0, #0]
 80020aa:	b919      	cbnz	r1, 80020b4 <USART_OverSampling8Cmd+0xc>
 80020ac:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80020b0:	6003      	str	r3, [r0, #0]
 80020b2:	4770      	bx	lr
 80020b4:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80020b8:	6003      	str	r3, [r0, #0]
 80020ba:	4770      	bx	lr

080020bc <USART_OneBitMethodCmd>:
 80020bc:	6883      	ldr	r3, [r0, #8]
 80020be:	b919      	cbnz	r1, 80020c8 <USART_OneBitMethodCmd+0xc>
 80020c0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80020c4:	6083      	str	r3, [r0, #8]
 80020c6:	4770      	bx	lr
 80020c8:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 80020cc:	6083      	str	r3, [r0, #8]
 80020ce:	4770      	bx	lr

080020d0 <USART_MSBFirstCmd>:
 80020d0:	6843      	ldr	r3, [r0, #4]
 80020d2:	b919      	cbnz	r1, 80020dc <USART_MSBFirstCmd+0xc>
 80020d4:	f423 2300 	bic.w	r3, r3, #524288	; 0x80000
 80020d8:	6043      	str	r3, [r0, #4]
 80020da:	4770      	bx	lr
 80020dc:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80020e0:	6043      	str	r3, [r0, #4]
 80020e2:	4770      	bx	lr

080020e4 <USART_DataInvCmd>:
 80020e4:	6843      	ldr	r3, [r0, #4]
 80020e6:	b919      	cbnz	r1, 80020f0 <USART_DataInvCmd+0xc>
 80020e8:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80020ec:	6043      	str	r3, [r0, #4]
 80020ee:	4770      	bx	lr
 80020f0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80020f4:	6043      	str	r3, [r0, #4]
 80020f6:	4770      	bx	lr

080020f8 <USART_InvPinCmd>:
 80020f8:	6843      	ldr	r3, [r0, #4]
 80020fa:	b91a      	cbnz	r2, 8002104 <USART_InvPinCmd+0xc>
 80020fc:	ea23 0101 	bic.w	r1, r3, r1
 8002100:	6041      	str	r1, [r0, #4]
 8002102:	4770      	bx	lr
 8002104:	4319      	orrs	r1, r3
 8002106:	6041      	str	r1, [r0, #4]
 8002108:	4770      	bx	lr
 800210a:	bf00      	nop

0800210c <USART_SWAPPinCmd>:
 800210c:	6843      	ldr	r3, [r0, #4]
 800210e:	b919      	cbnz	r1, 8002118 <USART_SWAPPinCmd+0xc>
 8002110:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8002114:	6043      	str	r3, [r0, #4]
 8002116:	4770      	bx	lr
 8002118:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800211c:	6043      	str	r3, [r0, #4]
 800211e:	4770      	bx	lr

08002120 <USART_ReceiverTimeOutCmd>:
 8002120:	6843      	ldr	r3, [r0, #4]
 8002122:	b919      	cbnz	r1, 800212c <USART_ReceiverTimeOutCmd+0xc>
 8002124:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002128:	6043      	str	r3, [r0, #4]
 800212a:	4770      	bx	lr
 800212c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002130:	6043      	str	r3, [r0, #4]
 8002132:	4770      	bx	lr

08002134 <USART_SetReceiverTimeOut>:
 8002134:	6943      	ldr	r3, [r0, #20]
 8002136:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800213a:	6143      	str	r3, [r0, #20]
 800213c:	6943      	ldr	r3, [r0, #20]
 800213e:	430b      	orrs	r3, r1
 8002140:	6143      	str	r3, [r0, #20]
 8002142:	4770      	bx	lr

08002144 <USART_SetPrescaler>:
 8002144:	8a03      	ldrh	r3, [r0, #16]
 8002146:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 800214a:	8203      	strh	r3, [r0, #16]
 800214c:	8a03      	ldrh	r3, [r0, #16]
 800214e:	b29b      	uxth	r3, r3
 8002150:	430b      	orrs	r3, r1
 8002152:	8203      	strh	r3, [r0, #16]
 8002154:	4770      	bx	lr
 8002156:	bf00      	nop

08002158 <USART_STOPModeCmd>:
 8002158:	6803      	ldr	r3, [r0, #0]
 800215a:	b919      	cbnz	r1, 8002164 <USART_STOPModeCmd+0xc>
 800215c:	f023 0302 	bic.w	r3, r3, #2
 8002160:	6003      	str	r3, [r0, #0]
 8002162:	4770      	bx	lr
 8002164:	f043 0302 	orr.w	r3, r3, #2
 8002168:	6003      	str	r3, [r0, #0]
 800216a:	4770      	bx	lr

0800216c <USART_StopModeWakeUpSourceConfig>:
 800216c:	6883      	ldr	r3, [r0, #8]
 800216e:	f423 1340 	bic.w	r3, r3, #3145728	; 0x300000
 8002172:	6083      	str	r3, [r0, #8]
 8002174:	6883      	ldr	r3, [r0, #8]
 8002176:	430b      	orrs	r3, r1
 8002178:	6083      	str	r3, [r0, #8]
 800217a:	4770      	bx	lr

0800217c <USART_AutoBaudRateCmd>:
 800217c:	6843      	ldr	r3, [r0, #4]
 800217e:	b919      	cbnz	r1, 8002188 <USART_AutoBaudRateCmd+0xc>
 8002180:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8002184:	6043      	str	r3, [r0, #4]
 8002186:	4770      	bx	lr
 8002188:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800218c:	6043      	str	r3, [r0, #4]
 800218e:	4770      	bx	lr

08002190 <USART_AutoBaudRateConfig>:
 8002190:	6843      	ldr	r3, [r0, #4]
 8002192:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
 8002196:	6043      	str	r3, [r0, #4]
 8002198:	6843      	ldr	r3, [r0, #4]
 800219a:	430b      	orrs	r3, r1
 800219c:	6043      	str	r3, [r0, #4]
 800219e:	4770      	bx	lr

080021a0 <USART_SendData>:
 80021a0:	05c9      	lsls	r1, r1, #23
 80021a2:	0dc9      	lsrs	r1, r1, #23
 80021a4:	8501      	strh	r1, [r0, #40]	; 0x28
 80021a6:	4770      	bx	lr

080021a8 <USART_ReceiveData>:
 80021a8:	8c80      	ldrh	r0, [r0, #36]	; 0x24
 80021aa:	05c0      	lsls	r0, r0, #23
 80021ac:	0dc0      	lsrs	r0, r0, #23
 80021ae:	4770      	bx	lr

080021b0 <USART_SetAddress>:
 80021b0:	6843      	ldr	r3, [r0, #4]
 80021b2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80021b6:	6043      	str	r3, [r0, #4]
 80021b8:	6843      	ldr	r3, [r0, #4]
 80021ba:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 80021be:	6043      	str	r3, [r0, #4]
 80021c0:	4770      	bx	lr
 80021c2:	bf00      	nop

080021c4 <USART_MuteModeCmd>:
 80021c4:	6803      	ldr	r3, [r0, #0]
 80021c6:	b919      	cbnz	r1, 80021d0 <USART_MuteModeCmd+0xc>
 80021c8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80021cc:	6003      	str	r3, [r0, #0]
 80021ce:	4770      	bx	lr
 80021d0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80021d4:	6003      	str	r3, [r0, #0]
 80021d6:	4770      	bx	lr

080021d8 <USART_MuteModeWakeUpConfig>:
 80021d8:	6803      	ldr	r3, [r0, #0]
 80021da:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80021de:	6003      	str	r3, [r0, #0]
 80021e0:	6803      	ldr	r3, [r0, #0]
 80021e2:	430b      	orrs	r3, r1
 80021e4:	6003      	str	r3, [r0, #0]
 80021e6:	4770      	bx	lr

080021e8 <USART_AddressDetectionConfig>:
 80021e8:	6843      	ldr	r3, [r0, #4]
 80021ea:	f023 0310 	bic.w	r3, r3, #16
 80021ee:	6043      	str	r3, [r0, #4]
 80021f0:	6843      	ldr	r3, [r0, #4]
 80021f2:	430b      	orrs	r3, r1
 80021f4:	6043      	str	r3, [r0, #4]
 80021f6:	4770      	bx	lr

080021f8 <USART_LINBreakDetectLengthConfig>:
 80021f8:	6843      	ldr	r3, [r0, #4]
 80021fa:	f023 0320 	bic.w	r3, r3, #32
 80021fe:	6043      	str	r3, [r0, #4]
 8002200:	6843      	ldr	r3, [r0, #4]
 8002202:	430b      	orrs	r3, r1
 8002204:	6043      	str	r3, [r0, #4]
 8002206:	4770      	bx	lr

08002208 <USART_LINCmd>:
 8002208:	6843      	ldr	r3, [r0, #4]
 800220a:	b919      	cbnz	r1, 8002214 <USART_LINCmd+0xc>
 800220c:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8002210:	6043      	str	r3, [r0, #4]
 8002212:	4770      	bx	lr
 8002214:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002218:	6043      	str	r3, [r0, #4]
 800221a:	4770      	bx	lr

0800221c <USART_HalfDuplexCmd>:
 800221c:	6883      	ldr	r3, [r0, #8]
 800221e:	b919      	cbnz	r1, 8002228 <USART_HalfDuplexCmd+0xc>
 8002220:	f023 0308 	bic.w	r3, r3, #8
 8002224:	6083      	str	r3, [r0, #8]
 8002226:	4770      	bx	lr
 8002228:	f043 0308 	orr.w	r3, r3, #8
 800222c:	6083      	str	r3, [r0, #8]
 800222e:	4770      	bx	lr

08002230 <USART_SetGuardTime>:
 8002230:	8a03      	ldrh	r3, [r0, #16]
 8002232:	b2db      	uxtb	r3, r3
 8002234:	8203      	strh	r3, [r0, #16]
 8002236:	8a03      	ldrh	r3, [r0, #16]
 8002238:	b29b      	uxth	r3, r3
 800223a:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 800223e:	8203      	strh	r3, [r0, #16]
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop

08002244 <USART_SmartCardCmd>:
 8002244:	6883      	ldr	r3, [r0, #8]
 8002246:	b919      	cbnz	r1, 8002250 <USART_SmartCardCmd+0xc>
 8002248:	f023 0320 	bic.w	r3, r3, #32
 800224c:	6083      	str	r3, [r0, #8]
 800224e:	4770      	bx	lr
 8002250:	f043 0320 	orr.w	r3, r3, #32
 8002254:	6083      	str	r3, [r0, #8]
 8002256:	4770      	bx	lr

08002258 <USART_SmartCardNACKCmd>:
 8002258:	6883      	ldr	r3, [r0, #8]
 800225a:	b919      	cbnz	r1, 8002264 <USART_SmartCardNACKCmd+0xc>
 800225c:	f023 0310 	bic.w	r3, r3, #16
 8002260:	6083      	str	r3, [r0, #8]
 8002262:	4770      	bx	lr
 8002264:	f043 0310 	orr.w	r3, r3, #16
 8002268:	6083      	str	r3, [r0, #8]
 800226a:	4770      	bx	lr

0800226c <USART_SetAutoRetryCount>:
 800226c:	6883      	ldr	r3, [r0, #8]
 800226e:	f423 2360 	bic.w	r3, r3, #917504	; 0xe0000
 8002272:	6083      	str	r3, [r0, #8]
 8002274:	6883      	ldr	r3, [r0, #8]
 8002276:	ea43 4341 	orr.w	r3, r3, r1, lsl #17
 800227a:	6083      	str	r3, [r0, #8]
 800227c:	4770      	bx	lr
 800227e:	bf00      	nop

08002280 <USART_SetBlockLength>:
 8002280:	6943      	ldr	r3, [r0, #20]
 8002282:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 8002286:	6143      	str	r3, [r0, #20]
 8002288:	6943      	ldr	r3, [r0, #20]
 800228a:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 800228e:	6143      	str	r3, [r0, #20]
 8002290:	4770      	bx	lr
 8002292:	bf00      	nop

08002294 <USART_IrDAConfig>:
 8002294:	6883      	ldr	r3, [r0, #8]
 8002296:	f023 0304 	bic.w	r3, r3, #4
 800229a:	6083      	str	r3, [r0, #8]
 800229c:	6883      	ldr	r3, [r0, #8]
 800229e:	430b      	orrs	r3, r1
 80022a0:	6083      	str	r3, [r0, #8]
 80022a2:	4770      	bx	lr

080022a4 <USART_IrDACmd>:
 80022a4:	6883      	ldr	r3, [r0, #8]
 80022a6:	b919      	cbnz	r1, 80022b0 <USART_IrDACmd+0xc>
 80022a8:	f023 0302 	bic.w	r3, r3, #2
 80022ac:	6083      	str	r3, [r0, #8]
 80022ae:	4770      	bx	lr
 80022b0:	f043 0302 	orr.w	r3, r3, #2
 80022b4:	6083      	str	r3, [r0, #8]
 80022b6:	4770      	bx	lr

080022b8 <USART_DECmd>:
 80022b8:	6883      	ldr	r3, [r0, #8]
 80022ba:	b919      	cbnz	r1, 80022c4 <USART_DECmd+0xc>
 80022bc:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80022c0:	6083      	str	r3, [r0, #8]
 80022c2:	4770      	bx	lr
 80022c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80022c8:	6083      	str	r3, [r0, #8]
 80022ca:	4770      	bx	lr

080022cc <USART_DEPolarityConfig>:
 80022cc:	6883      	ldr	r3, [r0, #8]
 80022ce:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80022d2:	6083      	str	r3, [r0, #8]
 80022d4:	6883      	ldr	r3, [r0, #8]
 80022d6:	430b      	orrs	r3, r1
 80022d8:	6083      	str	r3, [r0, #8]
 80022da:	4770      	bx	lr

080022dc <USART_SetDEAssertionTime>:
 80022dc:	6803      	ldr	r3, [r0, #0]
 80022de:	f023 7378 	bic.w	r3, r3, #65011712	; 0x3e00000
 80022e2:	6003      	str	r3, [r0, #0]
 80022e4:	6803      	ldr	r3, [r0, #0]
 80022e6:	ea43 5341 	orr.w	r3, r3, r1, lsl #21
 80022ea:	6003      	str	r3, [r0, #0]
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop

080022f0 <USART_SetDEDeassertionTime>:
 80022f0:	6803      	ldr	r3, [r0, #0]
 80022f2:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 80022f6:	6003      	str	r3, [r0, #0]
 80022f8:	6803      	ldr	r3, [r0, #0]
 80022fa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80022fe:	6003      	str	r3, [r0, #0]
 8002300:	4770      	bx	lr
 8002302:	bf00      	nop

08002304 <USART_DMACmd>:
 8002304:	6883      	ldr	r3, [r0, #8]
 8002306:	b91a      	cbnz	r2, 8002310 <USART_DMACmd+0xc>
 8002308:	ea23 0101 	bic.w	r1, r3, r1
 800230c:	6081      	str	r1, [r0, #8]
 800230e:	4770      	bx	lr
 8002310:	4319      	orrs	r1, r3
 8002312:	6081      	str	r1, [r0, #8]
 8002314:	4770      	bx	lr
 8002316:	bf00      	nop

08002318 <USART_DMAReceptionErrorConfig>:
 8002318:	6883      	ldr	r3, [r0, #8]
 800231a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800231e:	6083      	str	r3, [r0, #8]
 8002320:	6883      	ldr	r3, [r0, #8]
 8002322:	430b      	orrs	r3, r1
 8002324:	6083      	str	r3, [r0, #8]
 8002326:	4770      	bx	lr

08002328 <USART_ITConfig>:
 8002328:	b2cb      	uxtb	r3, r1
 800232a:	b410      	push	{r4}
 800232c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8002330:	2401      	movs	r4, #1
 8002332:	fa14 f303 	lsls.w	r3, r4, r3
 8002336:	2902      	cmp	r1, #2
 8002338:	d00d      	beq.n	8002356 <USART_ITConfig+0x2e>
 800233a:	2903      	cmp	r1, #3
 800233c:	bf08      	it	eq
 800233e:	3008      	addeq	r0, #8
 8002340:	b92a      	cbnz	r2, 800234e <USART_ITConfig+0x26>
 8002342:	6802      	ldr	r2, [r0, #0]
 8002344:	ea22 0303 	bic.w	r3, r2, r3
 8002348:	6003      	str	r3, [r0, #0]
 800234a:	bc10      	pop	{r4}
 800234c:	4770      	bx	lr
 800234e:	6802      	ldr	r2, [r0, #0]
 8002350:	4313      	orrs	r3, r2
 8002352:	6003      	str	r3, [r0, #0]
 8002354:	e7f9      	b.n	800234a <USART_ITConfig+0x22>
 8002356:	3004      	adds	r0, #4
 8002358:	e7f2      	b.n	8002340 <USART_ITConfig+0x18>
 800235a:	bf00      	nop

0800235c <USART_RequestCmd>:
 800235c:	8b03      	ldrh	r3, [r0, #24]
 800235e:	b922      	cbnz	r2, 800236a <USART_RequestCmd+0xe>
 8002360:	b29b      	uxth	r3, r3
 8002362:	ea23 0101 	bic.w	r1, r3, r1
 8002366:	8301      	strh	r1, [r0, #24]
 8002368:	4770      	bx	lr
 800236a:	4319      	orrs	r1, r3
 800236c:	b289      	uxth	r1, r1
 800236e:	8301      	strh	r1, [r0, #24]
 8002370:	4770      	bx	lr
 8002372:	bf00      	nop

08002374 <USART_OverrunDetectionConfig>:
 8002374:	6883      	ldr	r3, [r0, #8]
 8002376:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800237a:	6083      	str	r3, [r0, #8]
 800237c:	6883      	ldr	r3, [r0, #8]
 800237e:	430b      	orrs	r3, r1
 8002380:	6083      	str	r3, [r0, #8]
 8002382:	4770      	bx	lr

08002384 <USART_GetFlagStatus>:
 8002384:	69c3      	ldr	r3, [r0, #28]
 8002386:	4219      	tst	r1, r3
 8002388:	bf0c      	ite	eq
 800238a:	2000      	moveq	r0, #0
 800238c:	2001      	movne	r0, #1
 800238e:	4770      	bx	lr

08002390 <USART_ClearFlag>:
 8002390:	6201      	str	r1, [r0, #32]
 8002392:	4770      	bx	lr

08002394 <USART_GetITStatus>:
 8002394:	b410      	push	{r4}
 8002396:	b2ca      	uxtb	r2, r1
 8002398:	2401      	movs	r4, #1
 800239a:	f3c1 2307 	ubfx	r3, r1, #8, #8
 800239e:	fa14 f202 	lsls.w	r2, r4, r2
 80023a2:	42a3      	cmp	r3, r4
 80023a4:	d014      	beq.n	80023d0 <USART_GetITStatus+0x3c>
 80023a6:	2b02      	cmp	r3, #2
 80023a8:	bf0c      	ite	eq
 80023aa:	6844      	ldreq	r4, [r0, #4]
 80023ac:	6884      	ldrne	r4, [r0, #8]
 80023ae:	4022      	ands	r2, r4
 80023b0:	69c3      	ldr	r3, [r0, #28]
 80023b2:	2401      	movs	r4, #1
 80023b4:	0c09      	lsrs	r1, r1, #16
 80023b6:	fa14 f101 	lsls.w	r1, r4, r1
 80023ba:	4219      	tst	r1, r3
 80023bc:	bf0c      	ite	eq
 80023be:	2300      	moveq	r3, #0
 80023c0:	2301      	movne	r3, #1
 80023c2:	2a00      	cmp	r2, #0
 80023c4:	bf0c      	ite	eq
 80023c6:	2000      	moveq	r0, #0
 80023c8:	f003 0001 	andne.w	r0, r3, #1
 80023cc:	bc10      	pop	{r4}
 80023ce:	4770      	bx	lr
 80023d0:	6804      	ldr	r4, [r0, #0]
 80023d2:	4022      	ands	r2, r4
 80023d4:	e7ec      	b.n	80023b0 <USART_GetITStatus+0x1c>
 80023d6:	bf00      	nop

080023d8 <USART_ClearITPendingBit>:
 80023d8:	0c09      	lsrs	r1, r1, #16
 80023da:	2301      	movs	r3, #1
 80023dc:	fa13 f101 	lsls.w	r1, r3, r1
 80023e0:	6201      	str	r1, [r0, #32]
 80023e2:	4770      	bx	lr

080023e4 <GPIO_DeInit>:
 80023e4:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
 80023e8:	b508      	push	{r3, lr}
 80023ea:	d02a      	beq.n	8002442 <GPIO_DeInit+0x5e>
 80023ec:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80023f0:	f6c4 0300 	movt	r3, #18432	; 0x4800
 80023f4:	4298      	cmp	r0, r3
 80023f6:	d030      	beq.n	800245a <GPIO_DeInit+0x76>
 80023f8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80023fc:	f6c4 0300 	movt	r3, #18432	; 0x4800
 8002400:	4298      	cmp	r0, r3
 8002402:	d036      	beq.n	8002472 <GPIO_DeInit+0x8e>
 8002404:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8002408:	f6c4 0300 	movt	r3, #18432	; 0x4800
 800240c:	4298      	cmp	r0, r3
 800240e:	d03c      	beq.n	800248a <GPIO_DeInit+0xa6>
 8002410:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002414:	f6c4 0300 	movt	r3, #18432	; 0x4800
 8002418:	4298      	cmp	r0, r3
 800241a:	d042      	beq.n	80024a2 <GPIO_DeInit+0xbe>
 800241c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8002420:	f6c4 0300 	movt	r3, #18432	; 0x4800
 8002424:	4298      	cmp	r0, r3
 8002426:	d000      	beq.n	800242a <GPIO_DeInit+0x46>
 8002428:	bd08      	pop	{r3, pc}
 800242a:	2101      	movs	r1, #1
 800242c:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8002430:	f000 fbfa 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 8002434:	f44f 0080 	mov.w	r0, #4194304	; 0x400000
 8002438:	2100      	movs	r1, #0
 800243a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800243e:	f000 bbf3 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 8002442:	2101      	movs	r1, #1
 8002444:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8002448:	f000 fbee 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 800244c:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8002450:	2100      	movs	r1, #0
 8002452:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002456:	f000 bbe7 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 800245a:	2101      	movs	r1, #1
 800245c:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8002460:	f000 fbe2 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 8002464:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8002468:	2100      	movs	r1, #0
 800246a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800246e:	f000 bbdb 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 8002472:	2101      	movs	r1, #1
 8002474:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002478:	f000 fbd6 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 800247c:	f44f 2000 	mov.w	r0, #524288	; 0x80000
 8002480:	2100      	movs	r1, #0
 8002482:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002486:	f000 bbcf 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 800248a:	2101      	movs	r1, #1
 800248c:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8002490:	f000 fbca 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 8002494:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8002498:	2100      	movs	r1, #0
 800249a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800249e:	f000 bbc3 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 80024a2:	2101      	movs	r1, #1
 80024a4:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80024a8:	f000 fbbe 	bl	8002c28 <RCC_AHBPeriphResetCmd>
 80024ac:	f44f 1000 	mov.w	r0, #2097152	; 0x200000
 80024b0:	2100      	movs	r1, #0
 80024b2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80024b6:	f000 bbb7 	b.w	8002c28 <RCC_AHBPeriphResetCmd>
 80024ba:	bf00      	nop

080024bc <GPIO_Init>:
 80024bc:	2300      	movs	r3, #0
 80024be:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80024c2:	680a      	ldr	r2, [r1, #0]
 80024c4:	461c      	mov	r4, r3
 80024c6:	2601      	movs	r6, #1
 80024c8:	f04f 0803 	mov.w	r8, #3
 80024cc:	e003      	b.n	80024d6 <GPIO_Init+0x1a>
 80024ce:	3401      	adds	r4, #1
 80024d0:	3302      	adds	r3, #2
 80024d2:	2c10      	cmp	r4, #16
 80024d4:	d02b      	beq.n	800252e <GPIO_Init+0x72>
 80024d6:	fa16 f704 	lsls.w	r7, r6, r4
 80024da:	ea07 0502 	and.w	r5, r7, r2
 80024de:	42bd      	cmp	r5, r7
 80024e0:	d1f5      	bne.n	80024ce <GPIO_Init+0x12>
 80024e2:	790f      	ldrb	r7, [r1, #4]
 80024e4:	f107 3cff 	add.w	ip, r7, #4294967295
 80024e8:	f1bc 0f01 	cmp.w	ip, #1
 80024ec:	bf84      	itt	hi
 80024ee:	fa08 fc03 	lslhi.w	ip, r8, r3
 80024f2:	ea6f 0c0c 	mvnhi.w	ip, ip
 80024f6:	d91d      	bls.n	8002534 <GPIO_Init+0x78>
 80024f8:	f8d0 9000 	ldr.w	r9, [r0]
 80024fc:	79cd      	ldrb	r5, [r1, #7]
 80024fe:	ea0c 0c09 	and.w	ip, ip, r9
 8002502:	f8c0 c000 	str.w	ip, [r0]
 8002506:	f8d0 c000 	ldr.w	ip, [r0]
 800250a:	409f      	lsls	r7, r3
 800250c:	ea47 070c 	orr.w	r7, r7, ip
 8002510:	6007      	str	r7, [r0, #0]
 8002512:	68c7      	ldr	r7, [r0, #12]
 8002514:	fa08 fc03 	lsl.w	ip, r8, r3
 8002518:	ea27 070c 	bic.w	r7, r7, ip
 800251c:	60c7      	str	r7, [r0, #12]
 800251e:	68c7      	ldr	r7, [r0, #12]
 8002520:	409d      	lsls	r5, r3
 8002522:	3401      	adds	r4, #1
 8002524:	433d      	orrs	r5, r7
 8002526:	3302      	adds	r3, #2
 8002528:	2c10      	cmp	r4, #16
 800252a:	60c5      	str	r5, [r0, #12]
 800252c:	d1d3      	bne.n	80024d6 <GPIO_Init+0x1a>
 800252e:	e8bd 0ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
 8002532:	4770      	bx	lr
 8002534:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8002538:	f891 a005 	ldrb.w	sl, [r1, #5]
 800253c:	f891 b006 	ldrb.w	fp, [r1, #6]
 8002540:	fa08 fc03 	lsl.w	ip, r8, r3
 8002544:	ea6f 0c0c 	mvn.w	ip, ip
 8002548:	ea0c 0909 	and.w	r9, ip, r9
 800254c:	f8c0 9008 	str.w	r9, [r0, #8]
 8002550:	f8d0 9008 	ldr.w	r9, [r0, #8]
 8002554:	fa0a fa03 	lsl.w	sl, sl, r3
 8002558:	ea4a 0909 	orr.w	r9, sl, r9
 800255c:	f8c0 9008 	str.w	r9, [r0, #8]
 8002560:	f8b0 9004 	ldrh.w	r9, [r0, #4]
 8002564:	fa1f f989 	uxth.w	r9, r9
 8002568:	ea29 0505 	bic.w	r5, r9, r5
 800256c:	8085      	strh	r5, [r0, #4]
 800256e:	8885      	ldrh	r5, [r0, #4]
 8002570:	fa0b fb04 	lsl.w	fp, fp, r4
 8002574:	ea4b 0b05 	orr.w	fp, fp, r5
 8002578:	fa1f fb8b 	uxth.w	fp, fp
 800257c:	f8a0 b004 	strh.w	fp, [r0, #4]
 8002580:	e7ba      	b.n	80024f8 <GPIO_Init+0x3c>
 8002582:	bf00      	nop

08002584 <GPIO_StructInit>:
 8002584:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002588:	2300      	movs	r3, #0
 800258a:	6002      	str	r2, [r0, #0]
 800258c:	2201      	movs	r2, #1
 800258e:	7103      	strb	r3, [r0, #4]
 8002590:	7142      	strb	r2, [r0, #5]
 8002592:	7183      	strb	r3, [r0, #6]
 8002594:	71c3      	strb	r3, [r0, #7]
 8002596:	4770      	bx	lr

08002598 <GPIO_PinLockConfig>:
 8002598:	f441 3380 	orr.w	r3, r1, #65536	; 0x10000
 800259c:	61c3      	str	r3, [r0, #28]
 800259e:	61c1      	str	r1, [r0, #28]
 80025a0:	61c3      	str	r3, [r0, #28]
 80025a2:	69c3      	ldr	r3, [r0, #28]
 80025a4:	69c3      	ldr	r3, [r0, #28]
 80025a6:	4770      	bx	lr

080025a8 <GPIO_ReadInputDataBit>:
 80025a8:	8a03      	ldrh	r3, [r0, #16]
 80025aa:	4219      	tst	r1, r3
 80025ac:	bf0c      	ite	eq
 80025ae:	2000      	moveq	r0, #0
 80025b0:	2001      	movne	r0, #1
 80025b2:	4770      	bx	lr

080025b4 <GPIO_ReadInputData>:
 80025b4:	8a00      	ldrh	r0, [r0, #16]
 80025b6:	b280      	uxth	r0, r0
 80025b8:	4770      	bx	lr
 80025ba:	bf00      	nop

080025bc <GPIO_ReadOutputDataBit>:
 80025bc:	8a83      	ldrh	r3, [r0, #20]
 80025be:	4219      	tst	r1, r3
 80025c0:	bf0c      	ite	eq
 80025c2:	2000      	moveq	r0, #0
 80025c4:	2001      	movne	r0, #1
 80025c6:	4770      	bx	lr

080025c8 <GPIO_ReadOutputData>:
 80025c8:	8a80      	ldrh	r0, [r0, #20]
 80025ca:	b280      	uxth	r0, r0
 80025cc:	4770      	bx	lr
 80025ce:	bf00      	nop

080025d0 <GPIO_SetBits>:
 80025d0:	6181      	str	r1, [r0, #24]
 80025d2:	4770      	bx	lr

080025d4 <GPIO_ResetBits>:
 80025d4:	8501      	strh	r1, [r0, #40]	; 0x28
 80025d6:	4770      	bx	lr

080025d8 <GPIO_WriteBit>:
 80025d8:	b90a      	cbnz	r2, 80025de <GPIO_WriteBit+0x6>
 80025da:	8501      	strh	r1, [r0, #40]	; 0x28
 80025dc:	4770      	bx	lr
 80025de:	6181      	str	r1, [r0, #24]
 80025e0:	4770      	bx	lr
 80025e2:	bf00      	nop

080025e4 <GPIO_Write>:
 80025e4:	8281      	strh	r1, [r0, #20]
 80025e6:	4770      	bx	lr

080025e8 <GPIO_PinAFConfig>:
 80025e8:	08cb      	lsrs	r3, r1, #3
 80025ea:	3308      	adds	r3, #8
 80025ec:	f001 0107 	and.w	r1, r1, #7
 80025f0:	b430      	push	{r4, r5}
 80025f2:	0089      	lsls	r1, r1, #2
 80025f4:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
 80025f8:	240f      	movs	r4, #15
 80025fa:	408c      	lsls	r4, r1
 80025fc:	ea25 0404 	bic.w	r4, r5, r4
 8002600:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
 8002604:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
 8002608:	fa12 f101 	lsls.w	r1, r2, r1
 800260c:	430c      	orrs	r4, r1
 800260e:	f840 4023 	str.w	r4, [r0, r3, lsl #2]
 8002612:	bc30      	pop	{r4, r5}
 8002614:	4770      	bx	lr
 8002616:	bf00      	nop

08002618 <RCC_DeInit>:
 8002618:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800261c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002620:	f44f 4240 	mov.w	r2, #49152	; 0xc000
 8002624:	6819      	ldr	r1, [r3, #0]
 8002626:	f041 0101 	orr.w	r1, r1, #1
 800262a:	6019      	str	r1, [r3, #0]
 800262c:	6859      	ldr	r1, [r3, #4]
 800262e:	f6cf 02ff 	movt	r2, #63743	; 0xf8ff
 8002632:	400a      	ands	r2, r1
 8002634:	605a      	str	r2, [r3, #4]
 8002636:	681a      	ldr	r2, [r3, #0]
 8002638:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 800263c:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8002640:	601a      	str	r2, [r3, #0]
 8002642:	681a      	ldr	r2, [r3, #0]
 8002644:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002648:	601a      	str	r2, [r3, #0]
 800264a:	685a      	ldr	r2, [r3, #4]
 800264c:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8002650:	605a      	str	r2, [r3, #4]
 8002652:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002654:	f422 527f 	bic.w	r2, r2, #16320	; 0x3fc0
 8002658:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 800265c:	62da      	str	r2, [r3, #44]	; 0x2c
 800265e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002660:	f64f 42cc 	movw	r2, #64716	; 0xfccc
 8002664:	f6c0 7200 	movt	r2, #3840	; 0xf00
 8002668:	400a      	ands	r2, r1
 800266a:	631a      	str	r2, [r3, #48]	; 0x30
 800266c:	2200      	movs	r2, #0
 800266e:	609a      	str	r2, [r3, #8]
 8002670:	4770      	bx	lr
 8002672:	bf00      	nop

08002674 <RCC_HSEConfig>:
 8002674:	f241 0302 	movw	r3, #4098	; 0x1002
 8002678:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800267c:	2200      	movs	r2, #0
 800267e:	701a      	strb	r2, [r3, #0]
 8002680:	7018      	strb	r0, [r3, #0]
 8002682:	4770      	bx	lr

08002684 <RCC_AdjustHSICalibrationValue>:
 8002684:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002688:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800268c:	681a      	ldr	r2, [r3, #0]
 800268e:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8002692:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 8002696:	601a      	str	r2, [r3, #0]
 8002698:	4770      	bx	lr
 800269a:	bf00      	nop

0800269c <RCC_HSICmd>:
 800269c:	2300      	movs	r3, #0
 800269e:	f2c4 2342 	movt	r3, #16962	; 0x4242
 80026a2:	6018      	str	r0, [r3, #0]
 80026a4:	4770      	bx	lr
 80026a6:	bf00      	nop

080026a8 <RCC_LSEConfig>:
 80026a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026ac:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80026b0:	6a1a      	ldr	r2, [r3, #32]
 80026b2:	f022 0201 	bic.w	r2, r2, #1
 80026b6:	621a      	str	r2, [r3, #32]
 80026b8:	6a1a      	ldr	r2, [r3, #32]
 80026ba:	f022 0204 	bic.w	r2, r2, #4
 80026be:	621a      	str	r2, [r3, #32]
 80026c0:	6a1a      	ldr	r2, [r3, #32]
 80026c2:	4302      	orrs	r2, r0
 80026c4:	621a      	str	r2, [r3, #32]
 80026c6:	4770      	bx	lr

080026c8 <RCC_LSEDriveConfig>:
 80026c8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026cc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80026d0:	6a1a      	ldr	r2, [r3, #32]
 80026d2:	f022 0218 	bic.w	r2, r2, #24
 80026d6:	621a      	str	r2, [r3, #32]
 80026d8:	6a1a      	ldr	r2, [r3, #32]
 80026da:	4302      	orrs	r2, r0
 80026dc:	621a      	str	r2, [r3, #32]
 80026de:	4770      	bx	lr

080026e0 <RCC_LSICmd>:
 80026e0:	f44f 6390 	mov.w	r3, #1152	; 0x480
 80026e4:	f2c4 2342 	movt	r3, #16962	; 0x4242
 80026e8:	6018      	str	r0, [r3, #0]
 80026ea:	4770      	bx	lr

080026ec <RCC_PLLConfig>:
 80026ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80026f0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80026f4:	685a      	ldr	r2, [r3, #4]
 80026f6:	f422 1274 	bic.w	r2, r2, #3997696	; 0x3d0000
 80026fa:	605a      	str	r2, [r3, #4]
 80026fc:	685a      	ldr	r2, [r3, #4]
 80026fe:	4302      	orrs	r2, r0
 8002700:	430a      	orrs	r2, r1
 8002702:	605a      	str	r2, [r3, #4]
 8002704:	4770      	bx	lr
 8002706:	bf00      	nop

08002708 <RCC_PLLCmd>:
 8002708:	2360      	movs	r3, #96	; 0x60
 800270a:	f2c4 2342 	movt	r3, #16962	; 0x4242
 800270e:	6018      	str	r0, [r3, #0]
 8002710:	4770      	bx	lr
 8002712:	bf00      	nop

08002714 <RCC_PREDIV1Config>:
 8002714:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002718:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800271c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800271e:	f022 020f 	bic.w	r2, r2, #15
 8002722:	4302      	orrs	r2, r0
 8002724:	62da      	str	r2, [r3, #44]	; 0x2c
 8002726:	4770      	bx	lr

08002728 <RCC_ClockSecuritySystemCmd>:
 8002728:	234c      	movs	r3, #76	; 0x4c
 800272a:	f2c4 2342 	movt	r3, #16962	; 0x4242
 800272e:	6018      	str	r0, [r3, #0]
 8002730:	4770      	bx	lr
 8002732:	bf00      	nop

08002734 <RCC_MCOConfig>:
 8002734:	f241 0307 	movw	r3, #4103	; 0x1007
 8002738:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800273c:	7018      	strb	r0, [r3, #0]
 800273e:	4770      	bx	lr

08002740 <RCC_SYSCLKConfig>:
 8002740:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002744:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002748:	685a      	ldr	r2, [r3, #4]
 800274a:	f022 0203 	bic.w	r2, r2, #3
 800274e:	4302      	orrs	r2, r0
 8002750:	605a      	str	r2, [r3, #4]
 8002752:	4770      	bx	lr

08002754 <RCC_GetSYSCLKSource>:
 8002754:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002758:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800275c:	6858      	ldr	r0, [r3, #4]
 800275e:	f000 000c 	and.w	r0, r0, #12
 8002762:	4770      	bx	lr

08002764 <RCC_HCLKConfig>:
 8002764:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002768:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800276c:	685a      	ldr	r2, [r3, #4]
 800276e:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8002772:	4302      	orrs	r2, r0
 8002774:	605a      	str	r2, [r3, #4]
 8002776:	4770      	bx	lr

08002778 <RCC_PCLK1Config>:
 8002778:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800277c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002780:	685a      	ldr	r2, [r3, #4]
 8002782:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8002786:	4302      	orrs	r2, r0
 8002788:	605a      	str	r2, [r3, #4]
 800278a:	4770      	bx	lr

0800278c <RCC_PCLK2Config>:
 800278c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002790:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002794:	685a      	ldr	r2, [r3, #4]
 8002796:	f422 5260 	bic.w	r2, r2, #14336	; 0x3800
 800279a:	ea42 02c0 	orr.w	r2, r2, r0, lsl #3
 800279e:	605a      	str	r2, [r3, #4]
 80027a0:	4770      	bx	lr
 80027a2:	bf00      	nop

080027a4 <RCC_GetClocksFreq>:
 80027a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80027a8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80027ac:	b4f0      	push	{r4, r5, r6, r7}
 80027ae:	685d      	ldr	r5, [r3, #4]
 80027b0:	f005 050c 	and.w	r5, r5, #12
 80027b4:	2d04      	cmp	r5, #4
 80027b6:	f000 8157 	beq.w	8002a68 <RCC_GetClocksFreq+0x2c4>
 80027ba:	2d08      	cmp	r5, #8
 80027bc:	f000 813e 	beq.w	8002a3c <RCC_GetClocksFreq+0x298>
 80027c0:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 80027c4:	f2c0 017a 	movt	r1, #122	; 0x7a
 80027c8:	6001      	str	r1, [r0, #0]
 80027ca:	2d00      	cmp	r5, #0
 80027cc:	f040 812b 	bne.w	8002a26 <RCC_GetClocksFreq+0x282>
 80027d0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80027d4:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80027d8:	4bab      	ldr	r3, [pc, #684]	; (8002a88 <RCC_GetClocksFreq+0x2e4>)
 80027da:	6854      	ldr	r4, [r2, #4]
 80027dc:	f3c4 1403 	ubfx	r4, r4, #4, #4
 80027e0:	5d1e      	ldrb	r6, [r3, r4]
 80027e2:	fa31 f406 	lsrs.w	r4, r1, r6
 80027e6:	6044      	str	r4, [r0, #4]
 80027e8:	6857      	ldr	r7, [r2, #4]
 80027ea:	f3c7 2702 	ubfx	r7, r7, #8, #3
 80027ee:	5ddf      	ldrb	r7, [r3, r7]
 80027f0:	fa34 f707 	lsrs.w	r7, r4, r7
 80027f4:	6087      	str	r7, [r0, #8]
 80027f6:	6857      	ldr	r7, [r2, #4]
 80027f8:	f3c7 27c2 	ubfx	r7, r7, #11, #3
 80027fc:	5ddf      	ldrb	r7, [r3, r7]
 80027fe:	40fc      	lsrs	r4, r7
 8002800:	60c4      	str	r4, [r0, #12]
 8002802:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8002804:	f3c2 1204 	ubfx	r2, r2, #4, #5
 8002808:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 800280c:	8a12      	ldrh	r2, [r2, #16]
 800280e:	b292      	uxth	r2, r2
 8002810:	f012 0f10 	tst.w	r2, #16
 8002814:	bf1c      	itt	ne
 8002816:	fbb5 f2f2 	udivne	r2, r5, r2
 800281a:	6102      	strne	r2, [r0, #16]
 800281c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8002820:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8002824:	bf08      	it	eq
 8002826:	6101      	streq	r1, [r0, #16]
 8002828:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800282a:	f3c2 2244 	ubfx	r2, r2, #9, #5
 800282e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8002832:	8a1b      	ldrh	r3, [r3, #16]
 8002834:	b29b      	uxth	r3, r3
 8002836:	06da      	lsls	r2, r3, #27
 8002838:	bf44      	itt	mi
 800283a:	fbb5 f3f3 	udivmi	r3, r5, r3
 800283e:	6143      	strmi	r3, [r0, #20]
 8002840:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002844:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002848:	bf58      	it	pl
 800284a:	6141      	strpl	r1, [r0, #20]
 800284c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800284e:	06da      	lsls	r2, r3, #27
 8002850:	bf5e      	ittt	pl
 8002852:	f44f 5390 	movpl.w	r3, #4608	; 0x1200
 8002856:	f2c0 037a 	movtpl	r3, #122	; 0x7a
 800285a:	6183      	strpl	r3, [r0, #24]
 800285c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002860:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002864:	bf48      	it	mi
 8002866:	6181      	strmi	r1, [r0, #24]
 8002868:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800286a:	069b      	lsls	r3, r3, #26
 800286c:	bf5e      	ittt	pl
 800286e:	f44f 5390 	movpl.w	r3, #4608	; 0x1200
 8002872:	f2c0 037a 	movtpl	r3, #122	; 0x7a
 8002876:	61c3      	strpl	r3, [r0, #28]
 8002878:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800287c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002880:	bf48      	it	mi
 8002882:	61c1      	strmi	r1, [r0, #28]
 8002884:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002886:	05da      	lsls	r2, r3, #23
 8002888:	d504      	bpl.n	8002894 <RCC_GetClocksFreq+0xf0>
 800288a:	428d      	cmp	r5, r1
 800288c:	bf08      	it	eq
 800288e:	42b7      	cmpeq	r7, r6
 8002890:	f000 80cb 	beq.w	8002a2a <RCC_GetClocksFreq+0x286>
 8002894:	6204      	str	r4, [r0, #32]
 8002896:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800289a:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800289e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028a0:	059b      	lsls	r3, r3, #22
 80028a2:	d504      	bpl.n	80028ae <RCC_GetClocksFreq+0x10a>
 80028a4:	428d      	cmp	r5, r1
 80028a6:	bf08      	it	eq
 80028a8:	42b7      	cmpeq	r7, r6
 80028aa:	f000 80c1 	beq.w	8002a30 <RCC_GetClocksFreq+0x28c>
 80028ae:	6244      	str	r4, [r0, #36]	; 0x24
 80028b0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80028b4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80028b8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80028ba:	0792      	lsls	r2, r2, #30
 80028bc:	bf08      	it	eq
 80028be:	6284      	streq	r4, [r0, #40]	; 0x28
 80028c0:	d019      	beq.n	80028f6 <RCC_GetClocksFreq+0x152>
 80028c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80028c4:	f002 0203 	and.w	r2, r2, #3
 80028c8:	2a01      	cmp	r2, #1
 80028ca:	bf08      	it	eq
 80028cc:	6281      	streq	r1, [r0, #40]	; 0x28
 80028ce:	d012      	beq.n	80028f6 <RCC_GetClocksFreq+0x152>
 80028d0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80028d2:	f002 0203 	and.w	r2, r2, #3
 80028d6:	2a02      	cmp	r2, #2
 80028d8:	bf04      	itt	eq
 80028da:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
 80028de:	6283      	streq	r3, [r0, #40]	; 0x28
 80028e0:	d009      	beq.n	80028f6 <RCC_GetClocksFreq+0x152>
 80028e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028e4:	f003 0303 	and.w	r3, r3, #3
 80028e8:	2b03      	cmp	r3, #3
 80028ea:	bf02      	ittt	eq
 80028ec:	f44f 5390 	moveq.w	r3, #4608	; 0x1200
 80028f0:	f2c0 037a 	movteq	r3, #122	; 0x7a
 80028f4:	6283      	streq	r3, [r0, #40]	; 0x28
 80028f6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80028fa:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80028fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002900:	f412 3f40 	tst.w	r2, #196608	; 0x30000
 8002904:	d13b      	bne.n	800297e <RCC_GetClocksFreq+0x1da>
 8002906:	6883      	ldr	r3, [r0, #8]
 8002908:	62c3      	str	r3, [r0, #44]	; 0x2c
 800290a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800290e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002912:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002914:	f412 2f40 	tst.w	r2, #786432	; 0xc0000
 8002918:	d169      	bne.n	80029ee <RCC_GetClocksFreq+0x24a>
 800291a:	6883      	ldr	r3, [r0, #8]
 800291c:	6303      	str	r3, [r0, #48]	; 0x30
 800291e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002922:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002926:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002928:	f412 1f40 	tst.w	r2, #3145728	; 0x300000
 800292c:	d143      	bne.n	80029b6 <RCC_GetClocksFreq+0x212>
 800292e:	6883      	ldr	r3, [r0, #8]
 8002930:	6343      	str	r3, [r0, #52]	; 0x34
 8002932:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002936:	f2c4 0302 	movt	r3, #16386	; 0x4002
 800293a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800293c:	f412 0f40 	tst.w	r2, #12582912	; 0xc00000
 8002940:	d079      	beq.n	8002a36 <RCC_GetClocksFreq+0x292>
 8002942:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002944:	f402 0240 	and.w	r2, r2, #12582912	; 0xc00000
 8002948:	f5b2 0f80 	cmp.w	r2, #4194304	; 0x400000
 800294c:	f000 80a5 	beq.w	8002a9a <RCC_GetClocksFreq+0x2f6>
 8002950:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002952:	f402 0240 	and.w	r2, r2, #12582912	; 0xc00000
 8002956:	f5b2 0f00 	cmp.w	r2, #8388608	; 0x800000
 800295a:	bf04      	itt	eq
 800295c:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
 8002960:	6383      	streq	r3, [r0, #56]	; 0x38
 8002962:	d00a      	beq.n	800297a <RCC_GetClocksFreq+0x1d6>
 8002964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002966:	f403 0340 	and.w	r3, r3, #12582912	; 0xc00000
 800296a:	f5b3 0f40 	cmp.w	r3, #12582912	; 0xc00000
 800296e:	bf02      	ittt	eq
 8002970:	f44f 5390 	moveq.w	r3, #4608	; 0x1200
 8002974:	f2c0 037a 	movteq	r3, #122	; 0x7a
 8002978:	6383      	streq	r3, [r0, #56]	; 0x38
 800297a:	bcf0      	pop	{r4, r5, r6, r7}
 800297c:	4770      	bx	lr
 800297e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002980:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002984:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8002988:	d078      	beq.n	8002a7c <RCC_GetClocksFreq+0x2d8>
 800298a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800298c:	f402 3240 	and.w	r2, r2, #196608	; 0x30000
 8002990:	f5b2 3f00 	cmp.w	r2, #131072	; 0x20000
 8002994:	bf04      	itt	eq
 8002996:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
 800299a:	62c3      	streq	r3, [r0, #44]	; 0x2c
 800299c:	d0b5      	beq.n	800290a <RCC_GetClocksFreq+0x166>
 800299e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029a0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80029a4:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 80029a8:	bf02      	ittt	eq
 80029aa:	f44f 5390 	moveq.w	r3, #4608	; 0x1200
 80029ae:	f2c0 037a 	movteq	r3, #122	; 0x7a
 80029b2:	62c3      	streq	r3, [r0, #44]	; 0x2c
 80029b4:	e7a9      	b.n	800290a <RCC_GetClocksFreq+0x166>
 80029b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029b8:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80029bc:	f5b2 1f80 	cmp.w	r2, #1048576	; 0x100000
 80029c0:	d05f      	beq.n	8002a82 <RCC_GetClocksFreq+0x2de>
 80029c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029c4:	f402 1240 	and.w	r2, r2, #3145728	; 0x300000
 80029c8:	f5b2 1f00 	cmp.w	r2, #2097152	; 0x200000
 80029cc:	bf04      	itt	eq
 80029ce:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
 80029d2:	6343      	streq	r3, [r0, #52]	; 0x34
 80029d4:	d0ad      	beq.n	8002932 <RCC_GetClocksFreq+0x18e>
 80029d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029d8:	f403 1340 	and.w	r3, r3, #3145728	; 0x300000
 80029dc:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80029e0:	bf02      	ittt	eq
 80029e2:	f44f 5390 	moveq.w	r3, #4608	; 0x1200
 80029e6:	f2c0 037a 	movteq	r3, #122	; 0x7a
 80029ea:	6343      	streq	r3, [r0, #52]	; 0x34
 80029ec:	e7a1      	b.n	8002932 <RCC_GetClocksFreq+0x18e>
 80029ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029f0:	f402 2240 	and.w	r2, r2, #786432	; 0xc0000
 80029f4:	f5b2 2f80 	cmp.w	r2, #262144	; 0x40000
 80029f8:	d03d      	beq.n	8002a76 <RCC_GetClocksFreq+0x2d2>
 80029fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80029fc:	f402 2240 	and.w	r2, r2, #786432	; 0xc0000
 8002a00:	f5b2 2f00 	cmp.w	r2, #524288	; 0x80000
 8002a04:	bf04      	itt	eq
 8002a06:	f44f 4300 	moveq.w	r3, #32768	; 0x8000
 8002a0a:	6303      	streq	r3, [r0, #48]	; 0x30
 8002a0c:	d087      	beq.n	800291e <RCC_GetClocksFreq+0x17a>
 8002a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a10:	f403 2340 	and.w	r3, r3, #786432	; 0xc0000
 8002a14:	f5b3 2f40 	cmp.w	r3, #786432	; 0xc0000
 8002a18:	bf02      	ittt	eq
 8002a1a:	f44f 5390 	moveq.w	r3, #4608	; 0x1200
 8002a1e:	f2c0 037a 	movteq	r3, #122	; 0x7a
 8002a22:	6303      	streq	r3, [r0, #48]	; 0x30
 8002a24:	e77b      	b.n	800291e <RCC_GetClocksFreq+0x17a>
 8002a26:	2500      	movs	r5, #0
 8002a28:	e6d2      	b.n	80027d0 <RCC_GetClocksFreq+0x2c>
 8002a2a:	006b      	lsls	r3, r5, #1
 8002a2c:	6203      	str	r3, [r0, #32]
 8002a2e:	e732      	b.n	8002896 <RCC_GetClocksFreq+0xf2>
 8002a30:	006d      	lsls	r5, r5, #1
 8002a32:	6245      	str	r5, [r0, #36]	; 0x24
 8002a34:	e73c      	b.n	80028b0 <RCC_GetClocksFreq+0x10c>
 8002a36:	6883      	ldr	r3, [r0, #8]
 8002a38:	6383      	str	r3, [r0, #56]	; 0x38
 8002a3a:	e79e      	b.n	800297a <RCC_GetClocksFreq+0x1d6>
 8002a3c:	685a      	ldr	r2, [r3, #4]
 8002a3e:	6859      	ldr	r1, [r3, #4]
 8002a40:	f3c2 4283 	ubfx	r2, r2, #18, #4
 8002a44:	3202      	adds	r2, #2
 8002a46:	03c9      	lsls	r1, r1, #15
 8002a48:	d520      	bpl.n	8002a8c <RCC_GetClocksFreq+0x2e8>
 8002a4a:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8002a4c:	f44f 5390 	mov.w	r3, #4608	; 0x1200
 8002a50:	f005 050f 	and.w	r5, r5, #15
 8002a54:	3501      	adds	r5, #1
 8002a56:	f2c0 037a 	movt	r3, #122	; 0x7a
 8002a5a:	fbb3 f5f5 	udiv	r5, r3, r5
 8002a5e:	fb02 f505 	mul.w	r5, r2, r5
 8002a62:	6005      	str	r5, [r0, #0]
 8002a64:	4629      	mov	r1, r5
 8002a66:	e6b3      	b.n	80027d0 <RCC_GetClocksFreq+0x2c>
 8002a68:	f44f 5190 	mov.w	r1, #4608	; 0x1200
 8002a6c:	f2c0 017a 	movt	r1, #122	; 0x7a
 8002a70:	6001      	str	r1, [r0, #0]
 8002a72:	2500      	movs	r5, #0
 8002a74:	e6ac      	b.n	80027d0 <RCC_GetClocksFreq+0x2c>
 8002a76:	6803      	ldr	r3, [r0, #0]
 8002a78:	6303      	str	r3, [r0, #48]	; 0x30
 8002a7a:	e750      	b.n	800291e <RCC_GetClocksFreq+0x17a>
 8002a7c:	6803      	ldr	r3, [r0, #0]
 8002a7e:	62c3      	str	r3, [r0, #44]	; 0x2c
 8002a80:	e743      	b.n	800290a <RCC_GetClocksFreq+0x166>
 8002a82:	6803      	ldr	r3, [r0, #0]
 8002a84:	6343      	str	r3, [r0, #52]	; 0x34
 8002a86:	e754      	b.n	8002932 <RCC_GetClocksFreq+0x18e>
 8002a88:	20000014 	.word	0x20000014
 8002a8c:	f44f 6510 	mov.w	r5, #2304	; 0x900
 8002a90:	f2c0 053d 	movt	r5, #61	; 0x3d
 8002a94:	fb05 f502 	mul.w	r5, r5, r2
 8002a98:	e7e3      	b.n	8002a62 <RCC_GetClocksFreq+0x2be>
 8002a9a:	6803      	ldr	r3, [r0, #0]
 8002a9c:	6383      	str	r3, [r0, #56]	; 0x38
 8002a9e:	e76c      	b.n	800297a <RCC_GetClocksFreq+0x1d6>

08002aa0 <RCC_ADCCLKConfig>:
 8002aa0:	0f03      	lsrs	r3, r0, #28
 8002aa2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002aa6:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002aaa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002aac:	bf14      	ite	ne
 8002aae:	f422 5278 	bicne.w	r2, r2, #15872	; 0x3e00
 8002ab2:	f422 72f8 	biceq.w	r2, r2, #496	; 0x1f0
 8002ab6:	62da      	str	r2, [r3, #44]	; 0x2c
 8002ab8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002abc:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002ac0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002ac2:	4310      	orrs	r0, r2
 8002ac4:	62d8      	str	r0, [r3, #44]	; 0x2c
 8002ac6:	4770      	bx	lr

08002ac8 <RCC_I2CCLKConfig>:
 8002ac8:	0f03      	lsrs	r3, r0, #28
 8002aca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ace:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002ad2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ad4:	bf14      	ite	ne
 8002ad6:	f022 0220 	bicne.w	r2, r2, #32
 8002ada:	f022 0210 	biceq.w	r2, r2, #16
 8002ade:	631a      	str	r2, [r3, #48]	; 0x30
 8002ae0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ae4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002ae8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002aea:	4310      	orrs	r0, r2
 8002aec:	6318      	str	r0, [r3, #48]	; 0x30
 8002aee:	4770      	bx	lr

08002af0 <RCC_TIMCLKConfig>:
 8002af0:	0f03      	lsrs	r3, r0, #28
 8002af2:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002af6:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002afa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002afc:	bf14      	ite	ne
 8002afe:	f422 7200 	bicne.w	r2, r2, #512	; 0x200
 8002b02:	f422 7280 	biceq.w	r2, r2, #256	; 0x100
 8002b06:	631a      	str	r2, [r3, #48]	; 0x30
 8002b08:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b0c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b10:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b12:	4310      	orrs	r0, r2
 8002b14:	6318      	str	r0, [r3, #48]	; 0x30
 8002b16:	4770      	bx	lr

08002b18 <RCC_USARTCLKConfig>:
 8002b18:	0f03      	lsrs	r3, r0, #28
 8002b1a:	3b01      	subs	r3, #1
 8002b1c:	2b04      	cmp	r3, #4
 8002b1e:	d80c      	bhi.n	8002b3a <RCC_USARTCLKConfig+0x22>
 8002b20:	e8df f003 	tbb	[pc, r3]
 8002b24:	2e251c03 	.word	0x2e251c03
 8002b28:	13          	.byte	0x13
 8002b29:	00          	.byte	0x00
 8002b2a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b2e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b34:	f022 0203 	bic.w	r2, r2, #3
 8002b38:	631a      	str	r2, [r3, #48]	; 0x30
 8002b3a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b3e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b44:	4310      	orrs	r0, r2
 8002b46:	6318      	str	r0, [r3, #48]	; 0x30
 8002b48:	4770      	bx	lr
 8002b4a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b4e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b54:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8002b58:	631a      	str	r2, [r3, #48]	; 0x30
 8002b5a:	e7ee      	b.n	8002b3a <RCC_USARTCLKConfig+0x22>
 8002b5c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b60:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b66:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8002b6a:	631a      	str	r2, [r3, #48]	; 0x30
 8002b6c:	e7e5      	b.n	8002b3a <RCC_USARTCLKConfig+0x22>
 8002b6e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b72:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b76:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b78:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8002b7c:	631a      	str	r2, [r3, #48]	; 0x30
 8002b7e:	e7dc      	b.n	8002b3a <RCC_USARTCLKConfig+0x22>
 8002b80:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002b84:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002b88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b8a:	f422 1240 	bic.w	r2, r2, #3145728	; 0x300000
 8002b8e:	631a      	str	r2, [r3, #48]	; 0x30
 8002b90:	e7d3      	b.n	8002b3a <RCC_USARTCLKConfig+0x22>
 8002b92:	bf00      	nop

08002b94 <RCC_USBCLKConfig>:
 8002b94:	23d8      	movs	r3, #216	; 0xd8
 8002b96:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8002b9a:	6018      	str	r0, [r3, #0]
 8002b9c:	4770      	bx	lr
 8002b9e:	bf00      	nop

08002ba0 <RCC_RTCCLKConfig>:
 8002ba0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ba4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002ba8:	6a1a      	ldr	r2, [r3, #32]
 8002baa:	4302      	orrs	r2, r0
 8002bac:	621a      	str	r2, [r3, #32]
 8002bae:	4770      	bx	lr

08002bb0 <RCC_I2SCLKConfig>:
 8002bb0:	23dc      	movs	r3, #220	; 0xdc
 8002bb2:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8002bb6:	6018      	str	r0, [r3, #0]
 8002bb8:	4770      	bx	lr
 8002bba:	bf00      	nop

08002bbc <RCC_RTCCLKCmd>:
 8002bbc:	f240 433c 	movw	r3, #1084	; 0x43c
 8002bc0:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8002bc4:	6018      	str	r0, [r3, #0]
 8002bc6:	4770      	bx	lr

08002bc8 <RCC_BackupResetCmd>:
 8002bc8:	f44f 6388 	mov.w	r3, #1088	; 0x440
 8002bcc:	f2c4 2342 	movt	r3, #16962	; 0x4242
 8002bd0:	6018      	str	r0, [r3, #0]
 8002bd2:	4770      	bx	lr

08002bd4 <RCC_AHBPeriphClockCmd>:
 8002bd4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002bd8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002bdc:	695a      	ldr	r2, [r3, #20]
 8002bde:	b919      	cbnz	r1, 8002be8 <RCC_AHBPeriphClockCmd+0x14>
 8002be0:	ea22 0000 	bic.w	r0, r2, r0
 8002be4:	6158      	str	r0, [r3, #20]
 8002be6:	4770      	bx	lr
 8002be8:	4310      	orrs	r0, r2
 8002bea:	6158      	str	r0, [r3, #20]
 8002bec:	4770      	bx	lr
 8002bee:	bf00      	nop

08002bf0 <RCC_APB2PeriphClockCmd>:
 8002bf0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002bf4:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002bf8:	699a      	ldr	r2, [r3, #24]
 8002bfa:	b919      	cbnz	r1, 8002c04 <RCC_APB2PeriphClockCmd+0x14>
 8002bfc:	ea22 0000 	bic.w	r0, r2, r0
 8002c00:	6198      	str	r0, [r3, #24]
 8002c02:	4770      	bx	lr
 8002c04:	4310      	orrs	r0, r2
 8002c06:	6198      	str	r0, [r3, #24]
 8002c08:	4770      	bx	lr
 8002c0a:	bf00      	nop

08002c0c <RCC_APB1PeriphClockCmd>:
 8002c0c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c10:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002c14:	69da      	ldr	r2, [r3, #28]
 8002c16:	b919      	cbnz	r1, 8002c20 <RCC_APB1PeriphClockCmd+0x14>
 8002c18:	ea22 0000 	bic.w	r0, r2, r0
 8002c1c:	61d8      	str	r0, [r3, #28]
 8002c1e:	4770      	bx	lr
 8002c20:	4310      	orrs	r0, r2
 8002c22:	61d8      	str	r0, [r3, #28]
 8002c24:	4770      	bx	lr
 8002c26:	bf00      	nop

08002c28 <RCC_AHBPeriphResetCmd>:
 8002c28:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c2c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002c30:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002c32:	b919      	cbnz	r1, 8002c3c <RCC_AHBPeriphResetCmd+0x14>
 8002c34:	ea22 0000 	bic.w	r0, r2, r0
 8002c38:	6298      	str	r0, [r3, #40]	; 0x28
 8002c3a:	4770      	bx	lr
 8002c3c:	4310      	orrs	r0, r2
 8002c3e:	6298      	str	r0, [r3, #40]	; 0x28
 8002c40:	4770      	bx	lr
 8002c42:	bf00      	nop

08002c44 <RCC_APB2PeriphResetCmd>:
 8002c44:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c48:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002c4c:	68da      	ldr	r2, [r3, #12]
 8002c4e:	b919      	cbnz	r1, 8002c58 <RCC_APB2PeriphResetCmd+0x14>
 8002c50:	ea22 0000 	bic.w	r0, r2, r0
 8002c54:	60d8      	str	r0, [r3, #12]
 8002c56:	4770      	bx	lr
 8002c58:	4310      	orrs	r0, r2
 8002c5a:	60d8      	str	r0, [r3, #12]
 8002c5c:	4770      	bx	lr
 8002c5e:	bf00      	nop

08002c60 <RCC_APB1PeriphResetCmd>:
 8002c60:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002c64:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002c68:	691a      	ldr	r2, [r3, #16]
 8002c6a:	b919      	cbnz	r1, 8002c74 <RCC_APB1PeriphResetCmd+0x14>
 8002c6c:	ea22 0000 	bic.w	r0, r2, r0
 8002c70:	6118      	str	r0, [r3, #16]
 8002c72:	4770      	bx	lr
 8002c74:	4310      	orrs	r0, r2
 8002c76:	6118      	str	r0, [r3, #16]
 8002c78:	4770      	bx	lr
 8002c7a:	bf00      	nop

08002c7c <RCC_ITConfig>:
 8002c7c:	f241 0309 	movw	r3, #4105	; 0x1009
 8002c80:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002c84:	781a      	ldrb	r2, [r3, #0]
 8002c86:	b919      	cbnz	r1, 8002c90 <RCC_ITConfig+0x14>
 8002c88:	ea22 0000 	bic.w	r0, r2, r0
 8002c8c:	7018      	strb	r0, [r3, #0]
 8002c8e:	4770      	bx	lr
 8002c90:	4310      	orrs	r0, r2
 8002c92:	7018      	strb	r0, [r3, #0]
 8002c94:	4770      	bx	lr
 8002c96:	bf00      	nop

08002c98 <RCC_GetFlagStatus>:
 8002c98:	0943      	lsrs	r3, r0, #5
 8002c9a:	d10b      	bne.n	8002cb4 <RCC_GetFlagStatus+0x1c>
 8002c9c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002ca0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002ca4:	681b      	ldr	r3, [r3, #0]
 8002ca6:	f000 001f 	and.w	r0, r0, #31
 8002caa:	fa33 f000 	lsrs.w	r0, r3, r0
 8002cae:	f000 0001 	and.w	r0, r0, #1
 8002cb2:	4770      	bx	lr
 8002cb4:	2b01      	cmp	r3, #1
 8002cb6:	d008      	beq.n	8002cca <RCC_GetFlagStatus+0x32>
 8002cb8:	2b04      	cmp	r3, #4
 8002cba:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002cbe:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002cc2:	bf0c      	ite	eq
 8002cc4:	685b      	ldreq	r3, [r3, #4]
 8002cc6:	6a5b      	ldrne	r3, [r3, #36]	; 0x24
 8002cc8:	e7ed      	b.n	8002ca6 <RCC_GetFlagStatus+0xe>
 8002cca:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002cce:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002cd2:	6a1b      	ldr	r3, [r3, #32]
 8002cd4:	e7e7      	b.n	8002ca6 <RCC_GetFlagStatus+0xe>
 8002cd6:	bf00      	nop

08002cd8 <RCC_WaitForHSEStartUp>:
 8002cd8:	b500      	push	{lr}
 8002cda:	b083      	sub	sp, #12
 8002cdc:	2300      	movs	r3, #0
 8002cde:	9301      	str	r3, [sp, #4]
 8002ce0:	e000      	b.n	8002ce4 <RCC_WaitForHSEStartUp+0xc>
 8002ce2:	b948      	cbnz	r0, 8002cf8 <RCC_WaitForHSEStartUp+0x20>
 8002ce4:	2011      	movs	r0, #17
 8002ce6:	f7ff ffd7 	bl	8002c98 <RCC_GetFlagStatus>
 8002cea:	9b01      	ldr	r3, [sp, #4]
 8002cec:	3301      	adds	r3, #1
 8002cee:	9301      	str	r3, [sp, #4]
 8002cf0:	9b01      	ldr	r3, [sp, #4]
 8002cf2:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8002cf6:	d1f4      	bne.n	8002ce2 <RCC_WaitForHSEStartUp+0xa>
 8002cf8:	2011      	movs	r0, #17
 8002cfa:	f7ff ffcd 	bl	8002c98 <RCC_GetFlagStatus>
 8002cfe:	3000      	adds	r0, #0
 8002d00:	bf18      	it	ne
 8002d02:	2001      	movne	r0, #1
 8002d04:	b003      	add	sp, #12
 8002d06:	bd00      	pop	{pc}

08002d08 <RCC_ClearFlag>:
 8002d08:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002d0c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002d10:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002d12:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8002d16:	625a      	str	r2, [r3, #36]	; 0x24
 8002d18:	4770      	bx	lr
 8002d1a:	bf00      	nop

08002d1c <RCC_GetITStatus>:
 8002d1c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002d20:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002d24:	689b      	ldr	r3, [r3, #8]
 8002d26:	4218      	tst	r0, r3
 8002d28:	bf0c      	ite	eq
 8002d2a:	2000      	moveq	r0, #0
 8002d2c:	2001      	movne	r0, #1
 8002d2e:	4770      	bx	lr

08002d30 <RCC_ClearITPendingBit>:
 8002d30:	f241 030a 	movw	r3, #4106	; 0x100a
 8002d34:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8002d38:	7018      	strb	r0, [r3, #0]
 8002d3a:	4770      	bx	lr

08002d3c <DAC_DeInit>:
 8002d3c:	b508      	push	{r3, lr}
 8002d3e:	2101      	movs	r1, #1
 8002d40:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
 8002d44:	f7ff ff8c 	bl	8002c60 <RCC_APB1PeriphResetCmd>
 8002d48:	f04f 5000 	mov.w	r0, #536870912	; 0x20000000
 8002d4c:	2100      	movs	r1, #0
 8002d4e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002d52:	f7ff bf85 	b.w	8002c60 <RCC_APB1PeriphResetCmd>
 8002d56:	bf00      	nop

08002d58 <DAC_Init>:
 8002d58:	b470      	push	{r4, r5, r6}
 8002d5a:	e891 0060 	ldmia.w	r1, {r5, r6}
 8002d5e:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002d62:	688c      	ldr	r4, [r1, #8]
 8002d64:	68ca      	ldr	r2, [r1, #12]
 8002d66:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002d6a:	ea46 0105 	orr.w	r1, r6, r5
 8002d6e:	430c      	orrs	r4, r1
 8002d70:	681e      	ldr	r6, [r3, #0]
 8002d72:	f640 75fe 	movw	r5, #4094	; 0xffe
 8002d76:	4085      	lsls	r5, r0
 8002d78:	4322      	orrs	r2, r4
 8002d7a:	ea26 0505 	bic.w	r5, r6, r5
 8002d7e:	fa12 f000 	lsls.w	r0, r2, r0
 8002d82:	4328      	orrs	r0, r5
 8002d84:	6018      	str	r0, [r3, #0]
 8002d86:	bc70      	pop	{r4, r5, r6}
 8002d88:	4770      	bx	lr
 8002d8a:	bf00      	nop

08002d8c <DAC_StructInit>:
 8002d8c:	2300      	movs	r3, #0
 8002d8e:	6003      	str	r3, [r0, #0]
 8002d90:	6043      	str	r3, [r0, #4]
 8002d92:	6083      	str	r3, [r0, #8]
 8002d94:	60c3      	str	r3, [r0, #12]
 8002d96:	4770      	bx	lr

08002d98 <DAC_Cmd>:
 8002d98:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002d9c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002da0:	681a      	ldr	r2, [r3, #0]
 8002da2:	b931      	cbnz	r1, 8002db2 <DAC_Cmd+0x1a>
 8002da4:	2101      	movs	r1, #1
 8002da6:	fa11 f000 	lsls.w	r0, r1, r0
 8002daa:	ea22 0000 	bic.w	r0, r2, r0
 8002dae:	6018      	str	r0, [r3, #0]
 8002db0:	4770      	bx	lr
 8002db2:	2101      	movs	r1, #1
 8002db4:	fa11 f000 	lsls.w	r0, r1, r0
 8002db8:	4310      	orrs	r0, r2
 8002dba:	6018      	str	r0, [r3, #0]
 8002dbc:	4770      	bx	lr
 8002dbe:	bf00      	nop

08002dc0 <DAC_SoftwareTriggerCmd>:
 8002dc0:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002dc4:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002dc8:	0900      	lsrs	r0, r0, #4
 8002dca:	685a      	ldr	r2, [r3, #4]
 8002dcc:	b931      	cbnz	r1, 8002ddc <DAC_SoftwareTriggerCmd+0x1c>
 8002dce:	2101      	movs	r1, #1
 8002dd0:	fa11 f000 	lsls.w	r0, r1, r0
 8002dd4:	ea22 0000 	bic.w	r0, r2, r0
 8002dd8:	6058      	str	r0, [r3, #4]
 8002dda:	4770      	bx	lr
 8002ddc:	2101      	movs	r1, #1
 8002dde:	fa11 f000 	lsls.w	r0, r1, r0
 8002de2:	4310      	orrs	r0, r2
 8002de4:	6058      	str	r0, [r3, #4]
 8002de6:	4770      	bx	lr

08002de8 <DAC_DualSoftwareTriggerCmd>:
 8002de8:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002dec:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002df0:	685a      	ldr	r2, [r3, #4]
 8002df2:	b918      	cbnz	r0, 8002dfc <DAC_DualSoftwareTriggerCmd+0x14>
 8002df4:	f022 0203 	bic.w	r2, r2, #3
 8002df8:	605a      	str	r2, [r3, #4]
 8002dfa:	4770      	bx	lr
 8002dfc:	f042 0203 	orr.w	r2, r2, #3
 8002e00:	605a      	str	r2, [r3, #4]
 8002e02:	4770      	bx	lr

08002e04 <DAC_WaveGenerationCmd>:
 8002e04:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002e08:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002e0c:	4081      	lsls	r1, r0
 8002e0e:	b922      	cbnz	r2, 8002e1a <DAC_WaveGenerationCmd+0x16>
 8002e10:	681a      	ldr	r2, [r3, #0]
 8002e12:	ea22 0101 	bic.w	r1, r2, r1
 8002e16:	6019      	str	r1, [r3, #0]
 8002e18:	4770      	bx	lr
 8002e1a:	681a      	ldr	r2, [r3, #0]
 8002e1c:	4311      	orrs	r1, r2
 8002e1e:	6019      	str	r1, [r3, #0]
 8002e20:	4770      	bx	lr
 8002e22:	bf00      	nop

08002e24 <DAC_SetChannel1Data>:
 8002e24:	b082      	sub	sp, #8
 8002e26:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002e2a:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002e2e:	2200      	movs	r2, #0
 8002e30:	9201      	str	r2, [sp, #4]
 8002e32:	9301      	str	r3, [sp, #4]
 8002e34:	9b01      	ldr	r3, [sp, #4]
 8002e36:	3308      	adds	r3, #8
 8002e38:	181b      	adds	r3, r3, r0
 8002e3a:	9301      	str	r3, [sp, #4]
 8002e3c:	9b01      	ldr	r3, [sp, #4]
 8002e3e:	6019      	str	r1, [r3, #0]
 8002e40:	b002      	add	sp, #8
 8002e42:	4770      	bx	lr

08002e44 <DAC_SetChannel2Data>:
 8002e44:	b082      	sub	sp, #8
 8002e46:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002e4a:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002e4e:	2200      	movs	r2, #0
 8002e50:	9201      	str	r2, [sp, #4]
 8002e52:	9301      	str	r3, [sp, #4]
 8002e54:	9b01      	ldr	r3, [sp, #4]
 8002e56:	3314      	adds	r3, #20
 8002e58:	181b      	adds	r3, r3, r0
 8002e5a:	9301      	str	r3, [sp, #4]
 8002e5c:	9b01      	ldr	r3, [sp, #4]
 8002e5e:	6019      	str	r1, [r3, #0]
 8002e60:	b002      	add	sp, #8
 8002e62:	4770      	bx	lr

08002e64 <DAC_SetDualChannelData>:
 8002e64:	f247 4320 	movw	r3, #29728	; 0x7420
 8002e68:	2808      	cmp	r0, #8
 8002e6a:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002e6e:	bf0c      	ite	eq
 8002e70:	ea42 2101 	orreq.w	r1, r2, r1, lsl #8
 8002e74:	ea42 4101 	orrne.w	r1, r2, r1, lsl #16
 8002e78:	50c1      	str	r1, [r0, r3]
 8002e7a:	4770      	bx	lr

08002e7c <DAC_GetDataOutputValue>:
 8002e7c:	b082      	sub	sp, #8
 8002e7e:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002e82:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002e86:	2200      	movs	r2, #0
 8002e88:	9201      	str	r2, [sp, #4]
 8002e8a:	9301      	str	r3, [sp, #4]
 8002e8c:	9b01      	ldr	r3, [sp, #4]
 8002e8e:	332c      	adds	r3, #44	; 0x2c
 8002e90:	eb03 0390 	add.w	r3, r3, r0, lsr #2
 8002e94:	9301      	str	r3, [sp, #4]
 8002e96:	9b01      	ldr	r3, [sp, #4]
 8002e98:	6818      	ldr	r0, [r3, #0]
 8002e9a:	b280      	uxth	r0, r0
 8002e9c:	b002      	add	sp, #8
 8002e9e:	4770      	bx	lr

08002ea0 <DAC_DMACmd>:
 8002ea0:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002ea4:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002ea8:	681a      	ldr	r2, [r3, #0]
 8002eaa:	b939      	cbnz	r1, 8002ebc <DAC_DMACmd+0x1c>
 8002eac:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002eb0:	fa11 f000 	lsls.w	r0, r1, r0
 8002eb4:	ea22 0000 	bic.w	r0, r2, r0
 8002eb8:	6018      	str	r0, [r3, #0]
 8002eba:	4770      	bx	lr
 8002ebc:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002ec0:	fa11 f000 	lsls.w	r0, r1, r0
 8002ec4:	4310      	orrs	r0, r2
 8002ec6:	6018      	str	r0, [r3, #0]
 8002ec8:	4770      	bx	lr
 8002eca:	bf00      	nop

08002ecc <DAC_ITConfig>:
 8002ecc:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002ed0:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002ed4:	4081      	lsls	r1, r0
 8002ed6:	b922      	cbnz	r2, 8002ee2 <DAC_ITConfig+0x16>
 8002ed8:	681a      	ldr	r2, [r3, #0]
 8002eda:	ea22 0101 	bic.w	r1, r2, r1
 8002ede:	6019      	str	r1, [r3, #0]
 8002ee0:	4770      	bx	lr
 8002ee2:	681a      	ldr	r2, [r3, #0]
 8002ee4:	4311      	orrs	r1, r2
 8002ee6:	6019      	str	r1, [r3, #0]
 8002ee8:	4770      	bx	lr
 8002eea:	bf00      	nop

08002eec <DAC_GetFlagStatus>:
 8002eec:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002ef0:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002ef4:	4081      	lsls	r1, r0
 8002ef6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ef8:	4219      	tst	r1, r3
 8002efa:	bf0c      	ite	eq
 8002efc:	2000      	moveq	r0, #0
 8002efe:	2001      	movne	r0, #1
 8002f00:	4770      	bx	lr
 8002f02:	bf00      	nop

08002f04 <DAC_ClearFlag>:
 8002f04:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002f08:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002f0c:	4081      	lsls	r1, r0
 8002f0e:	6359      	str	r1, [r3, #52]	; 0x34
 8002f10:	4770      	bx	lr
 8002f12:	bf00      	nop

08002f14 <DAC_GetITStatus>:
 8002f14:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002f18:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002f1c:	4081      	lsls	r1, r0
 8002f1e:	681a      	ldr	r2, [r3, #0]
 8002f20:	6b58      	ldr	r0, [r3, #52]	; 0x34
 8002f22:	4008      	ands	r0, r1
 8002f24:	d003      	beq.n	8002f2e <DAC_GetITStatus+0x1a>
 8002f26:	4211      	tst	r1, r2
 8002f28:	bf0c      	ite	eq
 8002f2a:	2000      	moveq	r0, #0
 8002f2c:	2001      	movne	r0, #1
 8002f2e:	4770      	bx	lr

08002f30 <DAC_ClearITPendingBit>:
 8002f30:	f44f 43e8 	mov.w	r3, #29696	; 0x7400
 8002f34:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8002f38:	4081      	lsls	r1, r0
 8002f3a:	6359      	str	r1, [r3, #52]	; 0x34
 8002f3c:	4770      	bx	lr
 8002f3e:	bf00      	nop

08002f40 <main>:
#include"main.h"

int main()
{
 8002f40:	b508      	push	{r3, lr}

	adc_gpio_config();
 8002f42:	f7fd faa7 	bl	8000494 <adc_gpio_config>
	adc12_mode_config();
 8002f46:	f7fd fac7 	bl	80004d8 <adc12_mode_config>
	tim3_config();
 8002f4a:	f7fd fb25 	bl	8000598 <tim3_config>
	dac_config();
 8002f4e:	f7fd fb4f 	bl	80005f0 <dac_config>
	nvic_tim3_config();
 8002f52:	f7fd fb3b 	bl	80005cc <nvic_tim3_config>
	Usart2_Config();
 8002f56:	f7fd f9f5 	bl	8000344 <Usart2_Config>
	pga_config();
 8002f5a:	f7fd fb71 	bl	8000640 <pga_config>
	TIM_Cmd(TIM3, ENABLE);
 8002f5e:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002f62:	f2c4 0000 	movt	r0, #16384	; 0x4000
 8002f66:	2101      	movs	r1, #1
 8002f68:	f7fe f9f4 	bl	8001354 <TIM_Cmd>
	TIM_ITConfig(TIM3, TIM_IT_Update, ENABLE);
 8002f6c:	f44f 6080 	mov.w	r0, #1024	; 0x400
 8002f70:	2101      	movs	r1, #1
 8002f72:	f2c4 0000 	movt	r0, #16384	; 0x4000
 8002f76:	460a      	mov	r2, r1
 8002f78:	f7fe fe8a 	bl	8001c90 <TIM_ITConfig>
 8002f7c:	e7fe      	b.n	8002f7c <main+0x3c>
 8002f7e:	bf00      	nop

08002f80 <Reset_Handler>:
 8002f80:	2100      	movs	r1, #0
 8002f82:	f000 b804 	b.w	8002f8e <LoopCopyDataInit>

08002f86 <CopyDataInit>:
 8002f86:	4b0c      	ldr	r3, [pc, #48]	; (8002fb8 <LoopFillZerobss+0x12>)
 8002f88:	585b      	ldr	r3, [r3, r1]
 8002f8a:	5043      	str	r3, [r0, r1]
 8002f8c:	3104      	adds	r1, #4

08002f8e <LoopCopyDataInit>:
 8002f8e:	480b      	ldr	r0, [pc, #44]	; (8002fbc <LoopFillZerobss+0x16>)
 8002f90:	4b0b      	ldr	r3, [pc, #44]	; (8002fc0 <LoopFillZerobss+0x1a>)
 8002f92:	1842      	adds	r2, r0, r1
 8002f94:	429a      	cmp	r2, r3
 8002f96:	f4ff aff6 	bcc.w	8002f86 <CopyDataInit>
 8002f9a:	4a0a      	ldr	r2, [pc, #40]	; (8002fc4 <LoopFillZerobss+0x1e>)
 8002f9c:	f000 b803 	b.w	8002fa6 <LoopFillZerobss>

08002fa0 <FillZerobss>:
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	f842 3b04 	str.w	r3, [r2], #4

08002fa6 <LoopFillZerobss>:
 8002fa6:	4b08      	ldr	r3, [pc, #32]	; (8002fc8 <LoopFillZerobss+0x22>)
 8002fa8:	429a      	cmp	r2, r3
 8002faa:	f4ff aff9 	bcc.w	8002fa0 <FillZerobss>
 8002fae:	f7fd f923 	bl	80001f8 <SystemInit>
 8002fb2:	f7ff ffc5 	bl	8002f40 <main>
 8002fb6:	4770      	bx	lr
 8002fb8:	08002fd0 	.word	0x08002fd0
 8002fbc:	20000000 	.word	0x20000000
 8002fc0:	20000040 	.word	0x20000040
 8002fc4:	20000040 	.word	0x20000040
 8002fc8:	20000048 	.word	0x20000048

08002fcc <ADC1_2_IRQHandler>:
 8002fcc:	f7ff bffe 	b.w	8002fcc <ADC1_2_IRQHandler>
